ETL Name:	wf_W_DYN_RESTMT_SLS_ADJUSTMENT.xml


Session 1: 	s_m_W_DYN_RESTMT_SLS_ADJUSTMENT
Mapping 1: 	m_W_DYN_RESTMT_SLS_ADJUSTMENTm_W_DYN_RESTMT_SLS_ADJUSTMENT


Source1 Name : SQ_N_DYN_RESTMT_SLS_ADJ_UPLD


Pre SQL : 
DELETE FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT;


SQL Query : 
SELECT 
	 BK_SRC_RPTD_UPLD_BY_CEC_ID   
	,BK_UPLOAD_FILE_NAME          
	,BK_UPLOADED_DTM              
	,BK_UPLOAD_FILE_LINE_NUM_INT  
	,DV_UPLOADED_DT               
	,RESTATEMENT_SUB_TYPE_CD      
	,BOOKINGS_TRX_TYPE_CD         
	,SALES_ORDER_LINE_ID_BIGINT   
	,SRC_RPTD_ORG_SLS_TERR_NAME_CD
	,ALLOCATION_SPLIT_PCT         
	,SRC_RPTD_RSTD_SLS_TERR_NAME_CD
	,SALES_ACCT_ID_BIGINT         
	,SRC_RPTD_CUST_PRTY_ID_BIGINT 
	,DO_NOT_RESTATE_FLG           
	,EFFECTIVE_DT                 
	,EXPIRATION_DT                
	,SRC_RPTD_APPROVED_BY_CEC_ID  
	,APPROVED_DTM                 
	,DV_APPROVED_DT               
	,VALIDATION_STATUS_CD         
	,VALIDATION_STATUS_REASON_DESCR
	,PROCESSED_FLG                
	,SK_TRX_ID_BIGINT             
	,SK_CUST_TRX_LINE_ID_INT      
	,POS_TRX_ID_BIGINT AS BK_POS_TRX_ID_INT     
	,SLS_ADJSTMT_LINE_NUM  AS BK_SALES_ADJ_LINE_NUM_INT    
	,SK_TRX_DISTRI_ID_BIGINT      
	,SRC_RPTD_SLS_ORDER_NUM_BIGINT
	,TOP_BOOKINGS_POS_TRX_ID_BIGINT
	,REASON_COMMENT_TXT           
	,BOOKINGS_TRX_SUB_TYPE_CD
	,CAST(-7777 AS INTEGER) AS AR_TRX_LINE_KEY
	,CAST(-999 AS INTEGER) AS SO_SUBSCR_ITEM_SALES_TRX_KEY 
	,CAST(-999 AS INTEGER) AS REV_TRANSFER_KEY           
	,CAST(-999 AS INTEGER) AS ORIGINAL_SALES_TERR_KEY      
	,CAST(-999 AS INTEGER) AS RESTATED_SALES_TERR_KEY
    ,CAST(-999 AS INTEGER) AS CUST_PRTY_KEY
	,CAST(-999 AS INTEGER) AS SALES_ACCT_GRP_PRTY_KEY
	,CAST(-999 AS INTEGER) AS APPRVD_BY_CSCO_WRKR_PRTY_KEY 
	,CAST(-999 AS INTEGER) AS UPLOADED_BY_CSCO_WRKR_PRTY_KEY
	,SRC_RPTD_SLS_ORDER_NUM_BIGINT AS DV_BOOKINGS_TRX_REF_ID
FROM $$SLSORDVWDB.N_DYN_RESTMT_SLS_ADJ_UPLD
WHERE EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS WHERE JOB_STREAM_ID = 'wf_W_DYN_RESTMT_SLS_ADJUSTMENT' )
AND VALIDATION_STATUS_CD = 'SUCCESS'


Post SQL : 



Target1 Name : WI_DYN_RESTMT_SLS_ADJSTMT


Pre SQL : 



Post SQL : 
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT    WI ,
     $$FINLGLVWDB.N_AR_TRX_LINE NARTL
  SET AR_TRX_LINE_KEY = NARTL.AR_TRX_LINE_KEY
WHERE WI.SK_CUST_TRX_LINE_ID_INT = NARTL.SK_CUSTOMER_TRX_LINE_ID_LINT /*CHANGED ORDER_LINE_ID TO SALES_ORDER_LINE_ID_BIGINT*/
  AND WI.BOOKINGS_TRX_TYPE_CD = 'AR'
  AND WI.BOOKINGS_TRX_SUB_TYPE_CD = 'AR' 
  AND NARTL.SS_CODE = 'CG' ;
 
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT WI ,
     $$FINLGLVWDB.N_REVENUE_TRANSFER NRT
  SET REV_TRANSFER_KEY = NRT.REVENUE_TRANSFER_KEY
WHERE WI.SK_TRX_DISTRI_ID_BIGINT = NRT.SK_TRX_DISTRI_ID_INT
  AND WI.BOOKINGS_TRX_TYPE_CD = 'AR'
  AND WI.BOOKINGS_TRX_SUB_TYPE_CD = 'RTE' 
  AND NRT.SK_TRX_DISTRI_ID_INT <> -999 ;
      
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT   WI ,
     $$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX NXAAS
  SET SO_SUBSCR_ITEM_SALES_TRX_KEY = NXAAS.SO_SBSCRPTN_ITM_SLS_TRX_KEY
WHERE WI.SK_TRX_ID_BIGINT = NXAAS.SK_TRX_ID_INT 
  AND WI.BOOKINGS_TRX_TYPE_CD = 'XAAS' 
  AND NXAAS.SK_TRX_ID_INT <> -999 ;
      
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT   WI ,
     $$COMREFVWDB.N_PARTY NP
  SET CUST_PRTY_KEY = NP.PARTY_KEY
WHERE WI.SRC_RPTD_CUST_PRTY_ID_BIGINT = NP.PARTY_SSOT_PARTY_ID_INT
   AND WI.SRC_RPTD_CUST_PRTY_ID_BIGINT IS NOT NULL 
   AND NP.STATUS_CODE = 'A'
   AND NP.PARTY_TYPE = 'ORGANIZATION' 
   AND NP.SS_CODE IN ( 'CR','CR_MODS') ;
    
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT   WI ,
     $$COMREFVWDB.MT_SLS_ACCT_GROUP_SAV_PARTY SAV
  SET SALES_ACCT_GRP_PRTY_KEY = SAV.SALES_ACCOUNT_GROUP_PARTY_KEY
WHERE WI.SALES_ACCT_ID_BIGINT  = SAV.BK_SALES_ACCOUNT_ID_INT
  AND WI.SALES_ACCT_ID_BIGINT IS NOT NULL 
  AND SAV.BK_SALES_ACCOUNT_ID_INT <> -999;
 
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT WI,
     $$COMREFVWDB.R_SALES_HIERARCHY RSH
  SET ORIGINAL_SALES_TERR_KEY = RSH.SALES_TERRITORY_KEY
WHERE WI.SRC_RPTD_ORG_SLS_TERR_NAME_CD = RSH.SALES_TERRITORY_NAME_CODE
  AND WI.SRC_RPTD_ORG_SLS_TERR_NAME_CD IS NOT NULL
  AND RSH.SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE' ;
 
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT WI,
     $$COMREFVWDB.R_SALES_HIERARCHY RSH
  SET RESTATED_SALES_TERR_KEY = RSH.SALES_TERRITORY_KEY
WHERE WI.SRC_RPTD_RSTD_SLS_TERR_NAME_CD = RSH.SALES_TERRITORY_NAME_CODE
  AND WI.SRC_RPTD_RSTD_SLS_TERR_NAME_CD IS NOT NULL
  AND RSH.SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE' ;
 
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT WI,
     $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCW
  SET APPRVD_BY_CSCO_WRKR_PRTY_KEY = NCW.CISCO_WORKER_PARTY_KEY
WHERE WI.SRC_RPTD_APPROVED_BY_CEC_ID= NCW.CEC_ID
  AND NCW.END_TV_DATE = '3500-01-01' ;
 
UPDATE WI
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT WI,
     $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCW
  SET UPLOADED_BY_CSCO_WRKR_PRTY_KEY = NCW.CISCO_WORKER_PARTY_KEY
WHERE WI.BK_SRC_RPTD_UPLD_BY_CEC_ID = NCW.CEC_ID
  AND NCW.END_TV_DATE = '3500-01-01' ;

CALL COLLECT_STATS_WRAP('$$STGDB','WI_DYN_RESTMT_SLS_ADJSTMT','D');


Source2 Name : SQ_WI_DYN_RESTMT_SLS_ADJSTMT


Pre SQL : 
DELETE FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT_ERP ;


SQL Query : 
SELECT 
	 WI.ORIGINAL_SALES_TERR_KEY       
	,WI.RESTATED_SALES_TERR_KEY       
	,NSOL.SALES_ORDER_LINE_KEY         
	,WI.BOOKINGS_TRX_TYPE_CD AS BK_BOOKINGS_TRX_TYPE_CD       
	,WI.ALLOCATION_SPLIT_PCT AS BK_ALLOCATION_SPLIT_PCT       
	,WI.EFFECTIVE_DT AS BK_EFFECTIVE_DT               
	,WI.SK_TRX_ID_BIGINT              
	,WI.RESTATEMENT_SUB_TYPE_CD       
	,WI.CUST_PRTY_KEY                 
	,WI.DO_NOT_RESTATE_FLG            
	,WI.EXPIRATION_DT                 
	,WI.APPRVD_BY_CSCO_WRKR_PRTY_KEY  
	,WI.UPLOADED_BY_CSCO_WRKR_PRTY_KEY
	,WI.APPROVED_DTM                  
	,WI.DV_APPROVED_DT                
	,WI.BK_UPLOADED_DTM AS UPLOADED_DTM                  
	,WI.DV_UPLOADED_DT                
	,WI.VALIDATION_STATUS_CD          
	,WI.VALIDATION_STATUS_REASON_DESCR
	,WI.BK_UPLOAD_FILE_NAME  AS UPLOAD_FILE_NAME              
	,WI.PROCESSED_FLG    
	,WI.AR_TRX_LINE_KEY               
	,WI.BK_POS_TRX_ID_INT             
	,WI.BK_SALES_ADJ_LINE_NUM_INT     
	,WI.SO_SUBSCR_ITEM_SALES_TRX_KEY  
	,WI.REV_TRANSFER_KEY              
	,WI.SALES_ACCT_GRP_PRTY_KEY       
	,WI.DV_BOOKINGS_TRX_REF_ID
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT WI
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL 
  ON NSOL.BK_SO_NUMBER_INT = WI.SRC_RPTD_SLS_ORDER_NUM_BIGINT
 AND ( CASE WHEN COALESCE(WI.SALES_ORDER_LINE_ID_BIGINT, -9999) < 0 THEN 1 
            ELSE WI.SALES_ORDER_LINE_ID_BIGINT END ) = ( CASE WHEN COALESCE(WI.SALES_ORDER_LINE_ID_BIGINT, -9999) < 0 THEN 1 ELSE NSOL.SK_SO_LINE_ID_INT END ) 
 AND WI.BOOKINGS_TRX_TYPE_CD = 'ERP'


Post SQL : 



Target2 Name : WI_DYN_RESTMT_SLS_ADJSTMT_ERP


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_DYN_RESTMT_SLS_ADJSTMT_ERP','D');


Source3 Name : SQ_WI_DYN_RESTMT_SLS_ADJSTMT_ERP1


Pre SQL : 
DELETE FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT_FNL;


SQL Query : 
SELECT 
	  WI.ORIGINAL_SALES_TERR_KEY       
	 ,WI.RESTATED_SALES_TERR_KEY       
	 ,CAST(-7777 AS INTEGER) AS SALES_ORDER_LINE_KEY   
	 ,WI.BOOKINGS_TRX_TYPE_CD        
	 ,WI.ALLOCATION_SPLIT_PCT         
	 ,WI.EFFECTIVE_DT                
	 ,WI.SK_TRX_ID_BIGINT              
	 ,WI.RESTATEMENT_SUB_TYPE_CD       
	 ,WI.CUST_PRTY_KEY                 
	 ,WI.DO_NOT_RESTATE_FLG            
	 ,WI.EXPIRATION_DT                 
	 ,WI.APPRVD_BY_CSCO_WRKR_PRTY_KEY  
	 ,WI.UPLOADED_BY_CSCO_WRKR_PRTY_KEY
	 ,WI.APPROVED_DTM                  
	 ,WI.DV_APPROVED_DT                
	 ,WI.BK_UPLOADED_DTM AS UPLOADED_DTM                  
	 ,WI.DV_UPLOADED_DT                
	 ,WI.VALIDATION_STATUS_CD          
	 ,WI.VALIDATION_STATUS_REASON_DESCR
	 ,WI.BK_UPLOAD_FILE_NAME  AS UPLOAD_FILE_NAME              
	 ,WI.PROCESSED_FLG    
	 ,WI.AR_TRX_LINE_KEY               
	 ,WI.BK_POS_TRX_ID_INT             
	 ,WI.BK_SALES_ADJ_LINE_NUM_INT     
	 ,WI.SO_SUBSCR_ITEM_SALES_TRX_KEY  
	 ,WI.REV_TRANSFER_KEY              
	 ,WI.SALES_ACCT_GRP_PRTY_KEY        
     ,WI.DV_BOOKINGS_TRX_REF_ID
	FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT WI
	 WHERE WI.BOOKINGS_TRX_TYPE_CD NOT IN ( 'ERP', 'XAAS' )

	UNION ALL

	SELECT 
	  WI.ORIGINAL_SALES_TERR_KEY       
	 ,WI.RESTATED_SALES_TERR_KEY       
	 ,CAST(-7777 AS INTEGER) AS SALES_ORDER_LINE_KEY   
	 ,WI.BOOKINGS_TRX_TYPE_CD        
	 ,WI.ALLOCATION_SPLIT_PCT         
	 ,WI.EFFECTIVE_DT                
	 ,WI.SK_TRX_ID_BIGINT              
	 ,WI.RESTATEMENT_SUB_TYPE_CD       
	 ,WI.CUST_PRTY_KEY                 
	 ,WI.DO_NOT_RESTATE_FLG            
	 ,WI.EXPIRATION_DT                 
	 ,WI.APPRVD_BY_CSCO_WRKR_PRTY_KEY  
	 ,WI.UPLOADED_BY_CSCO_WRKR_PRTY_KEY
	 ,WI.APPROVED_DTM                  
	 ,WI.DV_APPROVED_DT                
	 ,WI.BK_UPLOADED_DTM AS UPLOADED_DTM                  
	 ,WI.DV_UPLOADED_DT                
	 ,WI.VALIDATION_STATUS_CD          
	 ,WI.VALIDATION_STATUS_REASON_DESCR
	 ,WI.BK_UPLOAD_FILE_NAME  AS UPLOAD_FILE_NAME              
	 ,WI.PROCESSED_FLG    
	 ,WI.AR_TRX_LINE_KEY               
	 ,WI.BK_POS_TRX_ID_INT             
	 ,WI.BK_SALES_ADJ_LINE_NUM_INT     
	 ,TRX.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY AS SO_SUBSCR_ITEM_SALES_TRX_KEY  
	 ,WI.REV_TRANSFER_KEY              
	 ,WI.SALES_ACCT_GRP_PRTY_KEY  
	 ,WI.DV_BOOKINGS_TRX_REF_ID 
	FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT WI
	 INNER JOIN ( SELECT DV_SOURCE_ORDER_NUM_INT , DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY, SALES_TERRITORY_KEY
					FROM $$SLSORDVWDB.N_BKGS_MEASURE 
					WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS' GROUP BY 1,2,3 ) TRX
	 ON WI.SRC_RPTD_SLS_ORDER_NUM_BIGINT = TRX.DV_SOURCE_ORDER_NUM_INT
	 AND WI.ORIGINAL_SALES_TERR_KEY = TRX.SALES_TERRITORY_KEY
	 AND ( CASE WHEN COALESCE( WI.SO_SUBSCR_ITEM_SALES_TRX_KEY, -999 ) <0 THEN 1 
				ELSE WI.SO_SUBSCR_ITEM_SALES_TRX_KEY END ) = ( CASE WHEN COALESCE( WI.SO_SUBSCR_ITEM_SALES_TRX_KEY, -999 ) <0  THEN 1 ELSE TRX.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY END )
	 WHERE WI.BOOKINGS_TRX_TYPE_CD = 'XAAS'

	UNION ALL

	SELECT
	 ORIGINAL_SALES_TERR_KEY,
	 RESTATED_SALES_TERR_KEY,
	 SALES_ORDER_LINE_KEY,
	 BK_BOOKINGS_TRX_TYPE_CD,
	 BK_ALLOCATION_SPLIT_PCT,
	 BK_EFFECTIVE_DT,
	 SK_TRX_ID_BIGINT,
	 RESTATEMENT_SUB_TYPE_CD,
	 CUST_PRTY_KEY,
	 DO_NOT_RESTATE_FLG,
	 EXPIRATION_DT,
	 APPRVD_BY_CSCO_WRKR_PRTY_KEY,
	 UPLOADED_BY_CSCO_WRKR_PRTY_KEY,
	 APPROVED_DTM,
	 DV_APPROVED_DT,
	 UPLOADED_DTM,
	 DV_UPLOADED_DT,
	 VALIDATION_STATUS_CD,
	 VALIDATION_STATUS_REASON_DESCR,
	 UPLOAD_FILE_NAME,
	 PROCESSED_FLG,
	 AR_TRX_LINE_KEY,
	 BK_POS_TRX_ID_INT,
	 BK_SALES_ADJ_LINE_NUM_INT,
	 SO_SUBSCR_ITEM_SALES_TRX_KEY,
	 REV_TRANSFER_KEY,
	 SALES_ACCT_GRP_PRTY_KEY,
	 DV_BOOKINGS_TRX_REF_ID
	FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT_ERP


Post SQL : 



Target3 Name : WI_DYN_RESTMT_SLS_ADJSTMT_FNL


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_DYN_RESTMT_SLS_ADJSTMT_FNL','D');


Source4 Name : SQ_WI_DYN_RESTMT_SLS_ADJSTMT_FNL_SM


Pre SQL : 



SQL Query : 
SELECT 
	 ROW_NUMBER() OVER ( ORDER BY WFNL.BK_BOOKINGS_TRX_TYPE_CD ) +  SM_MAX.MAX_SN AS DYN_RESTMT_SLS_ADJSTMT_KEY,
	 WFNL.ORIGINAL_SALES_TERR_KEY,
	 WFNL.RESTATED_SALES_TERR_KEY,
	 WFNL.SALES_ORDER_LINE_KEY,
	 WFNL.BK_BOOKINGS_TRX_TYPE_CD,
	 WFNL.BK_ALLOCATION_SPLIT_PCT,
	 WFNL.BK_EFFECTIVE_DT,
	 WFNL.SK_TRX_ID_BIGINT,
	 WFNL.AR_TRX_LINE_KEY,
	 WFNL.BK_POS_TRX_ID_INT,
	 WFNL.BK_SALES_ADJ_LINE_NUM_INT,
	 WFNL.SO_SUBSCR_ITEM_SALES_TRX_KEY,
	 WFNL.REV_TRANSFER_KEY,
	 WFNL.SALES_ACCT_GRP_PRTY_KEY,
	 CURRENT_TIMESTAMP(0) EDW_CREATE_DTM,
	 USER EDW_CREATE_USER
FROM
   $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT_FNL WFNL,
   ( SELECT COALESCE(MAX(DYN_RESTMT_SLS_ADJSTMT_KEY),100000) MAX_SN 
      FROM $$ETLVWDB.SM_DYN_RESTMT_SLS_ADJSTMT 
    ) SM_MAX
 WHERE NOT EXISTS
 ( SELECT 1 FROM $$ETLVWDB.SM_DYN_RESTMT_SLS_ADJSTMT SM 
    WHERE SM.BK_BOOKINGS_TRX_TYPE_CD = WFNL.BK_BOOKINGS_TRX_TYPE_CD
      AND SM.SALES_ORDER_LINE_KEY = WFNL.SALES_ORDER_LINE_KEY
      AND SM.AR_TRX_LINE_KEY = WFNL.AR_TRX_LINE_KEY
	  AND SM.REV_TRANSFER_KEY = WFNL.REV_TRANSFER_KEY
	  AND SM.BK_POS_TRX_ID_INT = WFNL.BK_POS_TRX_ID_INT
      AND SM.BK_SALES_ADJ_LINE_NUM_INT = WFNL.BK_SALES_ADJ_LINE_NUM_INT
      AND SM.SO_SUBSCR_ITEM_SALES_TRX_KEY = WFNL.SO_SUBSCR_ITEM_SALES_TRX_KEY
	  AND SM.SK_TRX_ID_BIGINT = WFNL.SK_TRX_ID_BIGINT
	  AND SM.ORIGINAL_SALES_TERR_KEY = WFNL.ORIGINAL_SALES_TERR_KEY
      AND SM.BK_EFFECTIVE_DT = WFNL.BK_EFFECTIVE_DT
	  AND SM.RESTATED_SALES_TERR_KEY = WFNL.RESTATED_SALES_TERR_KEY
	  AND SM.BK_ALLOCATION_SPLIT_PCT = WFNL.BK_ALLOCATION_SPLIT_PCT     
      AND SM.SALES_ACCT_GRP_PRTY_KEY = WFNL.SALES_ACCT_GRP_PRTY_KEY 
  )


Post SQL : 



Target4 Name : SM_DYN_RESTMT_SLS_ADJSTMT


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$TRANSLATIONDB','SM_DYN_RESTMT_SLS_ADJSTMT','D');


Source5 Name : SQ_WI_DYN_RESTMT_SLS_ADJSTMT_FNL_W


Pre SQL : 
DELETE FROM $$WORKDB.W_DYN_RESTMT_SLS_ADJSTMT;


SQL Query : 
SELECT 
     WI.DYN_RESTMT_SLS_ADJSTMT_KEY    
    ,WI.ORIGINAL_SALES_TERR_KEY       
    ,WI.RESTATED_SALES_TERR_KEY       
    ,WI.SALES_ORDER_LINE_KEY          
    ,WI.BK_BOOKINGS_TRX_TYPE_CD       
    ,WI.BK_ALLOCATION_SPLIT_PCT       
    ,WI.BK_EFFECTIVE_DT               
    ,WI.SK_TRX_ID_BIGINT              
    ,WI.RESTATEMENT_SUB_TYPE_CD       
    ,WI.CUST_PRTY_KEY                 
    ,WI.DO_NOT_RESTATE_FLG            
    ,WI.EXPIRATION_DT                 
    ,WI.APPRVD_BY_CSCO_WRKR_PRTY_KEY  
    ,WI.UPLOADED_BY_CSCO_WRKR_PRTY_KEY
    ,WI.APPROVED_DTM                  
    ,WI.DV_APPROVED_DT                
    ,WI.UPLOADED_DTM                  
    ,WI.DV_UPLOADED_DT                
    ,WI.VALIDATION_STATUS_CD          
    ,WI.VALIDATION_STATUS_REASON_DESCR
    ,WI.UPLOAD_FILE_NAME              
    ,WI.PROCESSED_FLG                 
    ,WI.AR_TRX_LINE_KEY               
    ,WI.BK_POS_TRX_ID_INT             
    ,WI.BK_SALES_ADJ_LINE_NUM_INT     
    ,WI.SO_SUBSCR_ITEM_SALES_TRX_KEY  
    ,WI.REV_TRANSFER_KEY              
    ,WI.SALES_ACCT_GRP_PRTY_KEY 
	,WI.DV_BOOKINGS_TRX_REF_ID
    ,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM
    ,USER AS EDW_CREATE_USER
    ,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM
    ,USER AS EDW_UPDATE_USER 
    ,WI.ACTION_CODE                   
    ,WI.DML_TYPE 
FROM 
(
SELECT 
     SM.DYN_RESTMT_SLS_ADJSTMT_KEY    
    ,WFNL.ORIGINAL_SALES_TERR_KEY       
    ,WFNL.RESTATED_SALES_TERR_KEY       
    ,WFNL.SALES_ORDER_LINE_KEY          
    ,WFNL.BK_BOOKINGS_TRX_TYPE_CD       
    ,WFNL.BK_ALLOCATION_SPLIT_PCT       
    ,WFNL.BK_EFFECTIVE_DT               
    ,WFNL.SK_TRX_ID_BIGINT              
    ,WFNL.RESTATEMENT_SUB_TYPE_CD       
    ,WFNL.CUST_PRTY_KEY                 
    ,WFNL.DO_NOT_RESTATE_FLG            
    ,WFNL.EXPIRATION_DT                 
    ,WFNL.APPRVD_BY_CSCO_WRKR_PRTY_KEY  
    ,WFNL.UPLOADED_BY_CSCO_WRKR_PRTY_KEY
    ,WFNL.APPROVED_DTM                  
    ,WFNL.DV_APPROVED_DT                
    ,WFNL.UPLOADED_DTM                  
    ,WFNL.DV_UPLOADED_DT                
    ,WFNL.VALIDATION_STATUS_CD          
    ,WFNL.VALIDATION_STATUS_REASON_DESCR
    ,WFNL.UPLOAD_FILE_NAME              
    ,WFNL.PROCESSED_FLG                 
    ,WFNL.AR_TRX_LINE_KEY               
    ,WFNL.BK_POS_TRX_ID_INT             
    ,WFNL.BK_SALES_ADJ_LINE_NUM_INT     
    ,WFNL.SO_SUBSCR_ITEM_SALES_TRX_KEY  
    ,WFNL.REV_TRANSFER_KEY              
    ,WFNL.SALES_ACCT_GRP_PRTY_KEY
	,WFNL.DV_BOOKINGS_TRX_REF_ID
    ,'Y' AS ACTION_CODE                   
    ,'I' AS DML_TYPE                      
FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT_FNL WFNL
INNER JOIN $$ETLVWDB.SM_DYN_RESTMT_SLS_ADJSTMT SM
  ON SM.ORIGINAL_SALES_TERR_KEY= WFNL.ORIGINAL_SALES_TERR_KEY
 AND SM.RESTATED_SALES_TERR_KEY = WFNL.RESTATED_SALES_TERR_KEY
 AND SM.SALES_ORDER_LINE_KEY = WFNL.SALES_ORDER_LINE_KEY
 AND SM.BK_BOOKINGS_TRX_TYPE_CD = WFNL.BK_BOOKINGS_TRX_TYPE_CD
 AND SM.BK_ALLOCATION_SPLIT_PCT = WFNL.BK_ALLOCATION_SPLIT_PCT 
 AND SM.BK_EFFECTIVE_DT = WFNL.BK_EFFECTIVE_DT
 AND SM.SK_TRX_ID_BIGINT = WFNL.SK_TRX_ID_BIGINT
 AND SM.AR_TRX_LINE_KEY = WFNL.AR_TRX_LINE_KEY
 AND SM.BK_POS_TRX_ID_INT = WFNL.BK_POS_TRX_ID_INT
 AND SM.BK_SALES_ADJ_LINE_NUM_INT = WFNL.BK_SALES_ADJ_LINE_NUM_INT
 AND SM.SO_SUBSCR_ITEM_SALES_TRX_KEY = WFNL.SO_SUBSCR_ITEM_SALES_TRX_KEY 
 AND SM.REV_TRANSFER_KEY = WFNL.REV_TRANSFER_KEY
 AND SM.SALES_ACCT_GRP_PRTY_KEY = WFNL.SALES_ACCT_GRP_PRTY_KEY 

UNION ALL

SELECT 
    DYN_RESTMT_SLS_ADJSTMT_KEY    
    ,ND.ORIGINAL_SALES_TERR_KEY       
    ,ND.RESTATED_SALES_TERR_KEY       
    ,ND.SALES_ORDER_LINE_KEY          
    ,ND.BK_BOOKINGS_TRX_TYPE_CD       
    ,ND.BK_ALLOCATION_SPLIT_PCT       
    ,ND.BK_EFFECTIVE_DT               
    ,ND.SK_TRX_ID_BIGINT              
    ,ND.RESTATEMENT_SUB_TYPE_CD       
    ,ND.CUST_PRTY_KEY                 
    ,ND.DO_NOT_RESTATE_FLG            
    ,ND.EXPIRATION_DT                 
    ,ND.APPRVD_BY_CSCO_WRKR_PRTY_KEY  
    ,ND.UPLOADED_BY_CSCO_WRKR_PRTY_KEY
    ,ND.APPROVED_DTM                  
    ,ND.DV_APPROVED_DT                
    ,ND.UPLOADED_DTM                  
    ,ND.DV_UPLOADED_DT                
    ,ND.VALIDATION_STATUS_CD          
    ,ND.VALIDATION_STATUS_REASON_DESCR
    ,ND.UPLOAD_FILE_NAME              
    ,ND.PROCESSED_FLG                 
    ,ND.AR_TRX_LINE_KEY               
    ,ND.BK_POS_TRX_ID_INT             
    ,ND.BK_SALES_ADJ_LINE_NUM_INT     
    ,ND.SO_SUBSCR_ITEM_SALES_TRX_KEY  
    ,ND.REV_TRANSFER_KEY              
    ,ND.SALES_ACCT_GRP_PRTY_KEY 
	,ND.DV_BOOKINGS_TRX_REF_ID
    ,'Y' AS ACTION_CODE                   
    ,'U' AS DML_TYPE                      
FROM $$SLSORDVWDB.N_DYN_RESTMT_SLS_ADJSTMT ND
WHERE EXPIRATION_DT > CURRENT_DATE 
 AND BK_EFFECTIVE_DT < EXPIRATION_DT
 AND EXISTS ( SELECT 1 FROM $$STGDB.WI_DYN_RESTMT_SLS_ADJSTMT_FNL WD
               WHERE WD.BK_BOOKINGS_TRX_TYPE_CD = ND.BK_BOOKINGS_TRX_TYPE_CD
                 AND WD.SALES_ORDER_LINE_KEY = ND.SALES_ORDER_LINE_KEY 
                 AND WD.AR_TRX_LINE_KEY = ND.AR_TRX_LINE_KEY 
                 AND WD.BK_POS_TRX_ID_INT = ND.BK_POS_TRX_ID_INT
                 AND WD.BK_SALES_ADJ_LINE_NUM_INT = ND.BK_SALES_ADJ_LINE_NUM_INT
                 AND WD.SO_SUBSCR_ITEM_SALES_TRX_KEY = ND.SO_SUBSCR_ITEM_SALES_TRX_KEY  
                 AND WD.REV_TRANSFER_KEY = ND.REV_TRANSFER_KEY              
                 AND WD.ORIGINAL_SALES_TERR_KEY = ND.ORIGINAL_SALES_TERR_KEY
                 AND WD.RESTATEMENT_SUB_TYPE_CD = ND.RESTATEMENT_SUB_TYPE_CD
                 AND WD.BK_EFFECTIVE_DT <> ND.BK_EFFECTIVE_DT
			 )
 )WI


Post SQL : 



Target5 Name : W_DYN_RESTMT_SLS_ADJSTMT


Pre SQL : 



Post SQL : 
/*Volatile table is created to take distinct trx dates for a record*/
CREATE VOLATILE TABLE W_DYN_RESTMT_SLS_ADJ
AS 
 (
	SELECT 
	   BK_BOOKINGS_TRX_TYPE_CD, 
	   SALES_ORDER_LINE_KEY,
	   AR_TRX_LINE_KEY,
	   BK_POS_TRX_ID_INT,
	   BK_SALES_ADJ_LINE_NUM_INT,
	   SO_SUBSCR_ITEM_SALES_TRX_KEY,
	   REV_TRANSFER_KEY,
	   ORIGINAL_SALES_TERR_KEY,
	   RESTATEMENT_SUB_TYPE_CD,
	   BK_EFFECTIVE_DT
	FROM $$WORKDB.W_DYN_RESTMT_SLS_ADJSTMT 
	GROUP BY 1,2,3,4,5,6,7,8,9,10
 ) 
WITH DATA 
PRIMARY INDEX ( RESTATEMENT_SUB_TYPE_CD,BK_BOOKINGS_TRX_TYPE_CD,SALES_ORDER_LINE_KEY,AR_TRX_LINE_KEY,BK_POS_TRX_ID_INT,BK_SALES_ADJ_LINE_NUM_INT,
SO_SUBSCR_ITEM_SALES_TRX_KEY,REV_TRANSFER_KEY,ORIGINAL_SALES_TERR_KEY,BK_EFFECTIVE_DT )
ON COMMIT PRESERVE ROWS;

COLLECT STATS ON W_DYN_RESTMT_SLS_ADJ INDEX ( RESTATEMENT_SUB_TYPE_CD,BK_BOOKINGS_TRX_TYPE_CD,SALES_ORDER_LINE_KEY,AR_TRX_LINE_KEY,BK_POS_TRX_ID_INT,BK_SALES_ADJ_LINE_NUM_INT,
SO_SUBSCR_ITEM_SALES_TRX_KEY,REV_TRANSFER_KEY,ORIGINAL_SALES_TERR_KEY,BK_EFFECTIVE_DT );

UPDATE WK
FROM $$WORKDB.W_DYN_RESTMT_SLS_ADJSTMT WK ,            
	 ( SELECT DYN_RESTMT_SLS_ADJSTMT_KEY , 
			  BK_EFFECTIVE_DT,
			  ( SELECT MIN(BK_EFFECTIVE_DT) 
				  FROM W_DYN_RESTMT_SLS_ADJ WD 
				 WHERE 1=1 
				   AND WD.RESTATEMENT_SUB_TYPE_CD = WK.RESTATEMENT_SUB_TYPE_CD
				   AND WD.BK_BOOKINGS_TRX_TYPE_CD = WK.BK_BOOKINGS_TRX_TYPE_CD  
				   AND WD.SALES_ORDER_LINE_KEY = WK.SALES_ORDER_LINE_KEY
				   AND WD.AR_TRX_LINE_KEY = WK.AR_TRX_LINE_KEY  
				   AND WD.BK_POS_TRX_ID_INT = WK.BK_POS_TRX_ID_INT 
				   AND WD.BK_SALES_ADJ_LINE_NUM_INT = WK.BK_SALES_ADJ_LINE_NUM_INT
				   AND WD.SO_SUBSCR_ITEM_SALES_TRX_KEY = WK.SO_SUBSCR_ITEM_SALES_TRX_KEY
				   AND WD.REV_TRANSFER_KEY = WK.REV_TRANSFER_KEY
				   AND WD.ORIGINAL_SALES_TERR_KEY = WK.ORIGINAL_SALES_TERR_KEY
				   AND WD.BK_EFFECTIVE_DT > WK.BK_EFFECTIVE_DT
			   ) AS NEXT_EFFECTIVE_DT 
		 FROM $$WORKDB.W_DYN_RESTMT_SLS_ADJSTMT WK 
	  ) WI 
SET EXPIRATION_DT = CASE WHEN WI.NEXT_EFFECTIVE_DT IS NULL THEN COALESCE(WK.EXPIRATION_DT,CAST('3500-01-01' AS DATE)) 
						 WHEN WI.NEXT_EFFECTIVE_DT IS NOT NULL AND COALESCE(WK.EXPIRATION_DT,CAST('3500-01-01' AS DATE)) < WI.NEXT_EFFECTIVE_DT-1 THEN WK.EXPIRATION_DT
						 ELSE WI.NEXT_EFFECTIVE_DT - 1 
                     END
WHERE WK.DYN_RESTMT_SLS_ADJSTMT_KEY = WI.DYN_RESTMT_SLS_ADJSTMT_KEY ;

CALL COLLECT_STATS_WRAP('$$WORKDB','W_DYN_RESTMT_SLS_ADJSTMT','D');