ETL Name:	wf_MT_SLS_ACNT_RSTD_MSR_DRR_NG.xml


Session 1: 	s_m_MT_SALES_ACNT_RSTD_MSR_DRR_NG
Mapping 1: 	m_MT_SLS_ACNT_RSTD_MSR_DRR_NGm_MT_SLS_ACNT_RSTD_MSR_DRR_NG


Source1 Name : SQ_WI_DRR_SALES_ACNT_MEASURE_FNL


Pre SQL : 



SQL Query : 
SELECT * FROM 
 ( SELECT 
   WI_FNL.BOOKINGS_MEASURE_KEY ,           
   WI_FNL.BOOKINGS_PROCESS_DATE ,        
   WI_FNL.BKGS_MEASURE_TRANS_TYPE_CODE , 
   DV_END_CUST_PARTY_KEY ,
   NEW_SA_MEMBER_ID_INT  ,        
   LINK_CUSTOMER_PARTY_KEY ,       
   SALES_ACCOUNT_GROUP_PARTY_KEY ,
   REASON_DESC_END_CUST ,         
   CASE WHEN WI_FNL.REASON_DESCR IN ( '15 - WW DIST_RETAINED BKGS TERRITORY' ) 
			THEN WI_FNL.REASON_DESCR
        WHEN  ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NOT NULL
			THEN '24 - RST NODE GSP DNR_REPLACED WITH ACTIVE NODE'				
		WHEN  ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NULL
		     THEN '24 - RST NODE GSP DNR'
		WHEN EL.REPLACED_SALES_TERRITORY_KEY IS NOT NULL THEN OREPLACE(WI_FNL.REASON_DESCR,'_RETAINED BKGS TERRITORY')||'_REPLACED WITH ACTIVE NODE'
     ELSE WI_FNL.REASON_DESCR     
   END AS REASON_DESCR ,
   WI_FNL.SALES_CREDIT_SPLIT_PCT,  
   
CASE WHEN WI_FNL.REASON_DESCR IN ( '15 - WW DIST_RETAINED BKGS TERRITORY') 
			THEN WI_FNL.SLS_ACCT_GROUP_SALES_TERR_KEY
        WHEN ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NOT NULL
		   THEN EL1.REPLACED_SALES_TERRITORY_KEY
		WHEN  ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NULL
		   THEN NBM.SALES_TERRITORY_KEY
		WHEN EL.REPLACED_SALES_TERRITORY_KEY IS NOT NULL THEN EL.REPLACED_SALES_TERRITORY_KEY
     ELSE WI_FNL.SLS_ACCT_GROUP_SALES_TERR_KEY 
   END AS SLS_ACCT_GROUP_SALES_TERR_KEY, 
   CASE WHEN WI_FNL.REASON_DESCR IN ( '15 - WW DIST_RETAINED BKGS TERRITORY') 
			THEN WI_FNL.SALES_REP_NUM
        WHEN  ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NOT NULL
		   THEN -999
		WHEN ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NULL
		   THEN NBM.SALES_REP_NUMBER
		WHEN EL.REPLACED_SALES_TERRITORY_KEY IS NOT NULL THEN -999 
    ELSE WI_FNL.SALES_REP_NUM
   END AS SALES_REP_NUM ,
   EP_OTM_TERRITORY_ID_INT       
    FROM $$STGDB.WI_DRR_SALES_ACNT_MEASURE_FNL WI_FNL
    LEFT JOIN ( SELECT * FROM $$ETLVWDB.EL_ACT_INACT_NODE_MAP_DRR WHERE VALID_FLAG = 'Y' ) EL
      ON EL.OLD_SALES_TERRITORY_KEY = WI_FNL.SLS_ACCT_GROUP_SALES_TERR_KEY
	INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
		ON WI_FNL.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
	   AND WI_FNL.BOOKINGS_PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE
	   AND WI_FNL.BKGS_MEASURE_TRANS_TYPE_CODE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
	LEFT JOIN ( SELECT * FROM $$ETLVWDB.EL_ACT_INACT_NODE_MAP_DRR WHERE VALID_FLAG = 'Y' ) EL1
      ON EL1.OLD_SALES_TERRITORY_KEY = NBM.SALES_TERRITORY_KEY
	INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY WI_RSH
		ON WI_FNL.SLS_ACCT_GROUP_SALES_TERR_KEY = WI_RSH.SALES_TERRITORY_KEY
    INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY NBM_RSH
		ON NBM.SALES_TERRITORY_KEY = NBM_RSH.SALES_TERRITORY_KEY
	INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
		ON WI_FNL.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
 ) WI_FNL      
 WHERE EXISTS ( SELECT 1
                  FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG  MT
                 WHERE WI_FNL.BOOKINGS_MEASURE_KEY = MT.BOOKINGS_MEASURE_KEY
       AND WI_FNL.BKGS_MEASURE_TRANS_TYPE_CODE = MT.BKGS_MEASURE_TRANS_TYPE_CD
       AND WI_FNL.BOOKINGS_PROCESS_DATE = MT.BOOKINGS_PROCESS_DT
       AND WI_FNL.DV_END_CUST_PARTY_KEY = MT.DV_END_CUST_PARTY_KEY
       AND WI_FNL.NEW_SA_MEMBER_ID_INT = MT.BK_SA_MEMBER_ID_INT
       AND WI_FNL.SALES_ACCOUNT_GROUP_PARTY_KEY = MT.SALES_ACCOUNT_GROUP_PARTY_KEY
       AND WI_FNL.SALES_CREDIT_SPLIT_PCT = MT.DV_END_CUST_OWNERSHIP_SPLT_PCT
       AND WI_FNL.SLS_ACCT_GROUP_SALES_TERR_KEY = MT.SALES_TERRITORY_KEY
       AND WI_FNL.SALES_REP_NUM = MT.SALES_REP_NUM
       AND WI_FNL.REASON_DESCR = MT.DV_RSTMT_REASON_CD
              )


Post SQL : 



Target1 Name : WI_DRR_SALES_ACNT_MSRE_FNL_DEL


Pre SQL : 
DELETE FROM $$STGDB.WI_DRR_SALES_ACNT_MSRE_FNL_DEL ALL ;


Post SQL : 
CALL COLLECT_STATS_WRAP ('$$STGDB','WI_DRR_SALES_ACNT_MEASURE_FNL','D');

CALL COLLECT_STATS_WRAP ('$$STGDB','WI_DRR_SALES_ACNT_MSRE_FNL_DEL','D');
              
DELETE FROM $$STGDB.WI_DRR_SALES_ACNT_MSRE_FNL_DEL
 WHERE (BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE,BKGS_MEASURE_TRANS_TYPE_CODE) IN 
     ( SELECT BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE,BKGS_MEASURE_TRANS_TYPE_CODE
         FROM $$STGDB.WI_DRR_SALES_ACNT_MSRE_FNL_DEL
  GROUP BY 1,2,3
        HAVING SUM(SALES_CREDIT_SPLIT_PCT) <> 100
      );    

DELETE FROM $$STGDB.WI_DRR_SALES_ACNT_MEASURE_FNL WI_FNL
WHERE EXISTS
(
 SELECT 1
   FROM $$STGDB.WI_DRR_SALES_ACNT_MSRE_FNL_DEL F_DEL
  WHERE F_DEL.BOOKINGS_MEASURE_KEY=WI_FNL.BOOKINGS_MEASURE_KEY
    AND F_DEL.BOOKINGS_PROCESS_DATE=WI_FNL.BOOKINGS_PROCESS_DATE
    AND F_DEL.BKGS_MEASURE_TRANS_TYPE_CODE=WI_FNL.BKGS_MEASURE_TRANS_TYPE_CODE
);

CALL COLLECT_STATS_WRAP ('$$STGDB','WI_DRR_SALES_ACNT_MEASURE_FNL','D');


Source2 Name : SQ_WI_DRR_SALES_ACNT_MEASURE_FNL1


Pre SQL : 



SQL Query : 
SELECT
FNL.BOOKINGS_MEASURE_KEY,
FNL.BOOKINGS_PROCESS_DT,
FNL.BKGS_MEASURE_TRANS_TYPE_CD,
FNL.DV_END_CUST_PARTY_KEY,
FNL.BK_SA_MEMBER_ID_INT,
FNL.LINK_CUSTOMER_PARTY_KEY,
FNL.SALES_ACCOUNT_GROUP_PARTY_KEY,
FNL.DV_END_CUST_REASON_DESCR,
FNL.DV_END_CUST_OWNERSHIP_SPLT_PCT,
FNL.LAST_UPDATED_DTM,
FNL.EDW_CREATE_DTM,
FNL.EDW_CREATE_USER,
FNL.EDW_UPDATE_DTM,
FNL.EDW_UPDATE_USER,
FNL.SALES_REP_NUM,
FNL.SALES_TERRITORY_KEY,
FNL.EP_OTM_TERRITORY_ID_INT,
FNL.PROCESS_TYPE,
FNL.FIN_ADJ_KEY,
REASON.BK_REASON_CD AS DV_RSTMT_REASON_CD,
MAX_MT.SK_SEQUENCE_ID + ROW_NUMBER()OVER(order by BOOKINGS_MEASURE_KEY) as SK_SEQUENCE_ID
FROM
(
	SELECT 
	WSARMF.BOOKINGS_MEASURE_KEY AS BOOKINGS_MEASURE_KEY, 
	WSARMF.BOOKINGS_PROCESS_DATE AS BOOKINGS_PROCESS_DT, 
	WSARMF.BKGS_MEASURE_TRANS_TYPE_CODE AS BKGS_MEASURE_TRANS_TYPE_CD,
	WSARMF.DV_END_CUST_PARTY_KEY AS DV_END_CUST_PARTY_KEY, 
	WSARMF.NEW_SA_MEMBER_ID_INT AS BK_SA_MEMBER_ID_INT,
	WSARMF.LINK_CUSTOMER_PARTY_KEY AS LINK_CUSTOMER_PARTY_KEY,
	WSARMF.SALES_ACCOUNT_GROUP_PARTY_KEY AS SALES_ACCOUNT_GROUP_PARTY_KEY,
	WSARMF.REASON_DESC_END_CUST AS DV_END_CUST_REASON_DESCR,   
	WSARMF.SALES_CREDIT_SPLIT_PCT AS DV_END_CUST_OWNERSHIP_SPLT_PCT,  
	CURRENT_TIMESTAMP(0) LAST_UPDATED_DTM ,
	CURRENT_TIMESTAMP(0) EDW_CREATE_DTM , 
	USER EDW_CREATE_USER ,
	CURRENT_TIMESTAMP(0) EDW_UPDATE_DTM, 
	USER EDW_UPDATE_USER ,/* added in DEC 11 - FY17 release */ 
	CASE WHEN WSARMF.REASON_DESCR IN ( '15 - WW DIST_RETAINED BKGS TERRITORY') 
			THEN WSARMF.SALES_REP_NUM
        WHEN ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NOT NULL
		   THEN -999
		WHEN ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' )
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NULL
		   THEN NBM.SALES_REP_NUMBER
		WHEN EL.REPLACED_SALES_TERRITORY_KEY IS NOT NULL THEN -999 
    ELSE WSARMF.SALES_REP_NUM
   END AS SALES_REP_NUM ,	
   CASE WHEN WSARMF.REASON_DESCR IN ( '15 - WW DIST_RETAINED BKGS TERRITORY') 
			THEN WSARMF.SLS_ACCT_GROUP_SALES_TERR_KEY
        WHEN ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NOT NULL
		   THEN EL1.REPLACED_SALES_TERRITORY_KEY
		WHEN ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' )
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NULL
		   THEN NBM.SALES_TERRITORY_KEY
		WHEN EL.REPLACED_SALES_TERRITORY_KEY IS NOT NULL THEN EL.REPLACED_SALES_TERRITORY_KEY
     ELSE WSARMF.SLS_ACCT_GROUP_SALES_TERR_KEY 
   END AS SALES_TERRITORY_KEY,
	WSARMF.EP_OTM_TERRITORY_ID_INT AS EP_OTM_TERRITORY_ID_INT,
	WSARMF.PROCESS_TYPE,
	WSARMF.FIN_ADJ_KEY,
	CASE WHEN WSARMF.REASON_DESCR IN ( '15 - WW DIST_RETAINED BKGS TERRITORY' ) 
			THEN WSARMF.REASON_DESCR
        WHEN  ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' ) 
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NOT NULL
			THEN '24 - RST NODE GSP DNR_REPLACED WITH ACTIVE NODE'				
		WHEN ( NBM_RSH.L1_SALES_TERRITORY_NAME_CODE <> 'GLOBAL SERVICE PROVIDER' AND WI_RSH.L1_SALES_TERRITORY_NAME_CODE = 'GLOBAL SERVICE PROVIDER' )
				AND FDY.FISCAL_YEAR_NUMBER_INT IN ( 2016, 2017 ) AND EL1.REPLACED_SALES_TERRITORY_KEY IS NULL
		     THEN '24 - RST NODE GSP DNR'
		WHEN EL.REPLACED_SALES_TERRITORY_KEY IS NOT NULL THEN OREPLACE(WSARMF.REASON_DESCR,'_RETAINED BKGS TERRITORY')||'_REPLACED WITH ACTIVE NODE'
     ELSE WSARMF.REASON_DESCR     
   END AS REASON_DESCR 
	FROM $$STGDB.WI_DRR_SALES_ACNT_MEASURE_FNL WSARMF
	LEFT JOIN ( SELECT * FROM $$ETLVWDB.EL_ACT_INACT_NODE_MAP_DRR WHERE VALID_FLAG = 'Y' ) EL
		ON EL.OLD_SALES_TERRITORY_KEY = WSARMF.SLS_ACCT_GROUP_SALES_TERR_KEY
	INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
		ON WSARMF.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
	   AND WSARMF.BOOKINGS_PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE
	   AND WSARMF.BKGS_MEASURE_TRANS_TYPE_CODE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
	LEFT JOIN ( SELECT * FROM $$ETLVWDB.EL_ACT_INACT_NODE_MAP_DRR WHERE VALID_FLAG = 'Y' ) EL1
      ON EL1.OLD_SALES_TERRITORY_KEY = NBM.SALES_TERRITORY_KEY
	INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY WI_RSH
		ON WSARMF.SLS_ACCT_GROUP_SALES_TERR_KEY = WI_RSH.SALES_TERRITORY_KEY
    INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY NBM_RSH
		ON NBM.SALES_TERRITORY_KEY = NBM_RSH.SALES_TERRITORY_KEY
	INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
		ON WSARMF.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
) FNL	
INNER JOIN
( SELECT * FROM $$SLSORDVWDB.N_DYN_RESTMT_ENRICH_REASON ) REASON
ON FNL.REASON_DESCR = REASON.REASON_DESCR,
(SELECT MAX(SK_SEQUENCE_ID) AS SK_SEQUENCE_ID FROM
(
SELECT COALESCE(MAX(SK_SEQUENCE_ID), 0) AS SK_SEQUENCE_ID FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG
UNION ALL 
SELECT COALESCE(MAX(SK_SEQUENCE_ID), 0) AS SK_SEQUENCE_ID FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRRNG_DEL
) SEQUENCE 
) MAX_MT


Post SQL : 



Target2 Name : MT_SLS_ACNT_RSTD_MSR_DRR_NG


Pre SQL : 
INSERT INTO $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRRNG_DEL
SELECT 
BOOKINGS_MEASURE_KEY,
BOOKINGS_PROCESS_DT,
BKGS_MEASURE_TRANS_TYPE_CD,
DV_END_CUST_PARTY_KEY,
BK_SA_MEMBER_ID_INT,
LINK_CUSTOMER_PARTY_KEY,
SALES_ACCOUNT_GROUP_PARTY_KEY,
DV_END_CUST_REASON_DESCR,
DV_END_CUST_OWNERSHIP_SPLT_PCT,
LAST_UPDATED_DTM,
CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM,
USER AS  EDW_CREATE_USER,
CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM,
USER AS EDW_UPDATE_USER,
SALES_REP_NUM,
SALES_TERRITORY_KEY,
EP_OTM_TERRITORY_ID_INT,
PROCESS_TYPE,
DV_FIN_ADJ_KEY,
DV_RSTMT_REASON_CD,
SK_SEQUENCE_ID
FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MSARM
WHERE EXISTS
(SELECT 1  
   FROM $$STGDB.WI_DRR_SALES_ACNT_MEASURE_FNL WSARMF
  WHERE WSARMF.BOOKINGS_MEASURE_KEY = MSARM.BOOKINGS_MEASURE_KEY
    AND WSARMF.BOOKINGS_PROCESS_DATE = MSARM.BOOKINGS_PROCESS_DT
    AND WSARMF.BKGS_MEASURE_TRANS_TYPE_CODE = MSARM.BKGS_MEASURE_TRANS_TYPE_CD
);


DELETE FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MSARM
WHERE EXISTS
(   SELECT 1  
   FROM $$STGDB.WI_DRR_SALES_ACNT_MEASURE_FNL WSARMF
  WHERE WSARMF.BOOKINGS_MEASURE_KEY = MSARM.BOOKINGS_MEASURE_KEY
    AND WSARMF.BOOKINGS_PROCESS_DATE = MSARM.BOOKINGS_PROCESS_DT
    AND WSARMF.BKGS_MEASURE_TRANS_TYPE_CODE = MSARM.BKGS_MEASURE_TRANS_TYPE_CD
);


Post SQL : 
CALL COLLECT_STATS_WRAP('$$SLSORDDB','MT_SLS_ACNT_RSTD_MSR_DRR_NG','W');

UPDATE $$ETLVWDB.DW_JOB_STREAMS SET LAST_EXTRACT_DATE=(SEL MAX(EDW_UPDATE_DTM) FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG)
WHERE  JOB_STREAM_ID='wf_MT_SLS_ACNT_RSTD_MSR_DRR_NG';

UPDATE $$ETLVWDB.WI_DRR_PROCESS_CONTROL
SET BKG_EXTRACT_DATE=(SEL COALESCE(MAX(EDW_UPDATE_DTM),CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))) FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG)
WHERE ACTIVE_FLAG='Y';

UPDATE $$ETLVWDB.WI_DRR_PROCESS_CONTROL
SET NAMD_ACNT_EXTRACT_DATE=(SEL COALESCE(MAX(EDW_UPDATE_DTM),CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))) FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG)
WHERE ACTIVE_FLAG='Y';

DELETE FROM $$STGDB.WI_PARTNER_CHANGE ALL;
INSERT INTO $$STGDB.WI_PARTNER_CHANGE 
SELECT 
MT.BOOKINGS_MEASURE_KEY,
MT.BOOKINGS_PROCESS_DT,
MT.BKGS_MEASURE_TRANS_TYPE_CD,
MT.DV_END_CUST_PARTY_KEY,
MT.SALES_ACCOUNT_GROUP_PARTY_KEY,
COALESCE(MPH.PARTNER_SITE_PARTY_KEY , -999)   AS PARTNER_SITE_PARTY_KEY ,
COALESCE(BK_PGTMV_PARTNER_ID_INT, -999 ) AS BK_PGTMV_PARTNER_ID_INT , 
COALESCE(DD_PGTMV_BE_GEO_ID_INT ,-999) AS DD_PGTMV_BE_GEO_ID_INT 
FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT 
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM 
ON MT.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND MT.BKGS_MEASURE_TRANS_TYPE_CD = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND MT.BOOKINGS_PROCESS_DT = NBM.BOOKINGS_PROCESS_DATE
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_CHANNEL_MEASURE NBCM
ON NBCM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND NBCM.BKGS_MEASURE_TRANS_TYPE_CODE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBCM.BOOKINGS_PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE
LEFT JOIN $$COMREFVWDB.MT_PARTNER_HIERARCHY MPH
ON MPH.PARTNER_SITE_PARTY_KEY > 0
AND MPH.PARTNER_SITE_PARTY_KEY = NBCM.PARTNER_SITE_PARTY_KEY
WHERE DV_RSTMT_REASON_CD IN ('PL_SINGLE','PL_MTPL_BKGS_TERR','PL_NA','PL_NA_RPLCD_NODE') 
GROUP BY 1,2,3,4,5,6,7,8 ;