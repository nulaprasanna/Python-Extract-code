ETL Name:	wf_WI_DRR_BOOKINGS_INCRMENTAL.xml


Session 1: 	s_m_WI_DRR_BOOKINGS_INCRMENTAL
Mapping 1: 	m_WI_DRR_BOOKINGS_INCRMENTALm_WI_DRR_BOOKINGS_INCRMENTAL


Source1 Name : SQ_N_DYN_RESTMT_SLS_ADJSTMT


Pre SQL : 



SQL Query : 
SELECT 
 FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY	,
FIN_ADJ.ORIGINAL_SALES_TERR_KEY	,
FIN_ADJ.RESTATED_SALES_TERR_KEY	,
FIN_ADJ.SALES_ORDER_LINE_KEY	,
FIN_ADJ.BK_BOOKINGS_TRX_TYPE_CD	,
FIN_ADJ.BK_ALLOCATION_SPLIT_PCT	,
FIN_ADJ.BK_EFFECTIVE_DT	,
FIN_ADJ.SK_TRX_ID_BIGINT	,
FIN_ADJ.RESTATEMENT_SUB_TYPE_CD	,
FIN_ADJ.CUST_PRTY_KEY	,
FIN_ADJ.DO_NOT_RESTATE_FLG	,
FIN_ADJ.EXPIRATION_DT	,
FIN_ADJ.APPRVD_BY_CSCO_WRKR_PRTY_KEY	,
FIN_ADJ.UPLOADED_BY_CSCO_WRKR_PRTY_KEY	,
FIN_ADJ.APPROVED_DTM	,
FIN_ADJ.DV_APPROVED_DT	,
FIN_ADJ.UPLOADED_DTM	,
FIN_ADJ.DV_UPLOADED_DT	,
FIN_ADJ.VALIDATION_STATUS_CD	,
FIN_ADJ.VALIDATION_STATUS_REASON_DESCR	,
FIN_ADJ.UPLOAD_FILE_NAME	,
FIN_ADJ.PROCESSED_FLG	,
FIN_ADJ.AR_TRX_LINE_KEY	,
FIN_ADJ.BK_POS_TRX_ID_INT	,
FIN_ADJ.BK_SALES_ADJ_LINE_NUM_INT	,
FIN_ADJ.SO_SUBSCR_ITEM_SALES_TRX_KEY	,
FIN_ADJ.REV_TRANSFER_KEY	,
FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY	,
FIN_ADJ.DV_BOOKINGS_TRX_REF_ID	,
FIN_ADJ.EDW_CREATE_DTM	,
FIN_ADJ.EDW_CREATE_USER	,
FIN_ADJ.EDW_UPDATE_DTM	,
FIN_ADJ.EDW_UPDATE_USER	
 FROM
 $$SLSORDVWDB.N_DYN_RESTMT_SLS_ADJSTMT FIN_ADJ,
 ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y') CTRL
 WHERE CTRL.PROCESS_DATE BETWEEN BK_EFFECTIVE_DT AND EXPIRATION_DT
 AND ( RESTATEMENT_SUB_TYPE_CD LIKE 'RULE2%') 

   
UNION ALL 

SELECT 
FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY	,
FIN_ADJ.ORIGINAL_SALES_TERR_KEY	,
FIN_ADJ.RESTATED_SALES_TERR_KEY	,
FIN_ADJ.SALES_ORDER_LINE_KEY	,
FIN_ADJ.BK_BOOKINGS_TRX_TYPE_CD	,
FIN_ADJ.BK_ALLOCATION_SPLIT_PCT	,
FIN_ADJ.BK_EFFECTIVE_DT	,
FIN_ADJ.SK_TRX_ID_BIGINT	,
FIN_ADJ.RESTATEMENT_SUB_TYPE_CD	,
FIN_ADJ.CUST_PRTY_KEY	,
FIN_ADJ.DO_NOT_RESTATE_FLG	,
FIN_ADJ.EXPIRATION_DT	,
FIN_ADJ.APPRVD_BY_CSCO_WRKR_PRTY_KEY	,
FIN_ADJ.UPLOADED_BY_CSCO_WRKR_PRTY_KEY	,
FIN_ADJ.APPROVED_DTM	,
FIN_ADJ.DV_APPROVED_DT	,
FIN_ADJ.UPLOADED_DTM	,
FIN_ADJ.DV_UPLOADED_DT	,
FIN_ADJ.VALIDATION_STATUS_CD	,
FIN_ADJ.VALIDATION_STATUS_REASON_DESCR	,
FIN_ADJ.UPLOAD_FILE_NAME	,
FIN_ADJ.PROCESSED_FLG	,
FIN_ADJ.AR_TRX_LINE_KEY	,
FIN_ADJ.BK_POS_TRX_ID_INT	,
FIN_ADJ.BK_SALES_ADJ_LINE_NUM_INT	,
FIN_ADJ.SO_SUBSCR_ITEM_SALES_TRX_KEY	,
FIN_ADJ.REV_TRANSFER_KEY	,
FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY	,
FIN_ADJ.DV_BOOKINGS_TRX_REF_ID	,
FIN_ADJ.EDW_CREATE_DTM	,
FIN_ADJ.EDW_CREATE_USER	,
FIN_ADJ.EDW_UPDATE_DTM	,
FIN_ADJ.EDW_UPDATE_USER	
FROM 
(
 SELECT 
 FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY	,
FIN_ADJ.ORIGINAL_SALES_TERR_KEY	,
FIN_ADJ.RESTATED_SALES_TERR_KEY	,
FIN_ADJ.SALES_ORDER_LINE_KEY	,
FIN_ADJ.BK_BOOKINGS_TRX_TYPE_CD	,
FIN_ADJ.BK_ALLOCATION_SPLIT_PCT	,
FIN_ADJ.BK_EFFECTIVE_DT	,
FIN_ADJ.SK_TRX_ID_BIGINT	,
FIN_ADJ.RESTATEMENT_SUB_TYPE_CD	,
FIN_ADJ.CUST_PRTY_KEY	,
FIN_ADJ.DO_NOT_RESTATE_FLG	,
FIN_ADJ.EXPIRATION_DT	,
FIN_ADJ.APPRVD_BY_CSCO_WRKR_PRTY_KEY	,
FIN_ADJ.UPLOADED_BY_CSCO_WRKR_PRTY_KEY	,
FIN_ADJ.APPROVED_DTM	,
FIN_ADJ.DV_APPROVED_DT	,
FIN_ADJ.UPLOADED_DTM	,
FIN_ADJ.DV_UPLOADED_DT	,
FIN_ADJ.VALIDATION_STATUS_CD	,
FIN_ADJ.VALIDATION_STATUS_REASON_DESCR	,
FIN_ADJ.UPLOAD_FILE_NAME	,
FIN_ADJ.PROCESSED_FLG	,
FIN_ADJ.AR_TRX_LINE_KEY	,
FIN_ADJ.BK_POS_TRX_ID_INT	,
FIN_ADJ.BK_SALES_ADJ_LINE_NUM_INT	,
FIN_ADJ.SO_SUBSCR_ITEM_SALES_TRX_KEY	,
FIN_ADJ.REV_TRANSFER_KEY	,
FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY	,
FIN_ADJ.DV_BOOKINGS_TRX_REF_ID	,
FIN_ADJ.EDW_CREATE_DTM	,
FIN_ADJ.EDW_CREATE_USER	,
FIN_ADJ.EDW_UPDATE_DTM	,
FIN_ADJ.EDW_UPDATE_USER	
FROM
 $$SLSORDVWDB.N_DYN_RESTMT_SLS_ADJSTMT FIN_ADJ,
 ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y') CTRL
 WHERE CTRL.PROCESS_DATE BETWEEN BK_EFFECTIVE_DT AND EXPIRATION_DT
 AND ( RESTATEMENT_SUB_TYPE_CD LIKE 'RULE3%' ) 
) FIN_ADJ
INNER JOIN ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y') CTRL
ON 1=1
LEFT JOIN $$COMREFVWDB.N_SLS_ACCT_GROUP_SAV_PARTY_TV SAV
ON FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY = SAV.SALES_ACCOUNT_GROUP_PARTY_KEY
AND SALES_ACCOUNT_GROUP_TYPE_CD = 'NAMED_ACCOUNT' 
AND CTRL.PROCESS_DATE BETWEEN SAV.START_TV_DT AND SAV.END_TV_DT
LEFT JOIN $$COMREFVWDB.N_SA_GRPCSTPTY_LNKSYSVW_TV NGSV 
ON FIN_ADJ.CUST_PRTY_KEY = NGSV.CUSTOMER_PARTY_KEY 
AND SAV.SALES_ACCOUNT_GROUP_PARTY_KEY = NGSV.SALES_ACCOUNT_GROUP_PARTY_KEY
AND CTRL.PROCESS_DATE BETWEEN NGSV.START_TV_DT AND NGSV.END_TV_DT
WHERE NGSV.CUSTOMER_PARTY_KEY IS NOT NULL
AND NGSV.SALES_ACCOUNT_GROUP_PARTY_KEY IS NOT NULL


Post SQL : 



Target1 Name : WI_FIN_ADJ_BOOKINGS_ACTIVE1


Pre SQL : 
DELETE FROM $$STGDB.WI_FIN_ADJ_BOOKINGS_ACTIVE ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_FIN_ADJ_BOOKINGS_ACTIVE','D');


Source2 Name : SQ_WI_FIN_ADJ_BOOKINGS_ACTIVE


Pre SQL : 



SQL Query : 
SELECT 
   NBM.BOOKINGS_MEASURE_KEY ,         
   NBM.BOOKINGS_PROCESS_DATE ,        
   NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
   NBM.SALES_TERRITORY_KEY     ,      
   NBM.SALES_REP_NUMBER,
   NBM.END_CUSTOMER_KEY,
   NBM.SHIP_TO_CUSTOMER_KEY,
   NBM.SOLD_TO_CUSTOMER_KEY,
   NBM.DV_DEAL_ID ,
   NBM.WIPS_ORIGINATOR_ID_INT,   
   RSH.L1_SALES_TERRITORY_NAME_CODE,
   RSH.L5_SALES_TERRITORY_NAME_CODE  ,
   RSH.L6_SALES_TERRITORY_NAME_CODE  ,
   CASE 
 WHEN RSH.ISO_COUNTRY_CODE = 'UNK'
  THEN RSH.DD_EXTERNAL_THEATER_NAME
 ELSE RSH.ISO_COUNTRY_CODE
   END AS ISO_COUNTRY_CODE,
   FIN_ADJ.CUST_PRTY_KEY ,
   RSH.SALES_COVERAGE_CODE,
   RSH.SALES_TERRITORY_TYPE_CODE,
   FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY        ,
   FIN_ADJ.BK_ALLOCATION_SPLIT_PCT,
   FIN_ADJ.RESTATEMENT_SUB_TYPE_CD,
   'FinAdj' AS PROCESS_TYPE,   
   'N' AS END_CUSTOMER_PROCESS_FLAG,
   FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY    
FROM
$$STGDB.WI_FIN_ADJ_BOOKINGS_ACTIVE FIN_ADJ
CROSS JOIN ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y' ) CTRL
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
ON FIN_ADJ.SALES_ORDER_LINE_KEY = NBM.DV_SALES_ORDER_LINE_KEY
AND FIN_ADJ.ORIGINAL_SALES_TERR_KEY = NBM.SALES_TERRITORY_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
ON NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH
ON RSH.SALES_TERRITORY_KEY = NBM.SALES_TERRITORY_KEY
AND SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'
WHERE FDY.FISCAL_YEAR_AGE <=CTRL.YEAR_FLG_INT

UNION
  
SELECT 
   NBM.BOOKINGS_MEASURE_KEY ,         
   NBM.BOOKINGS_PROCESS_DATE ,        
   NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
   NBM.SALES_TERRITORY_KEY     ,      
   NBM.SALES_REP_NUMBER,
   NBM.END_CUSTOMER_KEY,
   NBM.SHIP_TO_CUSTOMER_KEY,
   NBM.SOLD_TO_CUSTOMER_KEY,
   NBM.DV_DEAL_ID ,
   NBM.WIPS_ORIGINATOR_ID_INT,   
   RSH.L1_SALES_TERRITORY_NAME_CODE,
   RSH.L5_SALES_TERRITORY_NAME_CODE  ,
   RSH.L6_SALES_TERRITORY_NAME_CODE  ,
   CASE 
 WHEN RSH.ISO_COUNTRY_CODE = 'UNK'
  THEN RSH.DD_EXTERNAL_THEATER_NAME
 ELSE RSH.ISO_COUNTRY_CODE
   END AS ISO_COUNTRY_CODE,
   FIN_ADJ.CUST_PRTY_KEY ,
   RSH.SALES_COVERAGE_CODE,
   RSH.SALES_TERRITORY_TYPE_CODE,
   FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY        ,
   FIN_ADJ.BK_ALLOCATION_SPLIT_PCT,
   FIN_ADJ.RESTATEMENT_SUB_TYPE_CD,
   'FinAdj' AS PROCESS_TYPE,   
   'N' AS END_CUSTOMER_PROCESS_FLAG,
   FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY    
FROM 
$$STGDB.WI_FIN_ADJ_BOOKINGS_ACTIVE FIN_ADJ
CROSS JOIN ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y' ) CTRL
  INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
 ON FIN_ADJ.AR_TRX_LINE_KEY = NBM.DV_AR_TRX_LINE_KEY
 AND FIN_ADJ.ORIGINAL_SALES_TERR_KEY = NBM.SALES_TERRITORY_KEY
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 AND NBM.REVENUE_TRANSFER_KEY < 0
  INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
   ON NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
  INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH
   ON RSH.SALES_TERRITORY_KEY = NBM.SALES_TERRITORY_KEY
   AND RSH.SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'
  WHERE FDY.FISCAL_YEAR_AGE <=CTRL.YEAR_FLG_INT
  
  UNION
  
  SELECT 
     NBM.BOOKINGS_MEASURE_KEY ,         
   NBM.BOOKINGS_PROCESS_DATE ,        
   NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
   NBM.SALES_TERRITORY_KEY     ,      
   NBM.SALES_REP_NUMBER,
   NBM.END_CUSTOMER_KEY,
   NBM.SHIP_TO_CUSTOMER_KEY,
   NBM.SOLD_TO_CUSTOMER_KEY,
   NBM.DV_DEAL_ID ,
   NBM.WIPS_ORIGINATOR_ID_INT,   
   RSH.L1_SALES_TERRITORY_NAME_CODE,
   RSH.L5_SALES_TERRITORY_NAME_CODE  ,
   RSH.L6_SALES_TERRITORY_NAME_CODE  ,
   CASE 
 WHEN RSH.ISO_COUNTRY_CODE = 'UNK'
  THEN RSH.DD_EXTERNAL_THEATER_NAME
 ELSE RSH.ISO_COUNTRY_CODE
   END AS ISO_COUNTRY_CODE,
   FIN_ADJ.CUST_PRTY_KEY ,
   RSH.SALES_COVERAGE_CODE,
   RSH.SALES_TERRITORY_TYPE_CODE,
   FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY        ,
   FIN_ADJ.BK_ALLOCATION_SPLIT_PCT,
   FIN_ADJ.RESTATEMENT_SUB_TYPE_CD,
   'FinAdj' AS PROCESS_TYPE,   
   'N' AS END_CUSTOMER_PROCESS_FLAG,
   FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY    
 FROM $$STGDB.WI_FIN_ADJ_BOOKINGS_ACTIVE FIN_ADJ
 CROSS JOIN ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y' ) CTRL
  INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  ON FIN_ADJ.REV_TRANSFER_KEY = NBM.REVENUE_TRANSFER_KEY
  AND FIN_ADJ.ORIGINAL_SALES_TERR_KEY = NBM.SALES_TERRITORY_KEY
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
  AND NBM.REVENUE_TRANSFER_KEY > 0
  INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
 ON NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
  INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH
  ON RSH.SALES_TERRITORY_KEY = NBM.SALES_TERRITORY_KEY
  AND RSH.SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'
 WHERE FDY.FISCAL_YEAR_AGE <=CTRL.YEAR_FLG_INT
 
  UNION
  
  SELECT 
   NBM.BOOKINGS_MEASURE_KEY ,         
   NBM.BOOKINGS_PROCESS_DATE ,        
   NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
   NBM.SALES_TERRITORY_KEY     ,      
   NBM.SALES_REP_NUMBER,
   NBM.END_CUSTOMER_KEY,
   NBM.SHIP_TO_CUSTOMER_KEY,
   NBM.SOLD_TO_CUSTOMER_KEY,
   NBM.DV_DEAL_ID ,
   NBM.WIPS_ORIGINATOR_ID_INT,   
   RSH.L1_SALES_TERRITORY_NAME_CODE,
   RSH.L5_SALES_TERRITORY_NAME_CODE  ,
   RSH.L6_SALES_TERRITORY_NAME_CODE  ,
   CASE 
 WHEN RSH.ISO_COUNTRY_CODE = 'UNK'
  THEN RSH.DD_EXTERNAL_THEATER_NAME
 ELSE RSH.ISO_COUNTRY_CODE
   END AS ISO_COUNTRY_CODE,
   FIN_ADJ.CUST_PRTY_KEY ,
   RSH.SALES_COVERAGE_CODE,
   RSH.SALES_TERRITORY_TYPE_CODE,
   FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY        ,
   FIN_ADJ.BK_ALLOCATION_SPLIT_PCT,
   FIN_ADJ.RESTATEMENT_SUB_TYPE_CD,
   'FinAdj' AS PROCESS_TYPE,   
   'N' AS END_CUSTOMER_PROCESS_FLAG,
   FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY    
   FROM $$STGDB.WI_FIN_ADJ_BOOKINGS_ACTIVE FIN_ADJ
 CROSS JOIN ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y' ) CTRL
  INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  ON FIN_ADJ.BK_POS_TRX_ID_INT = NBM.BK_POS_TRANSACTION_ID_INT
  AND FIN_ADJ.ORIGINAL_SALES_TERR_KEY = NBM.SALES_TERRITORY_KEY
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'
  INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
 ON NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
  INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH
  ON RSH.SALES_TERRITORY_KEY = NBM.SALES_TERRITORY_KEY
  AND RSH.SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'
 WHERE FDY.FISCAL_YEAR_AGE <=CTRL.YEAR_FLG_INT
  UNION
  
  SELECT 
     NBM.BOOKINGS_MEASURE_KEY ,         
   NBM.BOOKINGS_PROCESS_DATE ,        
   NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
   NBM.SALES_TERRITORY_KEY     ,      
   NBM.SALES_REP_NUMBER,
   NBM.END_CUSTOMER_KEY,
   NBM.SHIP_TO_CUSTOMER_KEY,
   NBM.SOLD_TO_CUSTOMER_KEY,
   NBM.DV_DEAL_ID ,
   NBM.WIPS_ORIGINATOR_ID_INT,   
   RSH.L1_SALES_TERRITORY_NAME_CODE,
   RSH.L5_SALES_TERRITORY_NAME_CODE  ,
   RSH.L6_SALES_TERRITORY_NAME_CODE  ,
   CASE 
 WHEN RSH.ISO_COUNTRY_CODE = 'UNK'
  THEN RSH.DD_EXTERNAL_THEATER_NAME
 ELSE RSH.ISO_COUNTRY_CODE
   END AS ISO_COUNTRY_CODE,
   FIN_ADJ.CUST_PRTY_KEY ,
   RSH.SALES_COVERAGE_CODE,
   RSH.SALES_TERRITORY_TYPE_CODE,
   FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY        ,
   FIN_ADJ.BK_ALLOCATION_SPLIT_PCT,
   FIN_ADJ.RESTATEMENT_SUB_TYPE_CD,
   'FinAdj' AS PROCESS_TYPE,   
   'N' AS END_CUSTOMER_PROCESS_FLAG,
   FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY    
   FROM $$STGDB.WI_FIN_ADJ_BOOKINGS_ACTIVE FIN_ADJ
 CROSS JOIN ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y' ) CTRL
  INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  ON FIN_ADJ.BK_SALES_ADJ_LINE_NUM_INT = NBM.BK_SALES_ADJ_LINE_NUMBER_INT
  AND FIN_ADJ.ORIGINAL_SALES_TERR_KEY = NBM.SALES_TERRITORY_KEY
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'SLS_ADJ'
   INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
 ON NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
  INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH
  ON RSH.SALES_TERRITORY_KEY = NBM.SALES_TERRITORY_KEY
  AND RSH.SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'
 WHERE FDY.FISCAL_YEAR_AGE <= CTRL.YEAR_FLG_INT
  UNION
  
  SELECT 
     NBM.BOOKINGS_MEASURE_KEY ,         
   NBM.BOOKINGS_PROCESS_DATE ,        
   NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
   NBM.SALES_TERRITORY_KEY     ,      
   NBM.SALES_REP_NUMBER,
   NBM.END_CUSTOMER_KEY,
   NBM.SHIP_TO_CUSTOMER_KEY,
   NBM.SOLD_TO_CUSTOMER_KEY,
   NBM.DV_DEAL_ID ,
   NBM.WIPS_ORIGINATOR_ID_INT,   
   RSH.L1_SALES_TERRITORY_NAME_CODE,
   RSH.L5_SALES_TERRITORY_NAME_CODE  ,
   RSH.L6_SALES_TERRITORY_NAME_CODE  ,
   CASE 
 WHEN RSH.ISO_COUNTRY_CODE = 'UNK'
  THEN RSH.DD_EXTERNAL_THEATER_NAME
 ELSE RSH.ISO_COUNTRY_CODE
   END AS ISO_COUNTRY_CODE,
   FIN_ADJ.CUST_PRTY_KEY ,
   RSH.SALES_COVERAGE_CODE,
   RSH.SALES_TERRITORY_TYPE_CODE,
   FIN_ADJ.SALES_ACCT_GRP_PRTY_KEY        ,
   FIN_ADJ.BK_ALLOCATION_SPLIT_PCT,
   FIN_ADJ.RESTATEMENT_SUB_TYPE_CD,
   'FinAdj' AS PROCESS_TYPE,   
   'N' AS END_CUSTOMER_PROCESS_FLAG,
   FIN_ADJ.DYN_RESTMT_SLS_ADJSTMT_KEY    
 FROM $$STGDB.WI_FIN_ADJ_BOOKINGS_ACTIVE FIN_ADJ
 CROSS JOIN ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y' ) CTRL
  INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  ON FIN_ADJ.SO_SUBSCR_ITEM_SALES_TRX_KEY = NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY
  AND FIN_ADJ.ORIGINAL_SALES_TERR_KEY = NBM.SALES_TERRITORY_KEY
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
   INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
 ON NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
  INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH
  ON RSH.SALES_TERRITORY_KEY = NBM.SALES_TERRITORY_KEY
  AND RSH.SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'
 WHERE FDY.FISCAL_YEAR_AGE <= CTRL.YEAR_FLG_INT


Post SQL : 



Target2 Name : WI_FIN_ADJ_BOOKINGS_ALL1


Pre SQL : 
DELETE FROM $$STGDB.WI_FIN_ADJ_BOOKINGS_ALL ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_FIN_ADJ_BOOKINGS_ALL','D');


Source3 Name : SQ_N_BOOKINGS_MEASURE


Pre SQL : 



SQL Query : 
SELECT
BOOKINGS_MEASURE_KEY,
BOOKINGS_PROCESS_DATE,
BKGS_MEASURE_TRANS_TYPE_CODE,
SALES_TERRITORY_KEY,
SALES_REP_NUMBER, 
END_CUSTOMER_KEY,              
SHIP_TO_CUSTOMER_KEY,
SOLD_TO_CUSTOMER_KEY,
DV_DEAL_ID,
WIPS_ORIGINATOR_ID_INT
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE
WHERE EDW_UPDATE_DATETIME>=(SELECT BKG_EXTRACT_DATE FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG='Y')
GROUP BY 1,2,3,4,5,6,7,8,9,10


Post SQL : 



Target3 Name : WI_DRR_BOOKINGS_MEASURE_INCR1


Pre SQL : 
DELETE FROM $$STGDB.WI_DRR_BOOKINGS_MEASURE_INCR ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_DRR_BOOKINGS_MEASURE_INCR','D');


Source4 Name : SQ_MT_SLS_ACNT_RSTD_MSR_DRR_NG


Pre SQL : 



SQL Query : 
SELECT 
   BOOKINGS_MEASURE_KEY ,         
   BOOKINGS_PROCESS_DT ,        
   BKGS_MEASURE_TRANS_TYPE_CD ,
   DV_END_CUST_PARTY_KEY ,  
   SALES_ACCOUNT_GROUP_PARTY_KEY 
  FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG
 WHERE DV_RSTMT_REASON_CD <> 'WW_BKGS_TERR' /* Added to ignore WW disti transactions for reprocess */ 
   AND ( SALES_ACCOUNT_GROUP_PARTY_KEY,DV_END_CUST_PARTY_KEY,BK_SA_MEMBER_ID_INT ) 
IN ( SELECT SALES_ACCOUNT_GROUP_PARTY_KEY,DV_END_CUST_PARTY_KEY,BK_SA_MEMBER_ID_INT
    FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG
           MINUS
     SELECT SALES_ACCOUNT_GROUP_PARTY_KEY , CUSTOMER_PARTY_KEY ,BK_SA_MEMBER_ID_INT
       FROM $$STGDB.WI_DRR_SYSVIEW_PARTY 
   ) 
GROUP BY 1,2,3,4,5

UNION

SELECT 
 BOOKINGS_MEASURE_KEY ,         
 BOOKINGS_PROCESS_DT   ,        
 BKGS_MEASURE_TRANS_TYPE_CD    ,
 DV_END_CUST_PARTY_KEY       ,  
 SALES_ACCOUNT_GROUP_PARTY_KEY 
FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT_RSTD
INNER JOIN $$COMREFVWDB.N_REPLACEMENT_CUST_PARTY NRP
   ON MT_RSTD.DV_END_CUST_PARTY_KEY = NRP.INACTIVE_CUST_PTY_KEY
  AND DV_RSTMT_REASON_CD <> 'WW_BKGS_TERR' /* Added to ignore WW disti transactions for reprocess */ 
GROUP BY 1,2,3,4,5 

UNION /* Added Below UNION for SALES OWNER Change*/

SELECT 
 BOOKINGS_MEASURE_KEY ,         
 BOOKINGS_PROCESS_DT   ,        
 BKGS_MEASURE_TRANS_TYPE_CD    ,
 DV_END_CUST_PARTY_KEY       ,  
 SALES_ACCOUNT_GROUP_PARTY_KEY 
FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG
WHERE DV_RSTMT_REASON_CD <> 'WW_BKGS_TERR' /* Added  to ignore WW disti transactions for reprocess */ 
  AND (SALES_ACCOUNT_GROUP_PARTY_KEY,DV_END_CUST_PARTY_KEY) IN 
      ( SELECT SALES_ACCOUNT_GROUP_PARTY_KEY,CUSTOMER_PARTY_KEY 
       FROM $$STGDB.WI_DRR_SYSVW_PARTY_OWN_TER_CHK 
   GROUP BY 1,2 
   )
GROUP BY 1,2,3,4,5

UNION
 /* Added Below UNION for GEO ACCOUNT Retro Change*/
SELECT 
 BOOKINGS_MEASURE_KEY ,         
 BOOKINGS_PROCESS_DT   ,        
 BKGS_MEASURE_TRANS_TYPE_CD    ,
 DV_END_CUST_PARTY_KEY       ,  
 SALES_ACCOUNT_GROUP_PARTY_KEY 
FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG
WHERE DV_RSTMT_REASON_CD <> 'WW_BKGS_TERR' /* Added part of Dec FY18 to ignore WW disti transactions for reprocess */ 
  AND DV_RSTMT_REASON_CD IN ('GA_SINGLE') 
GROUP BY 1,2,3,4,5

UNION
 /* Added for partner led retro */
SELECT 
 BOOKINGS_MEASURE_KEY ,         
 BOOKINGS_PROCESS_DT   ,        
 BKGS_MEASURE_TRANS_TYPE_CD ,
 DV_END_CUST_PARTY_KEY ,  
 SALES_ACCOUNT_GROUP_PARTY_KEY 
FROM  $$STGDB.WI_DRR_PL_DELTA
GROUP BY 1,2,3,4,5

UNION

SELECT 
  MT.BOOKINGS_MEASURE_KEY ,         
  MT.BOOKINGS_PROCESS_DT   ,        
  MT.BKGS_MEASURE_TRANS_TYPE_CD    ,
  MT.DV_END_CUST_PARTY_KEY       ,  
  MT.SALES_ACCOUNT_GROUP_PARTY_KEY 
FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT , 
     $$COMREFVWDB.R_SALES_HIERARCHY RSH 
WHERE MT.SALES_TERRITORY_KEY = RSH.SALES_TERRITORY_KEY 
  AND DV_RSTMT_REASON_CD <> 'WW_BKGS_TERR' /* Added to ignore WW disti transactions for reprocess */ 
  AND COALESCE(RSH.SALES_TERR_EXPIRATION_DATE , CAST('3500-01-01' AS DATE)) < CURRENT_DATE

UNION
/* customer added to new SAV along with existing sav */
SELECT 
 MT.BOOKINGS_MEASURE_KEY ,         
 MT.BOOKINGS_PROCESS_DT   ,        
 MT.BKGS_MEASURE_TRANS_TYPE_CD    ,
 MT.DV_END_CUST_PARTY_KEY       ,  
 MT.SALES_ACCOUNT_GROUP_PARTY_KEY  
FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT, 
 (                                   
  SELECT CUSTOMER_PARTY_KEY, SALES_ACCOUNT_GROUP_PARTY_KEY FROM $$STGDB.WI_DRR_SYSVIEW_PARTY 
  MINUS
  SELECT CUSTOMER_PARTY_KEY, SALES_ACCOUNT_GROUP_PARTY_KEY FROM $$STGDB.WI_DRR_SYSVIEW_PARTY_BKP 
  ) WI 
WHERE MT.DV_END_CUST_PARTY_KEY = WI.CUSTOMER_PARTY_KEY 
 AND DV_RSTMT_REASON_CD <> 'WW_BKGS_TERR' /* Added to ignore WW disti transactions for reprocess */ 
GROUP BY 1,2,3,4,5

UNION
 
SELECT 
MT.BOOKINGS_MEASURE_KEY,
MT.BOOKINGS_PROCESS_DT,
MT.BKGS_MEASURE_TRANS_TYPE_CD,
MT.DV_END_CUST_PARTY_KEY,
MT.SALES_ACCOUNT_GROUP_PARTY_KEY
FROM 
$$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT
WHERE 
(BOOKINGS_MEASURE_KEY, BOOKINGS_PROCESS_DT, BKGS_MEASURE_TRANS_TYPE_CD) IN 
( 
 SELECT 
 NBM.BOOKINGS_MEASURE_KEY, 
 NBM.BOOKINGS_PROCESS_DATE, 
 NBM.BKGS_MEASURE_TRANS_TYPE_CODE
 FROM 
 $$STGDB.WI_PARTNER_CHANGE WI 
 INNER JOIN 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM 
    ON WI.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
    AND WI.BKGS_MEASURE_TRANS_TYPE_CD = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
    AND WI.BOOKINGS_PROCESS_DT = NBM.BOOKINGS_PROCESS_DATE
 INNER JOIN 
 $$SLSORDVWDB.N_BOOKINGS_CHANNEL_MEASURE NBCM
    ON NBCM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
    AND NBCM.BKGS_MEASURE_TRANS_TYPE_CODE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
    AND NBCM.BOOKINGS_PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE
 LEFT JOIN 
 $$COMREFVWDB.MT_PARTNER_HIERARCHY MPH
    ON MPH.PARTNER_SITE_PARTY_KEY > 0 
    AND MPH.PARTNER_SITE_PARTY_KEY = NBCM.PARTNER_SITE_PARTY_KEY
 WHERE 
 (
   (COALESCE(MPH.BK_PGTMV_PARTNER_ID_INT, -999 ) <> WI.BK_PGTMV_PARTNER_ID_INT) 
   OR 
   (COALESCE(MPH.DD_PGTMV_BE_GEO_ID_INT ,-999) <> WI.DD_PGTMV_BE_GEO_ID_INT )
 )
)

UNION

SELECT 
MT.BOOKINGS_MEASURE_KEY,
MT.BOOKINGS_PROCESS_DT,
MT.BKGS_MEASURE_TRANS_TYPE_CD ,
MT.DV_END_CUST_PARTY_KEY,
MT.SALES_ACCOUNT_GROUP_PARTY_KEY
FROM 
(
 SELECT 
 END_CUSTOMER_KEY, CUSTOMER_PARTY_KEY, CUSTOMER_TYPE 
    FROM 
 $$COMREFVWDB.MT_ERP_POS_ENDCUST  
    WHERE 
 EDW_CREATE_DTM > CURRENT_DATE - 30 
    AND EDW_CREATE_DTM <> EDW_UPDATE_DTM 
) EC 
INNER JOIN 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM  
ON NBM.END_CUSTOMER_KEY > 0 
AND NBM.END_CUSTOMER_KEY = EC.END_CUSTOMER_KEY
INNER JOIN 
$$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY 
ON NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
AND FDY.FISCAL_YEAR_AGE <= 8    
INNER JOIN 
$$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT
ON MT.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND MT.BKGS_MEASURE_TRANS_TYPE_CD = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND MT.BOOKINGS_PROCESS_DT = NBM.BOOKINGS_PROCESS_DATE
AND DV_END_CUST_REASON_DESCR IN ( 'REPLACED WITH SO END CUSTOMER' ) 
AND MT.DV_END_CUST_PARTY_KEY <> EC.CUSTOMER_PARTY_KEY 

UNION

SELECT 
MT.BOOKINGS_MEASURE_KEY,
MT.BOOKINGS_PROCESS_DT,
MT.BKGS_MEASURE_TRANS_TYPE_CD ,
MT.DV_END_CUST_PARTY_KEY,
MT.SALES_ACCOUNT_GROUP_PARTY_KEY
FROM 
(
 SELECT 
 SHIP_TO_CUSTOMER_KEY, CUSTOMER_PARTY_KEY, CUSTOMER_TYPE 
    FROM 
 $$COMREFVWDB.MT_ERP_POS_SHIPTO  
    WHERE 
 EDW_CREATE_DTM > CURRENT_DATE - 30 
    AND EDW_CREATE_DTM <> EDW_UPDATE_DTM 
 ) ST 
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM  
   ON NBM.SHIP_TO_CUSTOMER_KEY > 0 
   AND NBM.SHIP_TO_CUSTOMER_KEY = ST.SHIP_TO_CUSTOMER_KEY
INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY 
   ON NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
  AND FDY.FISCAL_YEAR_AGE <= 8   
INNER JOIN $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT
   ON MT.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
  AND MT.BKGS_MEASURE_TRANS_TYPE_CD = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
  AND MT.BOOKINGS_PROCESS_DT = NBM.BOOKINGS_PROCESS_DATE
  AND DV_END_CUST_REASON_DESCR IN ( 'REPLACED WITH SHIP TO CUSTOMER' ) 
  AND MT.DV_END_CUST_PARTY_KEY <> ST.CUSTOMER_PARTY_KEY
  
  UNION
/* Added to reprocess all CV incremental loaded records through full DRR engine*/  
SELECT 
 BOOKINGS_MEASURE_KEY ,         
 BOOKINGS_PROCESS_DT   ,        
 BKGS_MEASURE_TRANS_TYPE_CD    ,
 DV_END_CUST_PARTY_KEY       ,  
 SALES_ACCOUNT_GROUP_PARTY_KEY 
FROM $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG
 WHERE  DV_RSTMT_REASON_CD IN ('NA_INCR','NA_INCR_RPLCD_NODE') 
GROUP BY 1,2,3,4,5

UNION

SELECT 
	   MT.BOOKINGS_MEASURE_KEY, 
	   MT.BOOKINGS_PROCESS_DT,
	   MT.BKGS_MEASURE_TRANS_TYPE_CD, 
	   MT.DV_END_CUST_PARTY_KEY,
	   MT.SALES_ACCOUNT_GROUP_PARTY_KEY
FROM 
	 $$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT , 
	 ( SELECT SALES_TERRITORY_KEY, ISO_COUNTRY_CODE 
		 FROM $$COMREFVWDB.R_SALES_HIERARCHY_TV
	    WHERE END_TV_DATE <> '3500-01-01'
		  AND END_TV_DATE > CURRENT_DATE - 30
		  AND SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE'
           	  MINUS 
	   SELECT SALES_TERRITORY_KEY , ISO_COUNTRY_CODE 
		 FROM $$COMREFVWDB.R_SALES_HIERARCHY_TV  
	    WHERE END_TV_DATE = '3500-01-01' 
	      AND SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE'
	 ) RSH
 WHERE MT.SALES_TERRITORY_KEY = RSH.SALES_TERRITORY_KEY
 GROUP BY 1,2,3,4,5
	 
UNION 

SELECT 
		MT.BOOKINGS_MEASURE_KEY, 
		MT.BOOKINGS_PROCESS_DT,
		MT.BKGS_MEASURE_TRANS_TYPE_CD,
		MT.DV_END_CUST_PARTY_KEY,
		MT.SALES_ACCOUNT_GROUP_PARTY_KEY
  FROM 
		$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
		$$SLSORDVWDB.MT_SLS_ACNT_RSTD_MSR_DRR_NG MT , 
		( SELECT SALES_TERRITORY_KEY, ISO_COUNTRY_CODE 
		    FROM $$COMREFVWDB.R_SALES_HIERARCHY_TV
		   WHERE END_TV_DATE <> '3500-01-01' 
			 AND SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE'
			 AND END_TV_DATE > CURRENT_DATE - 30
		         MINUS 
		  SELECT SALES_TERRITORY_KEY , ISO_COUNTRY_CODE 
		    FROM $$COMREFVWDB.R_SALES_HIERARCHY_TV  
		   WHERE END_TV_DATE = '3500-01-01' 
		     AND SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE'
		) RSH
 WHERE NBM.SALES_TERRITORY_KEY = RSH.SALES_TERRITORY_KEY
   AND NBM.BOOKINGS_MEASURE_KEY = MT.BOOKINGS_MEASURE_KEY
   AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = MT.BKGS_MEASURE_TRANS_TYPE_CD
   AND NBM.BOOKINGS_PROCESS_DATE = MT.BOOKINGS_PROCESS_DT
GROUP BY 1,2,3,4,5


Post SQL : 



Target4 Name : WI_DRR_MT_SLS_ACNT_RSTD_INCR1


Pre SQL : 
DELETE FROM $$STGDB.WI_DRR_MT_SLS_ACNT_RSTD_INCR ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_DRR_MT_SLS_ACNT_RSTD_INCR','D');


Source5 Name : SQ_MT_NAMD_ACNT_BKGS_MEASURE


Pre SQL : 



SQL Query : 
SELECT  
NABM.BOOKINGS_MEASURE_KEY  ,        
NABM.BOOKINGS_PROCESS_DATE  ,       
NABM.BKGS_MEASURE_TRANS_TYPE_CODE  ,
NB.SALES_TERRITORY_KEY     ,      
NB.SALES_REP_NUMBER,
NB.END_CUSTOMER_KEY,
NB.SHIP_TO_CUSTOMER_KEY,
NB.SOLD_TO_CUSTOMER_KEY,
NB.DV_DEAL_ID,
NB.WIPS_ORIGINATOR_ID_INT,
SH.L1_SALES_TERRITORY_NAME_CODE,
SH.L5_SALES_TERRITORY_NAME_CODE,
SH.L6_SALES_TERRITORY_NAME_CODE,
CASE 
 WHEN SH.ISO_COUNTRY_CODE='UNK'
  THEN SH.DD_EXTERNAL_THEATER_NAME
 ELSE SH.ISO_COUNTRY_CODE
END AS ISO_COUNTRY_CODE ,
NABM.FIELD_VLDTD_END_CUST_PRTY_KEY,
SH.SALES_COVERAGE_CODE,
SH.SALES_TERRITORY_TYPE_CODE,
NABM.SALES_ACCOUNT_GROUP_PARTY_KEY,
NABM.NO_VLD_SLS_ACCT_PTY_RSN_NAME,
-999 AS FIN_ADJ_KEY,
'Engine' AS PROCESS_TYPE,
'N' AS END_CUSTOMER_PROCESS_FLAG               
FROM 
(
SELECT 
BOOKINGS_MEASURE_KEY,
BOOKINGS_PROCESS_DATE,
BKGS_MEASURE_TRANS_TYPE_CODE,
FIELD_VLDTD_END_CUST_PRTY_KEY,
SALES_ACCOUNT_GROUP_PARTY_KEY,
NO_VLD_SLS_ACCT_PTY_RSN_NAME
FROM 
$$SLSORDVWDB.MT_NAMD_ACNT_BKGS_MEASURE 
WHERE EDW_UPDATE_DTM>=(SELECT NAMD_ACNT_EXTRACT_DATE FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG='Y')
GROUP BY 1,2,3,4,5,6) NABM
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NB
ON NB.BOOKINGS_MEASURE_KEY=NABM.BOOKINGS_MEASURE_KEY
AND NB.BOOKINGS_PROCESS_DATE=NABM.BOOKINGS_PROCESS_DATE
AND NB.BKGS_MEASURE_TRANS_TYPE_CODE=NABM.BKGS_MEASURE_TRANS_TYPE_CODE
LEFT JOIN $$COMREFVWDB.R_SALES_HIERARCHY SH
ON SH.SALES_TERRITORY_KEY=NB.SALES_TERRITORY_KEY
AND  SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'


Post SQL : 



Target5 Name : WI_DRR_BOOKINGS_INCRMENTAL


Pre SQL : 
DELETE FROM $$STGDB.WI_DRR_BOOKINGS_INCRMENTAL ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_DRR_BOOKINGS_INCRMENTAL','D');


Source6 Name : SQ_WI_DRR_BOOKINGS_MEASURE_INCR


Pre SQL : 



SQL Query : 
SELECT  
NB.BOOKINGS_MEASURE_KEY  ,        
NB.BOOKINGS_PROCESS_DATE  ,       
NB.BKGS_MEASURE_TRANS_TYPE_CODE  ,
NB.SALES_TERRITORY_KEY     ,      
NB.SALES_REP_NUMBER,
NB.END_CUSTOMER_KEY,
NB.SHIP_TO_CUSTOMER_KEY,
NB.SOLD_TO_CUSTOMER_KEY,
NB.DV_DEAL_ID ,
NB.WIPS_ORIGINATOR_ID_INT,
SH.L1_SALES_TERRITORY_NAME_CODE,
SH.L5_SALES_TERRITORY_NAME_CODE,
SH.L6_SALES_TERRITORY_NAME_CODE,
CASE 
 WHEN SH.ISO_COUNTRY_CODE='UNK'
  THEN SH.DD_EXTERNAL_THEATER_NAME
 ELSE SH.ISO_COUNTRY_CODE
END AS ISO_COUNTRY_CODE,
COALESCE(FIELD_VLDTD_END_CUST_PRTY_KEY,-999)FIELD_VLDTD_END_CUST_PRTY_KEY,
SH.SALES_COVERAGE_CODE,
SH.SALES_TERRITORY_TYPE_CODE,
COALESCE(NABM.SALES_ACCOUNT_GROUP_PARTY_KEY,-999) SALES_ACCOUNT_GROUP_PARTY_KEY,
COALESCE(NABM.NO_VLD_SLS_ACCT_PTY_RSN_NAME, 'UNKNOWN') NO_VLD_SLS_ACCT_PTY_RSN_NAME,
-999 AS FIN_ADJ_KEY,
'Engine' AS PROCESS_TYPE,
'N' AS END_CUSTOMER_PROCESS_FLAG              
FROM $$STGDB.WI_DRR_BOOKINGS_MEASURE_INCR  NB 
LEFT JOIN $$SLSORDVWDB.MT_NAMD_ACNT_BKGS_MEASURE  NABM
ON NB.BOOKINGS_MEASURE_KEY=NABM.BOOKINGS_MEASURE_KEY
AND NB.BOOKINGS_PROCESS_DATE=NABM.BOOKINGS_PROCESS_DATE
AND NB.BKGS_MEASURE_TRANS_TYPE_CODE=NABM.BKGS_MEASURE_TRANS_TYPE_CODE
LEFT JOIN $$COMREFVWDB.R_SALES_HIERARCHY SH
ON SH.SALES_TERRITORY_KEY=NB.SALES_TERRITORY_KEY
AND  SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'


Post SQL : 



Target6 Name : WI_DRR_BOOKINGS_INCRMENTAL1


Pre SQL : 
DELETE FROM $$STGDB.WI_DRR_BOOKINGS_MEASURE_INCR  BKG_INCR
WHERE EXISTS
(SELECT 1 FROM $$STGDB.WI_DRR_BOOKINGS_INCRMENTAL MT_NAMED
WHERE MT_NAMED.BOOKINGS_MEASURE_KEY=BKG_INCR.BOOKINGS_MEASURE_KEY
AND MT_NAMED.BKGS_MEASURE_TRANS_TYPE_CODE=BKG_INCR.BKGS_MEASURE_TRANS_TYPE_CODE
AND MT_NAMED.BOOKINGS_PROCESS_DATE=BKG_INCR.BOOKINGS_PROCESS_DATE)


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_DRR_BOOKINGS_INCRMENTAL','D');


Source7 Name : SQ_WI_DRR_MT_SLS_ACNT_RSTD_INCR


Pre SQL : 



SQL Query : 
SELECT  
SAV_INCR.BOOKINGS_MEASURE_KEY  ,        
SAV_INCR.BOOKINGS_PROCESS_DT  ,       
SAV_INCR.BKGS_MEASURE_TRANS_TYPE_CD  ,
NB.SALES_TERRITORY_KEY     ,      
  NB.SALES_REP_NUMBER,
  NB.END_CUSTOMER_KEY,
  NB.SHIP_TO_CUSTOMER_KEY,
  NB.SOLD_TO_CUSTOMER_KEY,
  NB.DV_DEAL_ID,
  NB.WIPS_ORIGINATOR_ID_INT,
  SH.L1_SALES_TERRITORY_NAME_CODE,
  SH.L5_SALES_TERRITORY_NAME_CODE,
  SH.L6_SALES_TERRITORY_NAME_CODE,
  CASE WHEN COALESCE(SH.ISO_COUNTRY_CODE, 'UNK') = 'UNK'
		THEN SH.DD_EXTERNAL_THEATER_NAME ELSE SH.ISO_COUNTRY_CODE END AS ISO_COUNTRY_CODE ,
  COALESCE(NAMD.FIELD_VLDTD_END_CUST_PRTY_KEY , -999 ) AS FIELD_VLDTD_END_CUST_PRTY_KEY,
  SH.SALES_COVERAGE_CODE,
  SH.SALES_TERRITORY_TYPE_CODE,
  COALESCE(NAMD.SALES_ACCOUNT_GROUP_PARTY_KEY,-999)  AS SALES_ACCOUNT_GROUP_PARTY_KEY,
  COALESCE(NAMD.NO_VLD_SLS_ACCT_PTY_RSN_NAME,'UNKNOWN') AS NO_VLD_SLS_ACCT_PTY_RSN_NAME,
   -999 AS FIN_ADJ_KEY,
  'Engine' AS PROCESS_TYPE,
  'N' AS END_CUSTOMER_PROCESS_FLAG
 FROM $$STGDB.WI_DRR_MT_SLS_ACNT_RSTD_INCR SAV_INCR
 CROSS JOIN ( SEL * FROM $$ETLVWDB.WI_DRR_PROCESS_CONTROL WHERE ACTIVE_FLAG = 'Y') CTRL
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NB
 ON NB.BOOKINGS_MEASURE_KEY=SAV_INCR.BOOKINGS_MEASURE_KEY
 AND NB.BOOKINGS_PROCESS_DATE=SAV_INCR.BOOKINGS_PROCESS_DT
 AND NB.BKGS_MEASURE_TRANS_TYPE_CODE=SAV_INCR.BKGS_MEASURE_TRANS_TYPE_CD
LEFT JOIN $$SLSORDVWDB.MT_NAMD_ACNT_BKGS_MEASURE NAMD
 ON NAMD.BOOKINGS_MEASURE_KEY=SAV_INCR.BOOKINGS_MEASURE_KEY
 AND NAMD.BOOKINGS_PROCESS_DATE=SAV_INCR.BOOKINGS_PROCESS_DT
 AND NAMD.BKGS_MEASURE_TRANS_TYPE_CODE=SAV_INCR.BKGS_MEASURE_TRANS_TYPE_CD
LEFT JOIN $$COMREFVWDB.R_SALES_HIERARCHY SH
ON SH.SALES_TERRITORY_KEY=NB.SALES_TERRITORY_KEY
AND  SALES_TERRITORY_TYPE_CODE  ='CORP. REVENUE'
INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
ON NB.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
WHERE FDY.FISCAL_YEAR_AGE <= CTRL.YEAR_FLG_INT
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21


Post SQL : 



Target7 Name : WI_DRR_BOOKINGS_INCRMENTAL2


Pre SQL : 
DELETE FROM $$STGDB.WI_DRR_MT_SLS_ACNT_RSTD_INCR  RSTD_INCR
WHERE EXISTS
(SELECT 1 FROM $$STGDB.WI_DRR_BOOKINGS_INCRMENTAL MT_NAMED
WHERE MT_NAMED.BOOKINGS_MEASURE_KEY=RSTD_INCR.BOOKINGS_MEASURE_KEY
AND MT_NAMED.BKGS_MEASURE_TRANS_TYPE_CODE=RSTD_INCR.BKGS_MEASURE_TRANS_TYPE_CD
AND MT_NAMED.BOOKINGS_PROCESS_DATE=RSTD_INCR.BOOKINGS_PROCESS_DT)


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_DRR_BOOKINGS_INCRMENTAL','D');


Source8 Name : SQ_WI_FIN_ADJ_BOOKINGS_ALL


Pre SQL : 



SQL Query : 
SELECT  
  BOOKINGS_MEASURE_KEY          
  ,BOOKINGS_PROCESS_DATE         
  ,BKGS_MEASURE_TRANS_TYPE_CODE  
  ,SALES_TERRITORY_KEY           
  ,SALES_REP_NUMBER              
  ,END_CUSTOMER_KEY              
  ,SHIP_TO_CUSTOMER_KEY          
  ,SOLD_TO_CUSTOMER_KEY          
  ,DV_DEAL_ID                    
  ,WIPS_ORIGINATOR_ID_INT        
  ,L1_SALES_TERRITORY_NAME_CODE  
  ,L5_SALES_TERRITORY_NAME_CODE  
  ,L6_SALES_TERRITORY_NAME_CODE  
  ,ISO_COUNTRY_CODE              
  ,CUST_PRTY_KEY                 
  ,SALES_COVERAGE_CODE           
  ,SALES_TERRITORY_TYPE_CODE     
  ,SALES_ACCT_GRP_PRTY_KEY
  ,'UNKNOWN' AS NO_VLD_SLS_ACCT_PTY_RSN_NAME
  ,FIN_ADJ_KEY          
  ,'FinAdj' AS PROCESS_TYPE                  
  ,END_CUSTOMER_PROCESS_FLAG 
 FROM $$STGDB.WI_FIN_ADJ_BOOKINGS_ALL FIN_ADJ
 GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22


Post SQL : 



Target8 Name : WI_DRR_BOOKINGS_INCRMENTAL3


Pre SQL : 
DELETE FROM $$STGDB.WI_DRR_BOOKINGS_INCRMENTAL  INCR
WHERE EXISTS
(SELECT 1 FROM $$STGDB.WI_FIN_ADJ_BOOKINGS_ALL FIN_ADJ
WHERE FIN_ADJ.BOOKINGS_MEASURE_KEY=INCR.BOOKINGS_MEASURE_KEY
AND FIN_ADJ.BKGS_MEASURE_TRANS_TYPE_CODE=INCR.BKGS_MEASURE_TRANS_TYPE_CODE
AND FIN_ADJ.BOOKINGS_PROCESS_DATE=INCR.BOOKINGS_PROCESS_DATE) ;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_DRR_BOOKINGS_INCRMENTAL','D');