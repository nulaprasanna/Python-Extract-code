ETL Name:	wf_N_DYN_RESTMT_SLS_ADJ_UPLD.xml


Session 1: 	s_m_N_DYN_RESTMT_SLS_ADJ_UPLD
Mapping 1: 	m_N_DYN_RESTMT_SLS_ADJ_UPLDm_N_DYN_RESTMT_SLS_ADJ_UPLD


Source1 Name : SQ_W_DYN_RESTMT_SLS_ADJ_UPLD


Pre SQL : 



SQL Query : 
SELECT
BK_SRC_RPTD_UPLD_BY_CEC_ID,
BK_UPLOAD_FILE_NAME,
BK_UPLOADED_DTM,
BK_UPLOAD_FILE_LINE_NUM_INT,
CAST(DV_UPLOADED_DT as DATE) AS DV_UPLOADED_DT,
RESTATEMENT_SUB_TYPE_CD,
BOOKINGS_TRX_TYPE_CD,
SALES_ORDER_LINE_ID_BIGINT,
SRC_RPTD_ORG_SLS_TERR_NAME_CD,
ALLOCATION_SPLIT_PCT,
SRC_RPTD_RSTD_SLS_TERR_NAME_CD,
SALES_ACCT_ID_BIGINT,
SRC_RPTD_CUST_PRTY_ID_BIGINT,
DO_NOT_RESTATE_FLG,
EFFECTIVE_DT,
EXPIRATION_DT,
SRC_RPTD_APPROVED_BY_CEC_ID,
APPROVED_DTM,
DV_APPROVED_DT,
VALIDATION_STATUS_CD,
VALIDATION_STATUS_REASON_DESCR,
PROCESSED_FLG,
SK_TRX_ID_BIGINT,
SK_CUST_TRX_LINE_ID_INT,
POS_TRX_ID_BIGINT,
SLS_ADJSTMT_LINE_NUM,
SK_TRX_DISTRI_ID_BIGINT,
SRC_RPTD_SLS_ORDER_NUM_BIGINT,
TOP_BOOKINGS_POS_TRX_ID_BIGINT,
REASON_COMMENT_TXT,
BOOKINGS_TRX_SUB_TYPE_CD,
CURRENT_TIMESTAMP(0) EDW_CREATE_DTM,
USER EDW_CREATE_USER,
CURRENT_TIMESTAMP(0) EDW_UPDATE_DTM,
USER EDW_UPDATE_USER
FROM
$$WORKDB.W_DYN_RESTMT_SLS_ADJ_UPLD W_UPLD
WHERE NOT EXISTS ( SEL 1 FROM
$$SLSORDVWDB.N_DYN_RESTMT_SLS_ADJ_UPLD N_UPLD
WHERE N_UPLD.BK_SRC_RPTD_UPLD_BY_CEC_ID = W_UPLD.BK_SRC_RPTD_UPLD_BY_CEC_ID 
AND N_UPLD.BK_UPLOAD_FILE_NAME = W_UPLD.BK_UPLOAD_FILE_NAME 
AND N_UPLD.BK_UPLOADED_DTM = W_UPLD.BK_UPLOADED_DTM 
AND N_UPLD.BK_UPLOAD_FILE_LINE_NUM_INT = W_UPLD.BK_UPLOAD_FILE_LINE_NUM_INT )


Post SQL : 



Target1 Name : N_DYN_RESTMT_SLS_ADJ_UPLD


Pre SQL : 



Post SQL : 
UPDATE ST 
FROM $$STGDB.ST_FIN_ADJ_UPLOAD_AUD ST, 
     ( SELECT MIN(BATCH_ID) BATCH_ID FROM $$STGDB.ST_FIN_ADJ_UPLOAD_AUD WHERE PROCESS_FLAG = 'N' ) WI 
SET PROCESS_FLAG = 'Y' 
WHERE ST.BATCH_ID = WI.BATCH_ID ;

CALL COLLECT_STATS_WRAP('$$SLSORDVWDB','N_DYN_RESTMT_SLS_ADJ_UPLD','D');

UPDATE UPLD
FROM
$$SLSORDVWDB.N_DYN_RESTMT_SLS_ADJ_UPLD UPLD,
	( 
	SELECT BK_UPLOAD_FILE_LINE_NUM_INT
	FROM $$SLSORDVWDB.N_DYN_RESTMT_SLS_ADJ_UPLD 
	WHERE VALIDATION_STATUS_CD = 'SUCCESS' 
	AND (BK_UPLOAD_FILE_NAME, BOOKINGS_TRX_TYPE_CD,BOOKINGS_TRX_SUB_TYPE_CD, SRC_RPTD_SLS_ORDER_NUM_BIGINT, SALES_ORDER_LINE_ID_BIGINT, SK_CUST_TRX_LINE_ID_INT, 
			TOP_BOOKINGS_POS_TRX_ID_BIGINT, POS_TRX_ID_BIGINT, SK_TRX_ID_BIGINT, SK_TRX_DISTRI_ID_BIGINT, SLS_ADJSTMT_LINE_NUM, SRC_RPTD_ORG_SLS_TERR_NAME_CD )
			IN
			( SELECT BK_UPLOAD_FILE_NAME, BOOKINGS_TRX_TYPE_CD,BOOKINGS_TRX_SUB_TYPE_CD, SRC_RPTD_SLS_ORDER_NUM_BIGINT, SALES_ORDER_LINE_ID_BIGINT, SK_CUST_TRX_LINE_ID_INT, 
				TOP_BOOKINGS_POS_TRX_ID_BIGINT, POS_TRX_ID_BIGINT, SK_TRX_ID_BIGINT, SK_TRX_DISTRI_ID_BIGINT, SLS_ADJSTMT_LINE_NUM, SRC_RPTD_ORG_SLS_TERR_NAME_CD
			  FROM $$SLSORDVWDB.N_DYN_RESTMT_SLS_ADJ_UPLD UPLD
				INNER JOIN ( SELECT DISTINCT FILE_NAME FROM $$STGDB.WI_FIN_ADJ_DRR_NG_3 ) NG_3
				ON UPLD.BK_UPLOAD_FILE_NAME = NG_3.FILE_NAME
			  WHERE VALIDATION_STATUS_CD = 'SUCCESS'
              GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12 HAVING SUM(ALLOCATION_SPLIT_PCT) <> 100 )
	) WI
SET VALIDATION_STATUS_CD = 'FAILED',
VALIDATION_STATUS_REASON_DESCR = 'SPLIT SUM NOT EQUAL 100 OR PART OF THE SPLIT RECORDS GOT FAILED IN VALIDATION'
WHERE UPLD.BK_UPLOAD_FILE_LINE_NUM_INT = WI.BK_UPLOAD_FILE_LINE_NUM_INT ;