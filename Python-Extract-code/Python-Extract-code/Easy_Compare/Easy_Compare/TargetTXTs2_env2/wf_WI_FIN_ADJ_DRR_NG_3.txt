ETL Name:	wf_WI_FIN_ADJ_DRR_NG_3.xml


Session 1: 	s_m_WI_FIN_ADJ_DRR_NG_3
Mapping 1: 	m_WI_FIN_ADJ_DRR_NG_3m_WI_FIN_ADJ_DRR_NG_3


Source1 Name : SQ_WI_FIN_ADJ_DRR_NG_2_EPXA


Pre SQL : 
DELETE FROM $$STGDB.WI_FIN_ADJ_DRR_NG_3 ;


SQL Query : 
/*Non SLS ADJ Transactions*/
SELECT 
   WI.RESTATEMENT_SUB_TYPE,
   WI.BOOK_SOURCE,
   WI.BOOK_SOURCE_SUB_TYPE,
   WI.ORDER_NUMBER, 
   WI.ORDER_LINE_ID, 
   WI.SALES_TERRITORY_NAME_CODE,
   WI.RESTATED_SALES_TERR_NAME_CODE,
   WI.PARTY_ID,
   WI.SAV_ID,
   WI.SPLIT,
   WI.DNR_FLAG,
   WI.EFFECTIVE_DATE,                
   WI.EXPIRY_DATE ,                    
   WI.APPROVED_BY,
   WI.APPROVED_DTM,
   WI.UPLOADED_BY,
   WI.UPLOADED_DTM,
   WI.FILE_NAME,
   WI.REASON_DESCR,
   WI.SK_CUSTOMER_TRX_LINE_ID_INT ,
   WI.BK_TOP_POS_TRX_ID_INT,
   WI.BK_POS_TRANSACTION_ID_INT,
   WI.BK_SALES_ADJ_LINE_NUMBER_INT,
   WI.SK_TRX_ID_INT,
   WI.SK_TRX_DISTRI_ID_INT,
   CASE WHEN OREPLACE(WI.VALIDATION_COMMENTS,'') IS NULL THEN 'SUCCESS' ELSE 'FAILED'  END AS STATUS ,
   WI.VALIDATION_COMMENTS,
   WI.FILE_NUM_INT
FROM 
(
SELECT 
    WI.RESTATEMENT_SUB_TYPE,
    WI.BOOK_SOURCE,
    WI.BOOK_SOURCE_SUB_TYPE,
    WI.ORDER_NUMBER, 
    WI.ORDER_LINE_ID, 
    WI.SALES_TERRITORY_NAME_CODE,
    WI.RESTATED_SALES_TERR_NAME_CODE,
    WI.PARTY_ID,
    WI.SAV_ID,
    WI.SPLIT,
    WI.DNR_FLAG,
    WI.EFFECTIVE_DATE,                
    WI.EXPIRY_DATE ,                    
    WI.APPROVED_BY,
    WI.APPROVED_DTM,
    WI.UPLOADED_BY,
    WI.UPLOADED_DTM,
    WI.FILE_NAME,
    WI.REASON_DESCR,
    WI.SK_CUSTOMER_TRX_LINE_ID_INT ,
    WI.BK_TOP_POS_TRX_ID_INT,
    WI.BK_POS_TRANSACTION_ID_INT,
    WI.BK_SALES_ADJ_LINE_NUMBER_INT,
    WI.SK_TRX_ID_INT,
    WI.SK_TRX_DISTRI_ID_INT,
	WI.FILE_NUM_INT,
    SUM(SPLIT) OVER( PARTITION BY WI.BOOK_SOURCE,WI.BOOK_SOURCE_SUB_TYPE,WI.ORDER_NUMBER,WI.ORDER_LINE_ID,WI.SK_CUSTOMER_TRX_LINE_ID_INT,WI.BK_TOP_POS_TRX_ID_INT,WI.BK_POS_TRANSACTION_ID_INT,
    WI.SK_TRX_ID_INT,WI.SK_TRX_DISTRI_ID_INT,WI.SALES_TERRITORY_NAME_CODE ) SUM_SPLIT, 
	CASE WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE1_NODE' AND RSH.SALES_TERRITORY_NAME_CODE IS NULL 
         THEN 'INVALID RESTATED_SALES_TERRITORY_NAME_CODE' 
         WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE1_NODE' AND ( WI.PARTY_ID IS NOT NULL OR WI.SAV_ID IS NOT NULL OR WI.DNR_FLAG = 'Y' ) 
         THEN 'PARTY_ID,SAV_ID,DNR_FLAG MUST BE NULL IN RULE1' 
         ELSE ','
      END AS VALIDATION_1 ,
    CASE WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND NP.PARTY_SSOT_PARTY_ID_INT IS NULL THEN 'PARTY_ID EITHER INACTIVE OR INVALID' 
         WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND ( RSH.SALES_TERRITORY_NAME_CODE IS NOT NULL OR WI.SAV_ID IS NOT NULL OR WI.DNR_FLAG = 'Y' )		 
         THEN 'RESTATED_SALES_TERR_NAME_CODE,SAV_ID,DNR_FLAG MUST BE NULL IN RULE2'
		 WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND SPLIT <> 100 THEN 'SPLIT must be 100 in RULE2'
         ELSE ','
     END AS VALIDATION_2 ,  
    CASE WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE3_SAV' AND ( NP.PARTY_SSOT_PARTY_ID_INT IS NULL ) THEN 'PARTY_ID EITHER INACTIVE OR INVALID'
         WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE3_SAV' AND SAV.BK_SALES_ACCOUNT_ID_INT IS NULL THEN 'SAV_ID EITHER INACTIVE OR INVALID'
		 WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE3_SAV' AND NGSV.SALES_ACCOUNT_GROUP_PARTY_KEY IS NULL THEN 'PARTY AND SAV_ID COMBINATION INVALID'		 
         WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE3_SAV' AND ( RSH.SALES_TERRITORY_NAME_CODE IS NOT NULL OR WI.DNR_FLAG = 'Y') 
         THEN 'RESTATED_SALES_TERR_NAME_CODE,DNR_FLAG MUST BE NULL IN RULE3'
         ELSE ','
     END AS VALIDATION_3 ,
    CASE WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE4_DNR' AND DNR_FLAG <> 'Y' THEN 'INVALID DNR FLAG' 
         WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE4_DNR' AND ( RSH.SALES_TERRITORY_NAME_CODE IS NOT NULL OR WI.SAV_ID IS NOT NULL OR WI.PARTY_ID IS NOT NULL) 
         THEN 'RESTATED_SALES_TERR_NAME_CODE,PARTY_ID, SAV_ID MUST BE NULL IN RULE4'
         WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE4_DNR' AND SPLIT <> 100 THEN 'SPLIT must be 100 in RULE4'
		 ELSE ',' 
     END AS VALIDATION_4 ,   
    CASE WHEN SUM_SPLIT <> 100 THEN 'SPLIT SUM NOT EQUAL 100' ELSE ',' END AS VALIDATION_5 ,
	CASE WHEN EFFECTIVE_DATE IS NULL THEN 'EFFECTIVE DATE MUST BE PROVIDED, CANNOT BE NULL' ELSE ',' END AS VALIDATION_6,
	TRIM(BOTH ',' FROM REGEXP_REPLACE( VALIDATION_1 ||','|| VALIDATION_2 ||','|| VALIDATION_3 ||','|| VALIDATION_4 ||','|| VALIDATION_5||','||VALIDATION_6,'(,)+',',',1,0,'c' )) VALIDATION_COMMENTS
FROM ( SELECT * FROM $$STGDB.WI_FIN_ADJ_DRR_NG_2 WHERE BOOK_SOURCE IN ( 'ERP' , 'AR' , 'XAAS' , 'POS' ) AND STATUS = 'SUCCESS' )WI
/*INNER JOIN $$STGDB.WI_DRR_FIN_ADJ_RULE RL 
    ON WI.RESTATEMENT_SUB_TYPE = RL.RESTATEMENT_SUB_TYPE */
LEFT JOIN $$COMREFVWDB.N_PARTY NP
    ON STATUS_CODE = 'A'
   AND NP.SS_CODE IN ( 'CR' , 'CR_MODS' )
   AND NP.PARTY_SSOT_PARTY_ID_INT = WI.PARTY_ID 
LEFT JOIN $$COMREFVWDB.N_SLS_ACCT_GROUP_SAV_PARTY_TV SAV
    ON SAV.BK_SALES_ACCOUNT_ID_INT = WI.SAV_ID
   AND SALES_ACCOUNT_GROUP_TYPE_CD = 'NAMED_ACCOUNT' 
   AND WI.EFFECTIVE_DATE BETWEEN SAV.START_TV_DT AND SAV.END_TV_DT
LEFT JOIN $$COMREFVWDB.N_SA_GRPCSTPTY_LNKSYSVW_TV NGSV 
    ON NP.PARTY_KEY = NGSV.CUSTOMER_PARTY_KEY 
   AND SAV.SALES_ACCOUNT_GROUP_PARTY_KEY = NGSV.SALES_ACCOUNT_GROUP_PARTY_KEY
   AND WI.EFFECTIVE_DATE BETWEEN NGSV.START_TV_DT AND NGSV.END_TV_DT
LEFT JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH 
    ON RSH.SALES_TERRITORY_NAME_CODE = WI.RESTATED_SALES_TERR_NAME_CODE 
   AND RSH.SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE' 
   AND CAST(WI.EFFECTIVE_DATE AS DATE) BETWEEN RSH.SALES_TERR_EFFECTIVE_DATE AND COALESCE( RSH.SALES_TERR_EXPIRATION_DATE, DATE '3500-01-01' )   
) WI


Post SQL : 



Target1 Name : WI_FIN_ADJ_DRR_NG_3EPXA


Pre SQL : 



Post SQL : 



Source2 Name : SQ_WI_FIN_ADJ_DRR_NG_2_SLSADJ_FAIL


Pre SQL : 



SQL Query : 
/*Loading SLS_ADJ Transactions & failed records from NG_2 WI to NG_3 WI*/
SELECT 
   WI.RESTATEMENT_SUB_TYPE,
   WI.BOOK_SOURCE,
   WI.BOOK_SOURCE_SUB_TYPE,
   WI.ORDER_NUMBER, 
   WI.ORDER_LINE_ID, 
   WI.SALES_TERRITORY_NAME_CODE,
   WI.RESTATED_SALES_TERR_NAME_CODE,
   WI.PARTY_ID,
   WI.SAV_ID,
   WI.SPLIT,
   WI.DNR_FLAG,
   WI.EFFECTIVE_DATE,                
   WI.EXPIRY_DATE ,                    
   WI.APPROVED_BY,
   WI.APPROVED_DTM,
   WI.UPLOADED_BY,
   WI.UPLOADED_DTM,
   WI.FILE_NAME,
   WI.REASON_DESCR,
   WI.SK_CUSTOMER_TRX_LINE_ID_INT ,
   WI.BK_TOP_POS_TRX_ID_INT,
   WI.BK_POS_TRANSACTION_ID_INT,
   WI.BK_SALES_ADJ_LINE_NUMBER_INT,
   WI.SK_TRX_ID_INT,
   WI.SK_TRX_DISTRI_ID_INT,
   CASE WHEN OREPLACE(WI.VALIDATION_COMMENTS,'') IS NULL THEN 'SUCCESS' ELSE 'FAILED'  END AS STATUS ,
   WI.VALIDATION_COMMENTS,
   WI.FILE_NUM_INT
FROM 
(
SELECT 
   WI.RESTATEMENT_SUB_TYPE,
   WI.BOOK_SOURCE,
   WI.BOOK_SOURCE_SUB_TYPE,
   WI.ORDER_NUMBER, 
   WI.ORDER_LINE_ID, 
   WI.SALES_TERRITORY_NAME_CODE,
   WI.RESTATED_SALES_TERR_NAME_CODE,
   WI.PARTY_ID,
   WI.SAV_ID,
   WI.SPLIT,
   WI.DNR_FLAG,
   WI.EFFECTIVE_DATE,                
   WI.EXPIRY_DATE ,                    
   WI.APPROVED_BY,
   WI.APPROVED_DTM,
   WI.UPLOADED_BY,
   WI.UPLOADED_DTM,
   WI.FILE_NAME,
   WI.REASON_DESCR,
   WI.SK_CUSTOMER_TRX_LINE_ID_INT ,
   WI.BK_TOP_POS_TRX_ID_INT,
   WI.BK_POS_TRANSACTION_ID_INT,
   WI.BK_SALES_ADJ_LINE_NUMBER_INT,
   WI.SK_TRX_ID_INT,
   WI.SK_TRX_DISTRI_ID_INT,
   WI.FILE_NUM_INT,
   SUM(SPLIT) OVER( PARTITION BY WI.BOOK_SOURCE,WI.BOOK_SOURCE_SUB_TYPE,WI.BK_SALES_ADJ_LINE_NUMBER_INT,WI.SALES_TERRITORY_NAME_CODE ) SUM_SPLIT,
   CASE 
   			/*WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE1_NODE' AND RL.TRANS_SUB_TYPE = 'REBATE' AND NSA.BK_SALES_ADJ_CODE NOT LIKE '%RB%' 
        				THEN 'NOT A REBATE ADJUSTMENT' 
        	WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE1_NODE' AND RL.TRANS_SUB_TYPE = 'CLOUD' AND ( NSA.BK_SALES_ADJ_CODE NOT LIKE '%CLD%' AND NSA.BK_SALES_ADJ_CODE NOT LIKE '%CLOUD%' ) 
        				THEN 'NOT A CLOUD ADJUSTMENT' */
  			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE1_NODE' AND RSH.SALES_TERRITORY_NAME_CODE IS NULL
        				THEN 'INVALID RESTATED_SALES_TERR_NAME_CODE' 
			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE1_NODE' AND ( WI.PARTY_ID IS NOT NULL OR WI.SAV_ID IS NOT NULL OR WI.DNR_FLAG = 'Y' ) 
			THEN 'PARTY_ID,SAV_ID,DNR_FLAG MUST BE NULL IN RULE1'
        	ELSE ','
   END VALIDATION_1, 
   CASE 
   		/*	WHEN RL.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND RL.TRANS_SUB_TYPE = 'WEBEX' AND NSA.BK_SALES_ADJ_CODE NOT LIKE '%WEBEX%'
        				THEN 'NOT A WEBEX ADJUSTMENT' 
			WHEN RL.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND RL.TRANS_SUB_TYPE = 'ACQUISITION' AND 
      					 ( NSA.BK_SALES_ADJ_CODE LIKE '%AC%CLD%' OR NSA.BK_SALES_ADJ_CODE LIKE '%AC%CLOUD%' OR NSA.BK_SALES_ADJ_CODE LIKE '%AC%WEBEX%' )  
  						THEN 'NOT AN ACQUISTION ADJUSTMENT'
			WHEN RL.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND RL.TRANS_SUB_TYPE = 'ACQUISITION' AND NSA.BK_SALES_ADJ_CODE NOT LIKE 'AC%'   
        				THEN 'NOT AN ACQUISTION ADJUSTMENT' */
			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND NP.PARTY_SSOT_PARTY_ID_INT IS NULL
  						THEN 'INVALID PARTY ID'
			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND ( RSH.SALES_TERRITORY_NAME_CODE IS NOT NULL OR WI.SAV_ID IS NOT NULL OR WI.DNR_FLAG = 'Y' )		 
			THEN 'RESTATED_SALES_TERR_NAME_CODE,SAV_ID,DNR_FLAG MUST BE NULL IN RULE2'			
			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND SPLIT <> 100 
						THEN 'SPLIT must be 100 in RULE2'
        	ELSE ','
    END AS VALIDATION_2 ,
    CASE 
        	WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE3_SAV' AND NP.PARTY_SSOT_PARTY_ID_INT IS NULL 
						THEN 'PARTY_ID EITHER INACTIVE OR INVALID'
        	WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE3_SAV' AND SAV.BK_SALES_ACCOUNT_ID_INT IS NULL 
						THEN 'SAV_ID EITHER INACTIVE OR INVALID'
  			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE3_SAV' AND NGSV.SALES_ACCOUNT_GROUP_PARTY_KEY IS NULL 
						THEN 'PARTY AND SAV COMBINATION INVALID'
        ELSE ','
    END AS VALIDATION_3 ,
    CASE 
			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE4_DNR' AND DNR_FLAG <> 'Y' 
						THEN 'INVALID DNR FLAG' 
			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE4_DNR' AND SPLIT <> 100 
						THEN 'SPLIT must be 100 in RULE4'
        ELSE ',' 
    END AS VALIDATION_4 ,  
    CASE 
  			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE1_NODE' AND ( WI.PARTY_ID IS NOT NULL OR WI.SAV_ID IS NOT NULL OR WI.DNR_FLAG = 'Y' ) 
        				THEN 'PARTY_ID,SAV_ID,DNR_FLAG MUST BE NULL IN RULE1' 
        	WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE2_PARTY' AND ( RSH.SALES_TERRITORY_NAME_CODE IS NOT NULL OR WI.SAV_ID IS NOT NULL OR WI.DNR_FLAG = 'Y' ) 
        				THEN 'RESTATED_SALES_TERR_NAME_CODE,SAV_ID,DNR_FLAG MUST BE NULL IN RULE2' 
  			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE3_SAV' AND ( RSH.SALES_TERRITORY_NAME_CODE IS NOT NULL OR WI.DNR_FLAG = 'Y' ) 
        				THEN 'RESTATED_SALES_TERR_NAME_CODE,DNR_FLAG MUST BE NULL IN RULE3'
  			WHEN WI.RESTATEMENT_SUB_TYPE = 'RULE4_DNR' AND ( RSH.SALES_TERRITORY_NAME_CODE IS NOT NULL OR WI.SAV_ID IS NOT NULL OR WI.PARTY_ID IS NOT NULL) 
        				THEN 'RESTATED_SALES_TERR_NAME_CODE,PARTY_ID, SAV_ID MUST BE NULL IN RULE4'
  			ELSE ','
    END AS VALIDATION_5 ,
    /*CASE 
			WHEN WI.RESTATEMENT_SUB_TYPE IN ( 'RULE3_SAV' , 'RULE4_DNR' ) AND 
               ( NSA.BK_SALES_ADJ_CODE LIKE '%WEBEX%' OR NSA.BK_SALES_ADJ_CODE LIKE 'AC%' OR NSA.BK_SALES_ADJ_CODE LIKE '%CLD%' OR 
               NSA.BK_SALES_ADJ_CODE LIKE '%CLOUD%' OR NSA.BK_SALES_ADJ_CODE = 'RB' ) 
			   			THEN 'NOT A VALID ADJUSTMENT UNDER RULE3,RULE4' 
         	ELSE ',' 
     END AS VALIDATION_6, */
	/* CASE 
				WHEN WI.RESTATEMENT_SUB_TYPE IN ( 'RULE2_PARTY','RULE3_SAV','RULE4_DNR' ) AND WI.SALES_TERRITORY_NAME_CODE LIKE '%CLD%OFFSET%' OR WI.SALES_TERRITORY_NAME_CODE LIKE '%CLOUD%OFFSET%' 
      					THEN 'CLOUD OFFSET ADJ ARE NOT VALID IN RULE2,RULE3,RULE4'
         		ELSE ',' 
    END AS VALIDATION_7, */
    CASE 
				WHEN SUM_SPLIT <> 100 
						THEN 'SPLIT SUM NOT EQUAL 100' 
				ELSE ',' 
	END AS VALIDATION_8 ,
	CASE 		
				WHEN EFFECTIVE_DATE IS NULL 
						THEN 'EFFECTIVE DATE MUST BE PROVIDED, CANNOT BE NULL' ELSE ','
	END AS VALIDATION_9,
    TRIM(BOTH ',' FROM REGEXP_REPLACE( VALIDATION_1 ||','|| VALIDATION_2 ||','|| VALIDATION_3 ||','|| VALIDATION_4 ||','|| VALIDATION_5||','||VALIDATION_8||','||VALIDATION_9,'(,)+',',',1,0,'c' )) VALIDATION_COMMENTS
FROM (SELECT * FROM $$STGDB.WI_FIN_ADJ_DRR_NG_2 WHERE BOOK_SOURCE IN ( 'SLS_ADJ' ) AND STATUS = 'SUCCESS') WI
/*INNER JOIN $$STGDB.WI_DRR_FIN_ADJ_RULE RL 
   ON WI.RESTATEMENT_SUB_TYPE = RL.RESTATEMENT_SUB_TYPE */
LEFT JOIN $$COMREFVWDB.N_PARTY NP
   ON STATUS_CODE = 'A'
  AND NP.SS_CODE IN ( 'CR' , 'CR_MODS' )
  AND NP.PARTY_SSOT_PARTY_ID_INT = WI.PARTY_ID 
LEFT JOIN $$COMREFVWDB.N_SLS_ACCT_GROUP_SAV_PARTY_TV SAV
   ON SAV.BK_SALES_ACCOUNT_ID_INT = WI.SAV_ID
   AND SALES_ACCOUNT_GROUP_TYPE_CD = 'NAMED_ACCOUNT' 
   AND WI.EFFECTIVE_DATE BETWEEN SAV.START_TV_DT AND SAV.END_TV_DT
LEFT JOIN $$COMREFVWDB.N_SA_GRPCSTPTY_LNKSYSVW_TV NGSV 
   ON NP.PARTY_KEY = NGSV.CUSTOMER_PARTY_KEY 
   AND SAV.SALES_ACCOUNT_GROUP_PARTY_KEY = NGSV.SALES_ACCOUNT_GROUP_PARTY_KEY
   AND WI.EFFECTIVE_DATE BETWEEN NGSV.START_TV_DT AND NGSV.END_TV_DT
LEFT JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH 
   ON RSH.SALES_TERRITORY_NAME_CODE = WI.RESTATED_SALES_TERR_NAME_CODE
   AND RSH.SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE' 
   AND CAST(WI.EFFECTIVE_DATE AS DATE) BETWEEN RSH.SALES_TERR_EFFECTIVE_DATE AND COALESCE( RSH.SALES_TERR_EXPIRATION_DATE, DATE '3500-01-01' )   
LEFT JOIN $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE NSAL
   ON WI.BK_SALES_ADJ_LINE_NUMBER_INT = NSAL.BK_SALES_ADJ_LINE_NUMBER_INT
/* LEFT JOIN $$SLSORDVWDB.N_SALES_ADJUSTMENT NSA
   ON NSAL.BK_SALES_ADJ_NUMBER_INT = NSA.BK_SALES_ADJ_NUMBER_INT */
) WI

UNION ALL

SELECT 
   WI.RESTATEMENT_SUB_TYPE,
   WI.BOOK_SOURCE,
   WI.BOOK_SOURCE_SUB_TYPE,
   WI.ORDER_NUMBER, 
   WI.ORDER_LINE_ID, 
   WI.SALES_TERRITORY_NAME_CODE,
   WI.RESTATED_SALES_TERR_NAME_CODE,
   WI.PARTY_ID,
   WI.SAV_ID,
   WI.SPLIT,
   WI.DNR_FLAG,
   WI.EFFECTIVE_DATE,                
   WI.EXPIRY_DATE ,                    
   WI.APPROVED_BY,
   WI.APPROVED_DTM,
   WI.UPLOADED_BY,
   WI.UPLOADED_DTM,
   WI.FILE_NAME,
   WI.REASON_DESCR,
   WI.SK_CUSTOMER_TRX_LINE_ID_INT ,
   WI.BK_TOP_POS_TRX_ID_INT ,
   WI.BK_POS_TRANSACTION_ID_INT,
   WI.BK_SALES_ADJ_LINE_NUMBER_INT ,
   WI.SK_TRX_ID_INT,
   WI.SK_TRX_DISTRI_ID_INT,
   WI.STATUS,
   WI.VALIDATION_COMMENTS,
   WI.FILE_NUM_INT
FROM $$STGDB.WI_FIN_ADJ_DRR_NG_2 WI WHERE STATUS = 'FAILED'


Post SQL : 



Target2 Name : WI_FIN_ADJ_DRR_NG_3SLS_ADJ_FAIL


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_FIN_ADJ_DRR_NG_3','D');