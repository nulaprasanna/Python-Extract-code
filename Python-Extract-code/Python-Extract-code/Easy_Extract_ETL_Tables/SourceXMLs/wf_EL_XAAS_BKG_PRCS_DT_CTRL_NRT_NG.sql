ETL Name:	wf_EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG.xml


Session 1: 	s_m_EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG
Mapping 1: 	m_EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG


Source1 Name : SQ_ST_XAAS_BKG_INCR_DT_CTRL_NRT


Pre SQL : 



SQL Query : 
SELECT 
 SBNBIDC.JOB_STREAM_ID                 ,
 SBNBIDC.DAY_MAX_SOURCE_COMMIT_TIME    ,
 SBNBIDC.LAST_EXTRACT_DATE             ,
 SBNBIDC.CNT                           ,
 SBNBIDC.NEXT_DAY_SRC_COMMIT_TIME      ,
 SBNBIDC.MAX_SOURCE_COMMIT_TIME        
 FROM
 $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG SBNBIDC
 WHERE 1=2


Post SQL : 



Target1 Name : ST_XAAS_BKG_INCR_DT_CTRL_NRT1


Pre SQL : 
DELETE FROM $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG;
   INSERT INTO $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG  
    SELECT * FROM 
    (
    SELECT CAST('wf_ST_XXOPL_BOOKING_TRANSACTIONS' AS VARCHAR(40)) as JOB_STREAM_ID, 
        CAST(CAST(MAX(EDW_CREATE_DTM) AS VARCHAR(19)) AS TIMESTAMP(0)) DAY_MAX_SOURCE_COMMIT_TIME,
        MAX(LAST_EXTRACT_DATE) LAST_EXTRACT_DATE ,COUNT(1)  CNT
    FROM (SELECT * FROM $$STGDB.ST_SI_XXOPL_BKG_TRANSACTIONS XXOPL
 WHERE (NOT ( EXISTS (
 SELECT 1 FROM $$ETLVWDB.EL_OE_ORDER_SOURCES EL  
 WHERE (COALESCE(XXOPL.ORDER_SOURCE_ID,-999)=EL.ORDER_SOURCE_ID) AND EL.NAME='Acquisitions'
 )OR  UPPER(COALESCE(XXOPL.ORDER_ORIGIN,'UNKNOWN'))  IN ('ACQ-APPD','ACQ-WEBX','ACQ-WEBEX')))
    )ST,
      (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS_NRT WHERE JOB_STREAM_ID ='wf_ST_XXOPL_BOOKING_TRANSACTIONS' ) TEMP
    WHERE CAST(CAST(EDW_CREATE_DTM AS VARCHAR(19)) AS TIMESTAMP(0)) >TEMP.LAST_EXTRACT_DATE
    AND  CAST(CAST(EDW_CREATE_DTM AS VARCHAR(19)) AS TIMESTAMP(0)) <
    (SELECT PROCESS_END_DTM FROM $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  WHERE SS_CD='XAAS')
    AND COALESCE(BOOKING_SOURCE,'OPL')<>'CG1'
    ) TEMP5,
    (SELECT   CAST(CAST(MIN(EDW_CREATE_DTM) AS VARCHAR(19)) AS TIMESTAMP(0)) NEXT_DAY_SRC_COMMIT_TIME, CAST(CAST(MAX(EDW_CREATE_DTM) AS VARCHAR(19)) AS TIMESTAMP(0))  MAX_SOURCE_COMMIT_TIME  
    FROM  (SELECT * FROM $$STGDB.ST_SI_XXOPL_BKG_TRANSACTIONS XXOPL
    WHERE (NOT ( EXISTS (
    SELECT 1 FROM $$ETLVWDB.EL_OE_ORDER_SOURCES EL  
    WHERE (COALESCE(XXOPL.ORDER_SOURCE_ID,-999)=EL.ORDER_SOURCE_ID) AND EL.NAME='Acquisitions'
 )OR  UPPER(COALESCE(XXOPL.ORDER_ORIGIN,'UNKNOWN'))  IN ('ACQ-APPD','ACQ-WEBX','ACQ-WEBEX')))
    )ST WHERE  CAST(CAST(EDW_CREATE_DTM AS VARCHAR(19)) AS TIMESTAMP(0)) >=(SELECT PROCESS_END_DTM FROM $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  
    WHERE SS_CD='XAAS')
    ) TEMP2 
   
   UNION ALL
    
    SELECT  * FROM 
    (
    SELECT CAST('wf_ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG' AS VARCHAR(40)) as JOB_STREAM_ID, 
        MAX(SOURCE_COMMIT_DTM) DAY_MAX_SOURCE_COMMIT_TIME,
        MAX(LAST_EXTRACT_DATE) LAST_EXTRACT_DATE ,COUNT(1)  CNT
    FROM $$NRTSTGDB.WI_SC_FOR_PRCS_DT_XAAS_NRT_NG TRX_SC_FNL,
      (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS_NRT WHERE JOB_STREAM_ID ='wf_ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG' ) TEMP
    WHERE SOURCE_COMMIT_DTM>TEMP.LAST_EXTRACT_DATE
    AND  SOURCE_COMMIT_DTM <(SELECT PROCESS_END_DTM FROM $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  WHERE SS_CD='XAAS' )  
    ) TEMP5,
    (SELECT  MIN(SOURCE_COMMIT_DTM) NEXT_DAY_SRC_COMMIT_TIME, MAX(SOURCE_COMMIT_DTM)  MAX_SOURCE_COMMIT_TIME  
     FROM  $$NRTSTGDB.WI_SC_FOR_PRCS_DT_XAAS_NRT_NG TRX_SC_FNL
     WHERE  SOURCE_COMMIT_DTM >=(SELECT PROCESS_END_DTM 
      FROM 
      $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  WHERE SS_CD='XAAS' )
    ) TEMP2
    
     /* added logic for the new XAAS custom work flow - OA - Q1FY16 */
    UNION ALL
    
    SELECT  * FROM 
    (
    SELECT CAST('wf_ST_XAAS_XXOA_ORDER_ATTRIB_NRT_NG' AS VARCHAR(40)) as JOB_STREAM_ID, 
        MAX(EDW_CREATE_DTM) DAY_MAX_SOURCE_COMMIT_TIME,
        MAX(LAST_EXTRACT_DATE) LAST_EXTRACT_DATE ,COUNT(1)  CNT
    FROM $$STGDB.ST_SI_XXOA_ORDER_ATTRIB CGOA,
      (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS_NRT WHERE JOB_STREAM_ID ='wf_ST_XAAS_XXOA_ORDER_ATTRIB_NRT_NG' ) TEMP
    WHERE    EDW_CREATE_DTM>TEMP.LAST_EXTRACT_DATE
    AND  EDW_CREATE_DTM <(SELECT PROCESS_END_DTM FROM $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  WHERE SS_CD='XAAS' ) 
     AND DATA_SOURCE IN ('TSL')  
    ) TEMP5,
    (SELECT  MIN(EDW_CREATE_DTM) NEXT_DAY_SRC_COMMIT_TIME, MAX(EDW_CREATE_DTM)  MAX_SOURCE_COMMIT_TIME  
     FROM  $$STGDB.ST_SI_XXOA_ORDER_ATTRIB CGOA
     WHERE  EDW_CREATE_DTM >=(SELECT PROCESS_END_DTM 
      FROM 
      $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  WHERE SS_CD='XAAS' )
     AND DATA_SOURCE IN ('TSL')  
    ) TEMP2;


Post SQL : 
UPDATE  A
 FROM  $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG   A, 
 (SELECT MAX(CNT) CNT , MAX(NEXT_DAY_SRC_COMMIT_TIME)  NEXT_DAY_SRC_COMMIT_TIME  FROM $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG) TEMP
 SET DAY_MAX_SOURCE_COMMIT_TIME=MAX_SOURCE_COMMIT_TIME       
 WHERE A.CNT =0
 AND TEMP.NEXT_DAY_SRC_COMMIT_TIME IS NOT NULL ;
 
 
 
 
 UPDATE  A
 FROM $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG   A, 
 (SELECT MAX(CNT)  MAXCNT, MIN(CNT) MINCNT, MAX(NEXT_DAY_SRC_COMMIT_TIME)  NEXT_DAY_SRC_COMMIT_TIME  
 FROM $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG) TEMP,
 (SELECT  PROCESS_END_DTM FROM $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG WHERE SS_CD='XAAS') TEMP1
 SET DAY_MAX_SOURCE_COMMIT_TIME=PROCESS_END_DTM
 WHERE MINCNT =0
 AND MAXCNT<>0
 AND TEMP.NEXT_DAY_SRC_COMMIT_TIME IS NOT NULL ;


Source2 Name : SQ_EL_XAAS_BKG_PRCS_DT_CTRL_NRT


Pre SQL : 



SQL Query : 
SELECT ELNG.PROCESS_DT, ELNG.SS_CD, ELNG.PROCESS_START_DTM, ELNG.PROCESS_END_DTM, ELNG.CURRENT_FISCAL_MONTH_END_DT, ELNG.NEXT_FISCAL_MONTH_START_DT, ELNG.EDW_CREATE_USER, ELNG.EDW_UPDATE_USER, ELNG.EDW_CREATE_DATETIME, ELNG.EDW_UPDATE_DATETIME 
 FROM
  $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG ELNG
 WHERE 1=2


Post SQL : 



Target2 Name : EL_XAAS_BKG_PROCESS_DT_CTRL_NRT1


Pre SQL : 
DELETE FROM $$NRTSTGDB.ST_XAAS_BKG_PRCS_DT_CTRL_NRT_NG;

 INSERT INTO $$NRTSTGDB.ST_XAAS_BKG_PRCS_DT_CTRL_NRT_NG 
 (
 PROCESS_DT                  ,
 PROCESS_START_DTM            ,
 PROCESS_END_DTM              
 )
 SELECT 
  CASE 
   WHEN (CNT=0 
  AND NEXT_DAY_SRC_COMMIT_TIME >=  PROCESS_END_DTM 
  AND CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) =CURRENT_FISCAL_MONTH_END_DT) 
    THEN  CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE)
   WHEN (CNT=0  
  AND CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) = NEXT_FISCAL_MONTH_START_DT 
  AND CAST(CAST(NEXT_DAY_SRC_COMMIT_TIME  AS DATE) AS TIMESTAMP(0))     +( interval '21:00' hour to minute ) >=  PROCESS_END_DTM )  
  AND  Cast(Substr(Cast( PROCESS_END_DTM As varchar(20)),12,19) As Interval Hour(2) To Second(0))  BETWEEN CAST ('00:00:00' AS Interval Hour(2) To Second(0))  
  AND CAST('20:59:59' AS Interval Hour(2) To Second(0))
    THEN CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) /*--+ INTERVAL '1' DAY*/
   WHEN (CNT=0  
  AND CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) = NEXT_FISCAL_MONTH_START_DT 
  AND CAST(CAST(NEXT_DAY_SRC_COMMIT_TIME  AS DATE) AS TIMESTAMP(0))     +( interval '21:00' hour to minute  ) >=  PROCESS_END_DTM )  
  AND  Cast(Substr(Cast( PROCESS_END_DTM As varchar(20)),12,19) As Interval Hour(2) To Second(0))  >CAST('21:00:00' AS Interval Hour(2) To Second(0))
    THEN CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) + INTERVAL '1' DAY
   WHEN (CNT=0 
  AND NEXT_DAY_SRC_COMMIT_TIME >= PROCESS_END_DTM) 
    THEN CAST  (PROCESS_DT AS DATE) + INTERVAL '1' DAY
  END PROCESS_DT,
  CASE 
   WHEN (CNT=0 
  AND NEXT_DAY_SRC_COMMIT_TIME >=  PROCESS_END_DTM 
  AND CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) =CURRENT_FISCAL_MONTH_END_DT) 
    THEN CAST(CAST(NEXT_DAY_SRC_COMMIT_TIME  AS DATE) AS TIMESTAMP(0))   
   WHEN (CNT=0  
  AND CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) =NEXT_FISCAL_MONTH_START_DT 
  AND CAST(CAST(NEXT_DAY_SRC_COMMIT_TIME  AS DATE) AS TIMESTAMP(0))     +( interval '21:00' hour to minute  ) > PROCESS_END_DTM ) 
    THEN  CAST(CAST(NEXT_DAY_SRC_COMMIT_TIME  AS DATE) AS TIMESTAMP(0))     
   WHEN (CNT=0 
  AND NEXT_DAY_SRC_COMMIT_TIME >=  PROCESS_END_DTM) 
    THEN PROCESS_END_DTM
  END PROCESS_START_DTM,     
  CASE /*--THEN   cast( cast(PROCESS_END_DTM as date) +1 as TIMESTAMP(0))*/
   WHEN (CNT=0 
  AND NEXT_DAY_SRC_COMMIT_TIME >=  PROCESS_END_DTM 
  AND CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) =CURRENT_FISCAL_MONTH_END_DT) 
     THEN CAST(CAST(NEXT_DAY_SRC_COMMIT_TIME  AS DATE) + INTERVAL '1' DAY  AS TIMESTAMP(0)   )  
   WHEN (CNT=0 
  AND CAST(NEXT_DAY_SRC_COMMIT_TIME AS DATE) =NEXT_FISCAL_MONTH_START_DT 
  AND CAST(CAST(NEXT_DAY_SRC_COMMIT_TIME  AS DATE) AS TIMESTAMP(0))     +( interval '21:00' hour to minute )> PROCESS_END_DTM ) 
     THEN CAST(CAST(NEXT_DAY_SRC_COMMIT_TIME  AS DATE) AS TIMESTAMP(0))     +( interval '21:00' hour to minute)
   WHEN (CNT=0 
  AND NEXT_DAY_SRC_COMMIT_TIME >=  PROCESS_END_DTM)  
     THEN PROCESS_END_DTM +INTERVAL '1' DAY                                                                                          
   
 END PROCESS_END_DTM 
  
 FROM 
  (
 SELECT  MAX(CNT) CNT, MAX(NEXT_DAY_SRC_COMMIT_TIME) NEXT_DAY_SRC_COMMIT_TIME
   
 FROM  $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG ) TEMP 
   CROSS JOIN (
 SELECT *  
 FROM $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG 
 WHERE SS_CD='XAAS') C;


Post SQL : 
UPDATE  A
 FROM 
 $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  A,
 $$NRTSTGDB.ST_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  B
 SET PROCESS_DT  =B.PROCESS_DT,
 PROCESS_START_DTM=B.PROCESS_START_DTM,
 PROCESS_END_DTM=B.PROCESS_END_DTM,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
 WHERE B.PROCESS_DT IS NOT NULL AND SS_CD='XAAS' ;
 
 UPDATE CTRL
 FROM $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG CTRL,
 (SEL FISCAL_MONTH_START_DATE, FISCAL_MONTH_END_DATE FROM $$COMREFVWDB.R_FISCAL_MONTH_TO_YEAR WHERE FISCAL_YEAR_MONTH_INT =
 (SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL_NG) )CURR_FISCAL,
 (
 SEL FISCAL_MONTH_START_DATE, FISCAL_MONTH_END_DATE  FROM $$COMREFVWDB.R_FISCAL_MONTH_TO_YEAR WHERE FISCAL_YEAR_MONTH_INT >(
 SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL_NG)
 QUALIFY ROW_NUMBER() OVER(ORDER BY FISCAL_YEAR_MONTH_INT)=1
 ) NEXT_FISCAL
 SET CURRENT_FISCAL_MONTH_END_DT = CURR_FISCAL.FISCAL_MONTH_END_DATE, NEXT_FISCAL_MONTH_START_DT = NEXT_FISCAL.FISCAL_MONTH_START_DATE
 WHERE CTRL.CURRENT_FISCAL_MONTH_END_DT  <> CURR_FISCAL.FISCAL_MONTH_END_DATE;
 
 CALL COLLECT_STATS_WRAP('$$ETLONLYDB','EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG','D');