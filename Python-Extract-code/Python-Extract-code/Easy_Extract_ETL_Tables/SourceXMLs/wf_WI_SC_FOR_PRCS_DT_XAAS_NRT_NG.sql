ETL Name:	wf_WI_SC_FOR_PRCS_DT_XAAS_NRT_NG.xml


Session 1: 	s_m_WI_SC_FOR_PRCS_DT_XAAS_NRT_NG
Mapping 1: 	m_WI_SC_FOR_PRCS_DT_XAAS_NRT_NG


Source1 Name : SQ_WI_SC_FOR_PRCS_DT_XAAS_NRT_NG


Pre SQL : 
DELETE FROM $$NRTSTGDB.WI_SC_FOR_PRCS_DT_XAAS_NRT_NG;
 CREATE VOLATILE TABLE XAAS 
 AS (SELECT * 
 FROM $$NRTACCUMVWDB.XXOTM_PHX_TRX_SPLITS_SC TRX_SPLITS_SC_INNER /* DBOMMISE: CHANGING SC SOURCE AS PART OF PARALLEL SC FOR SALES COMP Q3FY19 */
 WHERE  TRX_SPLITS_SC_INNER.SOURCE_COMMIT_TIME > ( 
 SELECT LAST_EXTRACT_DATE 
 FROM $$ETLVWDB.DW_JOB_STREAMS_NRT 
 WHERE  JOB_STREAM_ID = 'wf_ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG' ) 
 QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY TRX_SPLIT_SC_ID 
 ORDER  BY REFRESH_DATETIME DESC ) = 1) WITH DATA PRIMARY INDEX(TRX_SPLIT_SC_ID)
 ON COMMIT PRESERVE ROWS; 
 
 COLLECT STATISTICS COLUMN (TRX_ID) ON XAAS;
 
 COLLECT STATISTICS COLUMN (TRX_SPLIT_SC_ID) ON XAAS;
 
 COLLECT STATISTICS COLUMN (SC_ID) ON XAAS;
 
 
 INSERT INTO $$NRTSTGDB.WI_SC_FOR_PRCS_DT_XAAS_NRT_NG
 (
 CDB_DEQUEUE_TIME              
 ,CREATION_DATE                 
 ,DEBIT_CREDIT_CODE             
 ,ETL_PROCESS_DTM               
 ,LAST_UPDATE_DATE              
 ,LATEST_SC_FLAG                
 ,ORDER_LINE_ID                 
 ,OTM_TERR_ID                   
 ,OTM_TERR_NAME                 
 ,OTM_TERR_TYPE_CODE            
 ,REBOK_CHANNEL_FLAG            
 ,SALESREP_NUMBER               
 ,SC_ASSIGNMENT_MODE_CODE       
 ,SC_LAST_UPD_DATE              
 ,SC_REASON_CODE                
 ,SC_SPLIT_PERCENT              
 ,SC_TYPE_CODE                  
 ,SC_UNALLOCATED                
 ,SC_USAGE_CODE                 
 ,SHR_NODE_ID                   
 ,TERRITORY_TYPE_CODE           
 ,TRX_ORIG_CODE                 
 ,TRX_SPLIT_SC_ID                     
 ,TRX_SOURCE_TYPE               
 ,USER_NAME                     
 ,ROLLUP_FLAG                   
 ,SC_ID                         
 ,SC_DUPLICATE_FLAG             
 ,CHANGE_TYPE_CODE              
 ,TRX_VERSION_CHANGE_FLG        
 ,DISTRIBUTOR_BUCKET_FLG        
 ,TRX_ID                        
 ,START_DTM                     
 ,EXPIRATION_DTM                
 ,SOURCE_TRX_ID                 
 ,SOURCE_COMMIT_DTM             
 ,DV_SOURCE_COMMIT_DT           
 ,UCRM_CASE_NUM        
 ,TRX_SPLIT_BU_KEY
 ,TRX_SPLIT_ID
 ,SPLIT_1_BU_KEY
 ,SPLIT_1_PERCENTAGE
 ,SPLIT_2_BU_KEY
 ,SPLIT_2_PERCENTAGE
 ,TOTAL_SPLIT
 )
 SELECT CAST( '1900-01-01 00:00:00' AS TIMESTAMP( 0 )  ) CDB_DEQUEUE_TIME  ,
         TRX_SPLITS_SC.CREATION_DATE , 
   SC.DEBIT_CREDIT_CODE , 
   CURRENT_TIMESTAMP( 0 ) AS ETL_PROCESS_DTM ,
         TRX_SPLITS_SC.LAST_UPDATE_DATE , 
   TRX_SPLITS_SC.LATEST_SC_FLAG , 
   MNL.ORDER_LINE_ID ,
         EXT.JTF_TERRITORIES_ID AS OTM_TERR_ID , 
   TERR.NAME AS OTM_TERR_NAME ,
         TYP.NAME AS OTM_TERR_TYPE_CODE , 
   COALESCE( ASGN.CLASS_CODE ,'Y' , 'N' ) REBOK_CHANNEL_FLAG  , 
   SC.SALESREP_NUMBER ,
         SC.SC_ASSIGNMENT_MODE_CODE , 
   SC.LAST_UPDATE_DATE AS SC_LAST_UPD_DATE ,
         COALESCE( SC.SC_REASON_CODE , 'UNKNOWN' ) , 
   SC.SC_SPLIT_PERCENT ,
         SC.SC_TYPE_CODE , 
   SC.SC_UNALLOCATED , 
   SC.SC_USAGE_CODE , 
   SC.SHR_NODE_ID ,
         SC.TERRITORY_TYPE_CODE , 
   MNL.TRX_ORIG_CODE , 
   CASE WHEN TRX_SPLITS_SC.TRX_SPLIT_SC_ID  > 2147483647 THEN -2147483647+ (TRX_SPLITS_SC.TRX_SPLIT_SC_ID - 2147483647) 
         ELSE TRX_SPLITS_SC.TRX_SPLIT_SC_ID END TRX_SPLIT_SC_ID,/* BIGINT Project by ugandhav*/ /* DBOMMISE: CHANGED TRX_SC_ID TO TRX_SPLIT_SC_ID AS PART OF SALES COMP CHANGES Q3FY19 */
         MNL.TRX_SOURCE_TYPE , 
   USR.USER_NAME , 
   SC.ROLLUP_FLAG , 
   TRX_SPLITS_SC.SC_ID ,
         TRX_SPLITS_SC.SC_DUPLICATE_FLAG , 
         CASE WHEN TRX_HIST.CHANGE_TYPE_CODE = 'DL' THEN 'Y' ELSE  'N' END    AS CHANGE_TYPE_CODE , 
         CASE WHEN TRX_SPLITS_SC.SC_DUPLICATE_FLAG = 'Y' THEN 'Y' ELSE  'N' END    AS TRX_VERSION_CHANGE_FLG , 
   COALESCE( EXT.DIST_OFFSET_FLAG ,'=' ) AS DISTRIBUTOR_BUCKET_FLG , 
   MNL.TRX_ID , 
   TRX_SPLITS_SC.START_DATE ,
         TRX_SPLITS_SC.EXPIRATION_DATE , 
   TRX_HIST.SOURCE_TRX_ID , 
   TRX_SPLITS_SC.SOURCE_COMMIT_TIME ,
   CAST( TRX_SPLITS_SC.SOURCE_COMMIT_TIME AS DATE )  DV_SOURCE_COMMIT_DT  ,
   EXT.UCRM_CASE_NUM AS UCRM_CASE_NUM ,
   /* DBOMMISE: ADDED BELOW COLUMNS AS PART OF PARALLEL SC FOR SALES COMP Q3FY19 */
   TRX_SPLITS.TRX_SPLIT_BU_KEY,
   TRX_SPLITS.TRX_SPLIT_ID,
   TRX_SPLITS.SPLIT_1_BU_KEY,
   TRX_SPLITS.SPLIT_1_PERCENTAGE,
   TRX_SPLITS.SPLIT_2_BU_KEY,
   TRX_SPLITS.SPLIT_2_PERCENTAGE,
   TRX_SPLITS.TOTAL_SPLIT
 FROM XAAS AS TRX_SPLITS_SC 
 INNER JOIN ( SELECT TRX_SPLITS.* FROM $$NRTACCUMVWDB.XXOTM_PHX_TRX_SPLITS TRX_SPLITS, XAAS TRX_SPLITS_SC
				  WHERE TRX_SPLITS_SC.TRX_SPLIT_ID = TRX_SPLITS.TRX_SPLIT_ID
		      QUALIFY ROW_NUMBER() OVER(PARTITION BY TRX_SPLITS.TRX_SPLIT_ID ORDER BY TRX_SPLITS.REFRESH_DATETIME DESC) = 1 ) TRX_SPLITS
  ON TRX_SPLITS_SC.TRX_SPLIT_ID = TRX_SPLITS.TRX_SPLIT_ID
 INNER JOIN ( 
 SELECT SC.* 
 FROM $$GGSRCVWDB.XXOTM_PHX_SALES_CREDITS SC , XAAS TRX_SPLITS_SC
 WHERE TRX_SPLITS_SC.SC_ID =SC.SC_ID
 QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY SC.SC_ID 
 ORDER  BY SC.REFRESH_DATETIME DESC ) = 1 ) SC 
     ON  TRX_SPLITS_SC.SC_ID = SC.SC_ID 
 INNER JOIN ( 			
      SELECT MNL_INNER.* 
      FROM ( 
      SELECT TRX.* 
      FROM $$GGSRCVWDB.XXOTM_PHX_MANUAL_TRX TRX , XAAS TRX_SPLITS_SC
      WHERE TRX_SPLITS_SC.TRX_ID =TRX.TRX_ID
      QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY TRX.TRX_ID 
      ORDER  BY TRX.REFRESH_DATETIME DESC ) = 1 ) MNL_INNER 
      
      INNER JOIN ( 
      SELECT * 
      FROM $$GGSRCVWDB.FND_LOOKUP_VALUES 
      QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY LOOKUP_CODE , LOOKUP_TYPE ,
              LANG , SECURITY_GROUP_ID , VIEW_APPLICATION_ID 
      ORDER  BY REFRESH_DATETIME DESC ) = 1 ) FND_LKP 
          ON  MNL_INNER.ADJ_CODE = FND_LKP.LOOKUP_CODE 
          AND    FND_LKP.LOOKUP_TYPE = 'XXOTM_PHX_MANUAL_TRANS_TYPE' 
          AND    FND_LKP.ATTRIBUTE15 = 'BACKEND' 
          AND    FND_LKP.ATTRIBUTE1 = 'XAAS Transaction' ) MNL 
  ON  TRX_SPLITS_SC.TRX_ID = MNL.TRX_ID 
  INNER JOIN ( 
		SELECT * 
		FROM $$GGSRCVWDB.FND_USER 
		QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY USER_NAME , USER_ID 
		ORDER  BY REFRESH_DATETIME DESC ) = 1 ) USR 
			ON  SC.CREATED_BY = USR.USER_ID INNER JOIN ( 
		SELECT EXT.* 
		FROM $$GGSRCVWDB.XXOTM_PHX_SALES_CREDITS_EXT EXT , XAAS TRX_SPLITS_SC 
		WHERE TRX_SPLITS_SC.SC_ID=EXT.SC_ID
		QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY EXT.SC_EXT_ID 
		ORDER  BY EXT.REFRESH_DATETIME DESC ) = 1 ) EXT 
   ON  SC.SC_ID = EXT.SC_ID 
   LEFT JOIN ( 
	SELECT * 
	FROM $$GGSRCVWDB.JTF_TERR_ALL 
	QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY TERR_ID , ORG_ID 
	ORDER  BY REFRESH_DATETIME DESC ) = 1 ) TERR 
 ON  EXT.JTF_TERRITORIES_ID = TERR.TERR_ID 
 LEFT JOIN ( 
	SELECT * 
	FROM $$GGSRCVWDB.JTF_TERR_TYPES_ALL 
	QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY TERR_TYPE_ID , ORG_ID 
	ORDER  BY REFRESH_DATETIME DESC ) = 1 ) TYP 
		ON  EXT.JTF_TERR_TYPE_ID = TYP.TERR_TYPE_ID LEFT JOIN ( 
	SELECT * 
	FROM $$GGSRCVWDB.XXOTM_PHX_CODE_ASSIGNMENTS ASSGN 
	QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY CODE_ASSIGNMENT_ID 
	ORDER  BY REFRESH_DATETIME DESC ) = 1 ) ASGN 
		ON  TRX_SPLITS_SC.TRX_SPLIT_SC_ID = ASGN.OWNER_TABLE_ID 
		AND    ASGN.OWNER_TABLE_NAME = 'XXOTM_PHX_TRX_SPLITS_SC' 
		AND    ASGN.CLASS_CATEGORY = 'XXOTM_PHX_CB_FLAG' 
 INNER JOIN ( 
      SELECT HST.* 
      FROM $$GGSRCVWDB.XXOTM_PHX_TRX_HISTORY HST , XAAS TRX_SPLITS_SC
      WHERE TRX_SPLITS_SC.TRX_ID =HST.TRX_ID
      AND HST.TRX_SOURCE_TYPE ='MANUAL'
      QUALIFY   ROW_NUMBER ( ) OVER ( PARTITION BY HST.TRX_ID 
      ORDER  BY HST.REFRESH_DATETIME DESC ) = 1 ) TRX_HIST 
 ON  TRX_SPLITS_SC.TRX_ID = TRX_HIST.TRX_ID


SQL Query : 
SELECT
   CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))  CDB_DEQUEUE_TIME,
   TRX_SPLITS_SC.CREATION_DATE,
   SC.DEBIT_CREDIT_CODE,
   CURRENT_TIMESTAMP(0) AS ETL_PROCESS_DTM,
   TRX_SPLITS_SC.LAST_UPDATE_DATE,
   TRX_SPLITS_SC.LATEST_SC_FLAG,
   MNL.ORDER_LINE_ID,
   EXT.JTF_TERRITORIES_ID AS OTM_TERR_ID,   
   TERR.NAME AS OTM_TERR_NAME,         
   TYP.NAME AS OTM_TERR_TYPE_CODE,     
   COALESCE(ASGN.CLASS_CODE,'Y','N') REBOK_CHANNEL_FLAG,    
   SC.SALESREP_NUMBER,
   SC.SC_ASSIGNMENT_MODE_CODE,
   SC.LAST_UPDATE_DATE  AS SC_LAST_UPD_DATE,    
   COALESCE(SC.SC_REASON_CODE, 'UNKNOWN' ),    
   SC.SC_SPLIT_PERCENT,
   SC.SC_TYPE_CODE,
   SC.SC_UNALLOCATED,     
   SC.SC_USAGE_CODE,      
   SC.SHR_NODE_ID,
   SC.TERRITORY_TYPE_CODE,
   MNL.TRX_ORIG_CODE,  
   TRX_SPLITS_SC.TRX_SPLIT_SC_ID, 
   MNL.TRX_SOURCE_TYPE,
   USR.USER_NAME,
   SC.ROLLUP_FLAG,
   TRX_SPLITS_SC.SC_ID,
   TRX_SPLITS_SC.SC_DUPLICATE_FLAG,
   CASE  WHEN  TRX_HIST.CHANGE_TYPE_CODE='DL'  THEN 'Y' ELSE 'N'  END AS CHANGE_TYPE_CODE,
   CASE WHEN TRX_SPLITS_SC.SC_DUPLICATE_FLAG='Y' THEN  'Y' ELSE 'N' END AS TRX_VERSION_CHANGE_FLG ,
   COALESCE(EXT.DIST_OFFSET_FLAG,'=')   AS DISTRIBUTOR_BUCKET_FLG,
   MNL.TRX_ID,
   TRX_SPLITS_SC.START_DATE,
   TRX_SPLITS_SC.EXPIRATION_DATE,
   TRX_HIST.SOURCE_TRX_ID,
   TRX_SPLITS_SC.SOURCE_COMMIT_TIME,
   CAST(TRX_SPLITS_SC.SOURCE_COMMIT_TIME AS DATE) DV_SOURCE_COMMIT_DT,
   EXT.UCRM_CASE_NUM AS UCRM_CASE_NUM,
   /* DBOMMISE: ADDED BELOW COLUMNS AS PART OF PARALLEL SC FOR SALES COMP Q3FY19 */
   TRX_SPLITS.TRX_SPLIT_BU_KEY,
   TRX_SPLITS.TRX_SPLIT_ID,
   TRX_SPLITS.SPLIT_1_BU_KEY,
   TRX_SPLITS.SPLIT_1_PERCENTAGE,
   TRX_SPLITS.SPLIT_2_BU_KEY,
   TRX_SPLITS.SPLIT_2_PERCENTAGE,
   TRX_SPLITS.TOTAL_SPLIT
   FROM
   (
   SELECT * FROM 
   $$NRTACCUMVWDB.XXOTM_PHX_TRX_SPLITS_SC TRX_SPLITS_SC_INNER
   WHERE
   TRX_SPLITS_SC_INNER.SOURCE_COMMIT_TIME>(SELECT LAST_EXTRACT_DATE
           FROM $$ETLVWDB.DW_JOB_STREAMS_NRT
           WHERE JOB_STREAM_ID='wf_ST_OTM_SLS_CRDT_TSL_XAAS_NRT')
   QUALIFY ROW_NUMBER() OVER (PARTITION BY TRX_SPLIT_SC_ID ORDER BY REFRESH_DATETIME DESC)=1
   ) TRX_SPLITS_SC
   INNER JOIN ( SELECT TRX_SPLITS.* FROM $$NRTACCUMVWDB.XXOTM_PHX_TRX_SPLITS TRX_SPLITS, $$NRTACCUMVWDB.XXOTM_PHX_TRX_SPLITS_SC TRX_SPLITS_SC
				  WHERE TRX_SPLITS_SC.TRX_SPLIT_ID = TRX_SPLITS.TRX_SPLIT_ID
		      QUALIFY ROW_NUMBER() OVER(PARTITION BY TRX_SPLITS.TRX_SPLIT_ID ORDER BY TRX_SPLITS.REFRESH_DATETIME DESC) = 1 ) TRX_SPLITS
  ON TRX_SPLITS_SC.TRX_SPLIT_ID = TRX_SPLITS.TRX_SPLIT_ID
   INNER JOIN
   (SELECT * FROM $$GGSRCVWDB.XXOTM_PHX_SALES_CREDITS
   QUALIFY ROW_NUMBER() OVER (PARTITION BY  SC_ID ORDER BY REFRESH_DATETIME DESC)=1) SC
   ON TRX_SPLITS_SC.SC_ID=SC.SC_ID
   INNER JOIN 
   (SELECT MNL_INNER.* FROM
    (SELECT * FROM $$GGSRCVWDB.XXOTM_PHX_MANUAL_TRX 
     QUALIFY ROW_NUMBER() OVER (PARTITION BY  TRX_ID ORDER BY REFRESH_DATETIME DESC)=1) MNL_INNER
    INNER JOIN 
     (SELECT * FROM  $$GGSRCVWDB.FND_LOOKUP_VALUES
    QUALIFY ROW_NUMBER() OVER (PARTITION BY  LOOKUP_CODE ,LOOKUP_TYPE ,LANG ,
    SECURITY_GROUP_ID ,VIEW_APPLICATION_ID ORDER BY  REFRESH_DATETIME DESC)=1) FND_LKP
    ON MNL_INNER.ADJ_CODE=FND_LKP.LOOKUP_CODE
     AND FND_LKP.LOOKUP_TYPE='XXOTM_PHX_MANUAL_TRANS_TYPE'
     AND FND_LKP.ATTRIBUTE15 ='BACKEND' 
     AND FND_LKP.ATTRIBUTE1='XAAS Transaction'
     ) MNL
   ON TRX_SPLITS_SC.TRX_ID=MNL.TRX_ID
   INNER JOIN 
   (SELECT * FROM $$GGSRCVWDB.FND_USER
   QUALIFY ROW_NUMBER() OVER (PARTITION BY  USER_NAME ,USER_ID ORDER BY REFRESH_DATETIME DESC)=1) USR
   ON SC.CREATED_BY=USR.USER_ID
   INNER JOIN
   (SELECT * FROM $$GGSRCVWDB.XXOTM_PHX_SALES_CREDITS_EXT
   QUALIFY ROW_NUMBER() OVER (PARTITION BY  SC_EXT_ID ORDER BY REFRESH_DATETIME DESC)=1) EXT
   ON SC.SC_ID=EXT.SC_ID
   LEFT JOIN
   (SELECT * FROM $$GGSRCVWDB.JTF_TERR_ALL
   QUALIFY ROW_NUMBER() OVER (PARTITION BY  TERR_ID,ORG_ID ORDER BY REFRESH_DATETIME DESC)=1) TERR
   ON EXT.JTF_TERRITORIES_ID=TERR.TERR_ID
   LEFT JOIN
   (SELECT * FROM $$GGSRCVWDB.JTF_TERR_TYPES_ALL
   QUALIFY ROW_NUMBER() OVER (PARTITION BY  TERR_TYPE_ID,ORG_ID ORDER BY REFRESH_DATETIME DESC)=1) TYP
   ON EXT.JTF_TERR_TYPE_ID=TYP.TERR_TYPE_ID
   LEFT JOIN
   (SELECT * FROM $$GGSRCVWDB.XXOTM_PHX_CODE_ASSIGNMENTS
   QUALIFY ROW_NUMBER() OVER (PARTITION BY  CODE_ASSIGNMENT_ID ORDER BY REFRESH_DATETIME DESC)=1) ASGN
   ON TRX_SPLITS_SC.TRX_SPLIT_SC_ID =ASGN.OWNER_TABLE_ID
   AND ASGN.OWNER_TABLE_NAME ='XXOTM_PHX_TRX_SPLITS_SC'
   AND ASGN.CLASS_CATEGORY= 'XXOTM_PHX_CB_FLAG'
   INNER JOIN
   (SELECT * FROM $$GGSRCVWDB.XXOTM_PHX_TRX_HISTORY
   QUALIFY ROW_NUMBER() OVER (PARTITION BY  TRX_ID ORDER BY REFRESH_DATETIME DESC)=1) TRX_HIST
   ON TRX_SPLITS_SC.TRX_ID = TRX_HIST.TRX_ID
 WHERE 1=2


Post SQL : 



Target1 Name : WI_SC_FOR_PRCS_DT_XAAS_NRT_NG1


Pre SQL : 



Post SQL : 
COLLECT STATS ON $$NRTSTGDB.WI_SC_FOR_PRCS_DT_XAAS_NRT_NG;