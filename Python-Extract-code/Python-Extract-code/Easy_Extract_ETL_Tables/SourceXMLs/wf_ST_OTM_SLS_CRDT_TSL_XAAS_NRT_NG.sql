ETL Name:	wf_ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG.xml


Session 1: 	s_m_ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG
Mapping 1: 	m_ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG


Source1 Name : SQ_ST_OTM_SLS_CRDT_TSL_XAAS_NRT


Pre SQL : 
DELETE FROM $$NRTSTGDB.ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG ALL;


SQL Query : 
SELECT
   CDB_DEQUEUE_TIME
  ,CREATION_DATE
  ,DEBIT_CREDIT_CODE
  ,ETL_PROCESS_DTM
  ,LAST_UPDATE_DATE
  ,LATEST_SC_FLAG
  ,ORDER_LINE_ID
  ,OTM_TERR_ID
  ,OTM_TERR_NAME
  ,OTM_TERR_TYPE_CODE
  ,REBOK_CHANNEL_FLAG
  ,SALESREP_NUMBER
  ,SC_ASSIGNMENT_MODE_CODE
  ,SC_LAST_UPD_DATE
  ,SC_REASON_CODE
  ,SC_SPLIT_PERCENT
  ,SC_TYPE_CODE
  ,SC_UNALLOCATED
  ,SC_USAGE_CODE
  ,SHR_NODE_ID
  ,TERRITORY_TYPE_CODE
  ,TRX_ORIG_CODE
  ,TRX_SPLIT_SC_ID
  ,TRX_SOURCE_TYPE
  ,USER_NAME
  ,ROLLUP_FLAG
  ,SC_ID
  ,SC_DUPLICATE_FLAG
  ,CHANGE_TYPE_CODE
  ,TRX_VERSION_CHANGE_FLG
  ,DISTRIBUTOR_BUCKET_FLG
  ,TRX_ID
  ,START_DTM
  ,EXPIRATION_DTM
  ,SOURCE_TRX_ID
  ,SOURCE_COMMIT_DTM
  ,DV_SOURCE_COMMIT_DT
  ,UCRM_CASE_NUM
  ,TRX_SPLIT_BU_KEY
  ,TRX_SPLIT_ID
  ,SPLIT_1_BU_KEY
  ,SPLIT_1_PERCENTAGE
  ,SPLIT_2_BU_KEY
  ,SPLIT_2_PERCENTAGE
  ,TOTAL_SPLIT
   FROM
   $$NRTSTGDB.WI_SC_FOR_PRCS_DT_XAAS_NRT_NG
   WHERE 
   SOURCE_COMMIT_DTM > '$$LastExtractDate' AND
   SOURCE_COMMIT_DTM <=( 
        SELECT 
          CASE 
           WHEN DAY_MAX_SOURCE_COMMIT_TIME IS NULL THEN NULL
           WHEN NEXT_DAY_SRC_COMMIT_TIME   IS NOT NULL AND CNT <> 0 THEN PROCESS_END_DTM
           WHEN  DAY_MAX_SOURCE_COMMIT_TIME <PROCESS_END_DTM  THEN DAY_MAX_SOURCE_COMMIT_TIME 
           ELSE PROCESS_END_DTM  
          END  END_LAST_EXTRACT_DATE
          FROM $$NRTSTGDB.ST_XAAS_BKG_INCR_DT_CTRL_NRT_NG A,
            $$ETLVWDB.EL_XAAS_BKG_PRCS_DT_CTRL_NRT_NG  B
          WHERE JOB_STREAM_ID = 'wf_ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG'
          AND SS_CD='XAAS')


Post SQL : 



Target1 Name : ST_OTM_SLS_CRDT_TSL_XAAS_NRT2


Pre SQL : 



Post SQL : 
COLLECT STATS ON $$NRTSTGDB.ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG;

/* The below update as a part of FEB2019 release to find out the max_date to pull incr data from XXOTM_PHX_MANUAL_TRX Table*/ 
UPDATE WI
FROM  $$NRTSTGDB.WI_MANUL_TRX_MAX_TIME_NG  WI,
(select max(GG.source_commit_time) max_time_NEW from 
 $$NRTACCUMVWDB.XXOTM_PHX_MANUAL_TRX  GG, 
$$NRTSTGDB.ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG ST 
where GG.trx_id=ST.trx_id 
)b 
SET max_time=COALESCE(max_time_NEW,wi.max_time);
 
 
/*the below insert added as a part of FEB2019 to process the records that are in WI_SC_FOR_PRCS_DT_XAAS_NRT but not pulled into   
 
 
ST_OTM_SLS_CRDT_TSL_XAAS_NRT because of some process date logic */
INSERT INTO $$EXCEPdb.EX_SC_FOR_PRCS_DT_XAAS_NRT_NG 
 SELECT TRX_SC.*FROM
 $$NRTSTGdb.WI_XAAS_NG TRX_SC
INNER JOIN
$$NRTSTGdb.WI_SC_FOR_PRCS_DT_XAAS_NRT_NG  WI_SC
ON (CASE WHEN TRX_SC.TRX_SC_ID  > 2147483647 THEN -2147483647+ (TRX_SC.TRX_SC_ID - 2147483647) ELSE TRX_SC.TRX_SC_ID END )=WI_SC.TRX_SPLIT_SC_ID
AND WI_SC.TRX_SPLIT_SC_ID NOT IN (SELECT TRX_SPLIT_SC_ID FROM $$NRTSTGDB.ST_OTM_SLS_CRDT_TSL_XAAS_NRT_NG);