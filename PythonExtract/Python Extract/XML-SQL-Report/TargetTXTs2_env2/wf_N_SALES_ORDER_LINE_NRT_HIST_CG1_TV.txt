ETL Name:	wf_N_SALES_ORDER_LINE_NRT_HIST_CG1_TV.XML


Session 1: 	s_m_N_SALES_ORDER_LINE_NRT_HIST_CG1_TV
Mapping 1: 	m_N_SALES_ORDER_LINE_NRT_HIST_CG1_TVm_N_SALES_ORDER_LINE_NRT_HIST_CG1_TV


Source1 Name : SQ_W_SALES_ORDER_LINE_NRT_HIST


Pre SQL : 
UPDATE NSOLNHT FROM
$$NRTSTGDB.W_SALES_ORDER_LINE_NRT_HIST WSOLNH,
$$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NSOLNHT
SET
END_TV_DTM=WSOLNH.END_TV_DTM,
EDW_UPDATE_USER=WSOLNH.EDW_UPDATE_USER,
EDW_UPDATE_DTM=WSOLNH.EDW_UPDATE_DTM
WHERE 
WSOLNH.SALES_ORDER_LINE_KEY=NSOLNHT.SALES_ORDER_LINE_KEY
AND
WSOLNH.START_TV_DTM=NSOLNHT.START_TV_DTM
AND
WSOLNH.DML_TYPE='U'
AND
NSOLNHT.END_TV_DTM=CAST('3500-01-01 00:00:00' AS TIMESTAMP(0));


SQL Query : 
SELECT 
WSOLNH.SALES_ORDER_LINE_KEY,
WSOLNH.EP_HEADER_ID_INT,
WSOLNH.SALES_ORDER_KEY ,
WSOLNH.ORDER_QTY       ,
WSOLNH.UNIT_NET_PRICE_LOCAL_AMT,
WSOLNH.BOOKINGS_PCT,
WSOLNH.SK_SALES_ORDER_LINE_ID_INT,
WSOLNH.SS_CD,
WSOLNH.PRODUCT_KEY,
WSOLNH.EP_PRODUCT_INV_ITEM_ID_INT,
WSOLNH.SHIP_TO_CUSTOMER_KEY,
WSOLNH.EP_STC_SHIP_TO_ORG_ID_INT,
WSOLNH.SO_LINE_SOURCE_UPDATE_DTM,
WSOLNH.DV_SO_LINE_SOURCE_UPDATE_DT,
WSOLNH.SOURCE_COMMIT_DTM,
WSOLNH.EP_CHANGED_QUANTITY,
BO.PROCESS_DT AS EP_PROCESS_DT,
WSOLNH.EDW_CREATE_DTM,
WSOLNH.EDW_CREATE_USER,
WSOLNH.EDW_UPDATE_DTM ,
WSOLNH.EDW_UPDATE_USER,
WSOLNH.START_TV_DTM,
WSOLNH.END_TV_DTM ,
WSOLNH.SALES_ORDER_LINE_CTGRY_TYPE_CD,
WSOLNH.SALES_MOTION_CD,
WSOLNH.SK_OPL_LINE_ID_INT,
WSOLNH.TRX_BOOKING_SRC_CD,
WSOLNH.SK_SBP_ORDER_LINE_ID_INT,
/* Added as part of June 2018 release AMY-NRT Scope*/
WSOLNH.RU_SERVICE_CONTRACT_START_DTM,
WSOLNH.RU_SERVICE_CONTRACT_END_DTM,
WSOLNH.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT,
WSOLNH.ORIG_UNIT_LST_PRC_TRXL_AMT,
WSOLNH.ORIG_EXTD_LST_PRC_TRXL_AMT
FROM
$$NRTSTGDB.W_SALES_ORDER_LINE_NRT_HIST WSOLNH   
,(SELECT PROCESS_DT FROM $$NRTNCRVWDB.N_NRT_BKG_PROCESS_DT_CTRL WHERE SS_CD='CG') BO 
WHERE 
WSOLNH.DML_TYPE='I'
AND
NOT EXISTS
(SELECT 1 FROM $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NSOLNHT WHERE WSOLNH.SALES_ORDER_LINE_KEY=NSOLNHT.SALES_ORDER_LINE_KEY AND NSOLNHT.START_TV_DTM=WSOLNH.START_TV_DTM )


Post SQL : 



Target1 Name : N_SALES_ORDER_LINE_NRT_HIST_TV


Pre SQL : 



Post SQL : 
UPDATE NSOLNT
FROM $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NSOLNT, 
(SELECT SALES_ORDER_LINE_KEY,BOOKING_PERCENT, SOURCE_COMMIT_DTM
FROM $$NRTSTGDB.WI_ORDER_LINES_EXT_NRT_CG1_BP  WHERE SALES_ORDER_LINE_KEY<> -7777
QUALIFY ROW_NUMBER() OVER( PARTITION BY LINE_ID ORDER BY SOURCE_COMMIT_DTM DESC) = 1) WI
SET  BOOKINGS_PCT = COALESCE(WI.BOOKING_PERCENT,100),
  SOURCE_COMMIT_DTM = WI.SOURCE_COMMIT_DTM,  
  EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0),
  EDW_UPDATE_USER = USER               
WHERE NSOLNT.SALES_ORDER_LINE_KEY = WI.SALES_ORDER_LINE_KEY 
AND NSOLNT.END_TV_DTM='3500-01-01 00:00:00';

UPDATE NSOLNT
FROM $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NSOLNT, 
(SELECT SALES_ORDER_LINE_KEY,ORIG_UNIT_LST_PRC_TRXL_AMT,ORIG_EXTD_LST_PRC_TRXL_AMT,SOURCE_COMMIT_DTM
FROM $$NRTSTGDB.WI_ORDER_LINES_EXT_NRT_CG1_OLP  WHERE SALES_ORDER_LINE_KEY<> -7777
QUALIFY ROW_NUMBER() OVER( PARTITION BY LINE_ID ORDER BY SOURCE_COMMIT_DTM DESC) = 1) WI
SET  ORIG_UNIT_LST_PRC_TRXL_AMT = COALESCE(WI.ORIG_UNIT_LST_PRC_TRXL_AMT,0),	
     ORIG_EXTD_LST_PRC_TRXL_AMT = COALESCE(WI.ORIG_EXTD_LST_PRC_TRXL_AMT,0),
  SOURCE_COMMIT_DTM = WI.SOURCE_COMMIT_DTM,  
  EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0),
  EDW_UPDATE_USER = USER               
WHERE NSOLNT.SALES_ORDER_LINE_KEY = WI.SALES_ORDER_LINE_KEY 
AND NSOLNT.END_TV_DTM='3500-01-01 00:00:00';


/* Added as part of December RTNR release */
DELETE FROM $$NRTSTGDB.WI_SUMMARY_QUOTE_SMC ALL;

INSERT INTO $$NRTSTGDB.WI_SUMMARY_QUOTE_SMC
SELECT  
     NRT.SALES_ORDER_LINE_KEY, 
     WI.DV_EFFECTIVE_DTM, 
     CASE WHEN WI.SO_CNT > 1 THEN 'MIX' 
	      ELSE WI.SALES_MOTION_CD 
	  END SALES_MOTION_CD, 
     USER EDW_CREATE_USER, 
     WI.EDW_UPDATE_DTM AS EDW_CREATE_DTM 
FROM ( SELECT SALES_ORDER_LINE_KEY, 
	  SALES_MOTION_CD,
	  MAX(DV_EFFECTIVE_DTM) OVER(PARTITION BY SALES_ORDER_LINE_KEY) AS DV_EFFECTIVE_DTM, 
	  MAX(EDW_UPDATE_DTM) OVER(PARTITION BY SALES_ORDER_LINE_KEY) AS EDW_UPDATE_DTM, 
	  COUNT(*) OVER(PARTITION BY SALES_ORDER_LINE_KEY) SO_CNT,
	  SUM(DV_ALLOCATION_PCT) OVER(PARTITION BY SALES_ORDER_LINE_KEY) DV_ALLOCATION_PCT
         FROM ( 
			SELECT
			SALES_ORDER_LINE_KEY,
			SALES_MOTION_CD,
			DV_EFFECTIVE_DTM,
			EDW_UPDATE_DTM,
			SUM(DV_ALLOCATION_PCT) OVER(PARTITION BY SALES_ORDER_LINE_KEY ) SUM_ALLOCATION_PCT,
			CAST(DV_ALLOCATION_PCT/SUM_ALLOCATION_PCT AS DECIMAL(18,6) ) AS DV_ALLOCATION_PCT  /* Included inner query part to handle CS SQ scenario Sep 26 Q2FY20 Release */
		    FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC 
			WHERE DV_EXPIRATION_DTM = '3500-01-01 00:00:00'  
            AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES WHERE JOB_STREAM_ID = 'wf_N_SALES_ORDER_LINE_NRT_HIST_CG1_TV' AND TABLE_NAME = 'WI_SUMMARY_QUOTE_SMC' ) /* For identifying all open records for a particular allocation change*/ 
		  ) WI
) WI
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL  /* Added to get line id  for making sure prod2 also is updating basing on same line id*/
ON NSOL.SALES_ORDER_LINE_KEY = WI.SALES_ORDER_LINE_KEY
INNER JOIN $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NRT
ON NRT.SK_SALES_ORDER_LINE_ID_INT = NSOL.SK_SO_LINE_ID_INT
AND NRT.SS_CD = NSOL.SS_CODE
AND NRT.END_TV_DTM = '3500-01-01 00:00:00'
INNER JOIN ( SELECT PROCESS_DT FROM $$NRTNCRVWDB.N_NRT_BKG_PROCESS_DT_CTRL WHERE SS_CD = 'CG' ) CTRL 
	      ON 1=1 
AND ( CASE WHEN ( CURRENT_TIMESTAMP(0) < ( CAST( CURRENT_DATE AS TIMESTAMP(0)) + INTERVAL '21:00:00' HOUR TO SECOND )) AND (CURRENT_DATE = CTRL.PROCESS_DT) THEN 'TRUE' 
		      WHEN ( CURRENT_TIMESTAMP(0) >= ( CAST( CURRENT_DATE AS TIMESTAMP(0)) + INTERVAL '21:00:00' HOUR TO SECOND )) AND (CURRENT_DATE +1 = CTRL.PROCESS_DT) THEN 'TRUE'
		      ELSE 'FALSE'
		  END ) = 'TRUE'    
WHERE ROUND(DV_ALLOCATION_PCT) = 1.00
GROUP BY 1,2,3,4,5 ;

CALL COLLECT_STATS_WRAP('$$NRTSTGDB', 'WI_SUMMARY_QUOTE_SMC', 'D') ;

UPDATE NSOLNT
FROM $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NSOLNT, 
    ( SELECT SALES_ORDER_LINE_KEY, 
          SALES_MOTION_CD , 
          DV_EFFECTIVE_DTM 
    FROM $$NRTSTGDB.WI_SUMMARY_QUOTE_SMC ) WI
SET SALES_MOTION_CD = WI.SALES_MOTION_CD , 
    SOURCE_COMMIT_DTM = CURRENT_TIMESTAMP(0),
    EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0),
    EDW_UPDATE_USER = USER               
 WHERE NSOLNT.SALES_ORDER_LINE_KEY = WI.SALES_ORDER_LINE_KEY 
 AND NSOLNT.END_TV_DTM = '3500-01-01 00:00:00' 
AND NSOLNT.SS_CD <> 'OPL';

UPDATE EL 
FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES EL, 
	 ( SELECT MAX(EDW_CREATE_DTM) MAX_UPD_DATE FROM $$NRTSTGDB.WI_SUMMARY_QUOTE_SMC ) WI_SMC 
 SET LAST_EXTRACT_DATE = COALESCE(WI_SMC.MAX_UPD_DATE , EL.LAST_EXTRACT_DATE ) 
WHERE JOB_STREAM_ID = 'wf_N_SALES_ORDER_LINE_NRT_HIST_CG1_TV'  
AND TABLE_NAME = 'WI_SUMMARY_QUOTE_SMC';
/* Added as part of December RTNR release */

/* START Added as part of Oct-2017 rel Modified for December release - modified for Dec 14 rel*/
UPDATE NSOLNT
FROM $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NSOLNT, 
 ( SELECT SALES_ORDER_LINE_KEY, 
          SALES_MOTION_CD , 
          SOURCE_COMMIT_DTM 
    FROM $$NRTSTGDB.WI_ORDER_LINES_EXT_NRT_CG1_SMC 
    WHERE SALES_ORDER_LINE_KEY <> -7777
	AND SALES_ORDER_LINE_KEY NOT IN ( SELECT SALES_ORDER_LINE_KEY 
										FROM ( SELECT
											  SALES_ORDER_LINE_KEY,
											  SALES_MOTION_CD,
											  DV_EFFECTIVE_DTM,
											  EDW_UPDATE_DTM,
											  SUM(DV_ALLOCATION_PCT) OVER(PARTITION BY SALES_ORDER_LINE_KEY ) SUM_ALLOCATION_PCT,
											  CAST( DV_ALLOCATION_PCT/SUM_ALLOCATION_PCT AS DECIMAL(18,6) ) AS DV_ALLOCATION_PCT  /* Included inner query part to handle CS SQ scenario Sep 26 Q2FY20 Release */
											  FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC 
											  WHERE DV_EXPIRATION_DTM = '3500-01-01 00:00:00' 
											  ) WI
									GROUP BY 1 HAVING ROUND(SUM(DV_ALLOCATION_PCT)) = 1.00)
	QUALIFY ROW_NUMBER() OVER( PARTITION BY LINE_ID ORDER BY SOURCE_COMMIT_DTM DESC) = 1 
	) WI
SET SALES_MOTION_CD = WI.SALES_MOTION_CD , 
    SOURCE_COMMIT_DTM = WI.SOURCE_COMMIT_DTM,
    EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0),
    EDW_UPDATE_USER = USER               
 WHERE NSOLNT.SALES_ORDER_LINE_KEY = WI.SALES_ORDER_LINE_KEY 
 AND NSOLNT.END_TV_DTM = '3500-01-01 00:00:00' 
 AND NSOLNT.SALES_MOTION_CD <> WI.SALES_MOTION_CD 
AND NSOLNT.SS_CD <> 'OPL';

 
 /* END Added as part of Oct-2017 rel Modified for December release - modified for Dec 14 rel */

 
UPDATE A 
FROM   
$$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV  A, 
$$NRTNCRVWDB.N_SALES_ORDER_NRT_HIST_TV B
SET 
SALES_ORDER_KEY =B.SALES_ORDER_KEY,
EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0),
EDW_UPDATE_USER = USER                
WHERE A.EP_HEADER_ID_INT= B.SK_SALES_ORDER_HEADER_ID_INT
AND B.SS_CD = A.SS_CD                   
AND B.END_TV_DTM ='3500-01-01 00:00:00'      
AND A.SALES_ORDER_KEY=-7777
AND A.SS_CD<>'OPL';



UPDATE NSOLNT
FROM $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NSOLNT, 
  $$NRTSTGDB.WI_SOL_NRT_HIST_CG1_DELS  WSOLNH
SET  END_TV_DTM = WSOLNH.SOURCE_COMMIT_DTM,
  SO_LINE_SOURCE_UPDATE_DTM=  WSOLNH.SO_LINE_SOURCE_UPDATE_DTM,
  DV_SO_LINE_SOURCE_UPDATE_DT=WSOLNH.DV_SO_LINE_SOURCE_UPDATE_DT,
  SOURCE_COMMIT_DTM= WSOLNH.SOURCE_COMMIT_DTM,
  EDW_UPDATE_DTM=CURRENT_TIMESTAMP(0),
     EDW_UPDATE_USER = USER               
WHERE
NSOLNT.SALES_ORDER_LINE_KEY = WSOLNH.SALES_ORDER_LINE_KEY
AND NSOLNT.END_TV_DTM = CAST('3500-01-01 00:00:00' AS TIMESTAMP(0));

/* added as part of fy18 ye perf suggesrion */
/*
COLLECT STATS COLUMN(EDW_UPDATE_DTM) ON $$NRTNCRDB.N_SALES_ORDER_LINE_NRT_HIST_TV;
COLLECT STATS COLUMN(END_TV_DTM) ON $$NRTNCRDB.N_SALES_ORDER_LINE_NRT_HIST_TV; */

CALL COLLECT_STATS_WRAP('$$NRTNCRDB','N_SALES_ORDER_LINE_NRT_HIST_TV','D');