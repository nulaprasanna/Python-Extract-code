


Source1 Name : SQ_MT_RTNR_SMC_ALLOCATION


Pre SQL : 



SQL Query : 
SELECT
   MNL_TRX.MANUAL_TRX_KEY
  ,SMC_ALLOC.SALES_ORDER_LINE_KEY
  ,MNL_TRX.RU_PRODUCT_KEY AS ENTERPRISE_OR_INVOICE_SKU
  ,SMC_ALLOC.SALES_MOTION_CD 
  ,SMC_ALLOC.DV_ALLOCATION_PCT
  ,'SWSS' AS SERVICE_CATEGORY_CD
  ,'N' AS OA_FLAG
  ,SMC_ALLOC.START_TV_DT 
  ,SMC_ALLOC.END_TV_DT 
  ,'RTNR' AS SOURCE  
  ,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM
  ,USER AS EDW_CREATE_USER
  ,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM
  ,USER AS EDW_UPDATE_USER
 FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION SMC_ALLOC
 INNER JOIN $$SLSORDVWDB.N_SALES_ADJ_REBOK_MNL_TRX_TV MNL_TRX 
    ON MNL_TRX.RU_NEW_RENEW_SOL_KEY = SMC_ALLOC.SALES_ORDER_LINE_KEY
   AND MNL_TRX.END_TV_DTM = '3500-01-01 00:00:00'
   AND MNL_TRX.RU_NEW_RENEW_SOL_KEY > 0
   AND SMC_ALLOC.END_TV_DT = '3500-01-01'  
  WHERE SMC_ALLOC.EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE 
                                       FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
           WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB'
             AND TABLE_NAME = 'MT_RTNR_SMC_ALLOCATION_ERP' 
            )


Post SQL : 



Target1 Name : WI_EL_SLS_ADJ_SLS_MOTION_ATTRIB


Pre SQL : 
DELETE FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_EL_SLSADJ_SMC_ATTRIB','D');


Source2 Name : SQ_MT_RTNR_SMC_ALLOCATION1


Pre SQL : 



SQL Query : 
SELECT
   MNL_TRX.MANUAL_TRX_KEY
  ,SMC_ALLOC.SALES_ORDER_LINE_KEY
  ,MNL_TRX.RU_PRODUCT_KEY AS ENTERPRISE_OR_INVOICE_SKU
  ,SMC_ALLOC.SALES_MOTION_CD 
  ,SMC_ALLOC.DV_ALLOCATION_PCT
  ,'SWSS' AS SERVICE_CATEGORY_CD
  ,'N' AS OA_FLAG 
  ,SMC_ALLOC.START_TV_DT                  
  ,SMC_ALLOC.END_TV_DT 
  ,'RTNR' AS SOURCE  
  ,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM
  ,USER AS EDW_CREATE_USER
  ,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM
  ,USER AS EDW_UPDATE_USER
 FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION SMC_ALLOC
 INNER JOIN ( SELECT * FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL 
              QUALIFY ROW_NUMBER() OVER(PARTITION BY BK_POS_TRANSACTION_ID_INT ORDER BY SALES_ORDER_LINE_KEY ) = 1 ) POS  
     ON POS.SALES_ORDER_LINE_KEY = SMC_ALLOC.SALES_ORDER_LINE_KEY
 INNER JOIN $$SLSORDVWDB.N_SALES_ADJ_REBOK_MNL_TRX_TV MNL_TRX 
     ON MNL_TRX.RU_BK_NEW_RENEW_POS_TRX_ID_INT = POS.BK_POS_TRANSACTION_ID_INT
    AND MNL_TRX.END_TV_DTM = '3500-01-01 00:00:00'
    AND MNL_TRX.RU_BK_NEW_RENEW_POS_TRX_ID_INT > 0 
    AND SMC_ALLOC.END_TV_DT = '3500-01-01'
  WHERE SMC_ALLOC.EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE 
                                     FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
                                     WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB'
                                        AND TABLE_NAME = 'MT_RTNR_SMC_ALLOCATION_POS' )


Post SQL : 



Target2 Name : WI_EL_SLS_ADJ_SLS_MOTION_ATTRIB1


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_EL_SLSADJ_SMC_ATTRIB','D');


Source3 Name : SQ_N_POS_TRX_LN_AS_NEW_OR_RNWL_TV


Pre SQL : 



SQL Query : 
SELECT 
  NPOS.MANUAL_TRX_KEY,
  NPOS.SALES_ORDER_LINE_KEY,
  NPOS.ENTERPRISE_OR_INVOICE_SKU,
  NPOS.SALES_MOTION_CD,
  NPOS.ALLOCATION_PCT,
  NPOS.SERVICE_CATEGORY_CD,
  NPOS.OA_FLG,
  NPOS.START_DATE,
  NPOS.END_DATE,
  NPOS.SOURCE,
  CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM , 
  USER AS EDW_CREATE_USER ,
  CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM , 
  USER AS EDW_UPDATE_USER
 FROM 
 (
  SELECT
    NSLSADJ.MANUAL_TRX_KEY
   ,POS.SALES_ORDER_LINE_KEY AS SALES_ORDER_LINE_KEY
   ,NSLSADJ.RU_PRODUCT_KEY AS ENTERPRISE_OR_INVOICE_SKU         
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.SALES_MOTION_CD
      ELSE NSLSADJ.SALES_MOTION_CD
     END AS SALES_MOTION_CD 
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_ALLOCATION_PCT
      ELSE 1.00 
     END AS ALLOCATION_PCT
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN 'SWSS' 
      ELSE 'TS' 
     END AS SERVICE_CATEGORY_CD
   ,'N'  AS OA_FLG
   , POS.START_TV_DT AS START_DATE
   , POS.END_TV_DT AS END_DATE                    
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN 'RTNR' 
      ELSE 'NON-RTNR' 
     END AS SOURCE 
  FROM ( SELECT * FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
     WHERE END_TV_DT = '3500-01-01'
     QUALIFY ROW_NUMBER() OVER(PARTITION BY BK_POS_TRANSACTION_ID_INT ORDER BY SALES_ORDER_LINE_KEY DESC) = 1 ) POS  
	INNER JOIN $$SLSORDVWDB.N_SALES_ADJ_REBOK_MNL_TRX_TV NSLSADJ
	ON POS.BK_POS_TRANSACTION_ID_INT = NSLSADJ.RU_BK_NEW_RENEW_POS_TRX_ID_INT
	AND NSLSADJ.END_TV_DTM = '3500-01-01 00:00:00'
   AND NSLSADJ.RU_BK_NEW_RENEW_POS_TRX_ID_INT > 0
  LEFT JOIN $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION SMC_ALLOC
     ON POS.SALES_ORDER_LINE_KEY = SMC_ALLOC.SALES_ORDER_LINE_KEY
    AND SMC_ALLOC.END_TV_DT = '3500-01-01' 
  WHERE POS.EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE 
             FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
             WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB'  
             AND TABLE_NAME = 'N_POS_TRX_LINE_AS_NEW_OR_RNWL_POS' )   
   ) NPOS
   WHERE NOT EXISTS ( SELECT 1 FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB WI WHERE WI.MANUAL_TRX_KEY = NPOS.MANUAL_TRX_KEY )


Post SQL : 



Target3 Name : WI_EL_SLSADJ_SMC_ATTRIB


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_EL_SLSADJ_SMC_ATTRIB','D');


Source4 Name : SQ_N_SALES_ADJ_REBOK_MNL_TRX_TV1


Pre SQL : 



SQL Query : 
SELECT 
		  RBK.MANUAL_TRX_KEY,
		  RBK.SALES_ORDER_LINE_KEY,
		  RBK.ENTERPRISE_OR_INVOICE_SKU,
		  RBK.SALES_MOTION_CD,
		  RBK.ALLOCATION_PCT,
		  RBK.SERVICE_CATEGORY_CD,
		  RBK.OA_FLG,
		  RBK.START_DATE,
		  RBK.END_DATE,
		  RBK.SOURCE,
		  CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM , 
		  USER AS EDW_CREATE_USER ,
		  CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM , 
		  USER AS EDW_UPDATE_USER
 FROM 
 (
  SELECT
			    NSLSADJ.MANUAL_TRX_KEY
			   ,COALESCE(POS.SALES_ORDER_LINE_KEY, -7777) AS SALES_ORDER_LINE_KEY
			   ,NSLSADJ.RU_PRODUCT_KEY AS ENTERPRISE_OR_INVOICE_SKU         
			   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.SALES_MOTION_CD
			                ELSE NSLSADJ.SALES_MOTION_CD
			      END AS SALES_MOTION_CD 
			   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_ALLOCATION_PCT
			                ELSE 1.00 
			      END AS ALLOCATION_PCT
			   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN 'SWSS' 
			                ELSE 'TS' 
			      END AS SERVICE_CATEGORY_CD
			   ,'N'  AS OA_FLG
			   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.START_TV_DT
			                ELSE CAST(NSLSADJ.START_TV_DTM AS DATE) 
			      END AS START_DATE 
			   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.END_TV_DT
			                ELSE CAST(NSLSADJ.END_TV_DTM AS DATE) 
			     END AS END_DATE                    
			   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN 'RTNR' 
			                ELSE 'NON-RTNR' 
			     END AS SOURCE 
			   ,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM
			   ,USER AS EDW_CREATE_USER
			   ,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM 
			   ,USER AS EDW_UPDATE_USER
  FROM $$SLSORDVWDB.N_SALES_ADJ_REBOK_MNL_TRX_TV NSLSADJ 
  LEFT JOIN ( SELECT * FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL 
                          QUALIFY ROW_NUMBER() OVER(PARTITION BY BK_POS_TRANSACTION_ID_INT ORDER BY SALES_ORDER_LINE_KEY DESC) = 1 ) POS  
                               ON NSLSADJ.RU_BK_NEW_RENEW_POS_TRX_ID_INT = POS.BK_POS_TRANSACTION_ID_INT
  LEFT JOIN $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION SMC_ALLOC
           ON POS.SALES_ORDER_LINE_KEY = SMC_ALLOC.SALES_ORDER_LINE_KEY
           AND SMC_ALLOC.END_TV_DT = '3500-01-01' 
   WHERE NSLSADJ.EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE 
																				 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
																				 WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB'  
																				 AND TABLE_NAME = 'N_SALES_ADJ_REBOK_MNL_TRX_TV_POS' ) 
     AND NSLSADJ.END_TV_DTM = '3500-01-01 00:00:00'  
	 AND NSLSADJ.RU_BK_NEW_RENEW_POS_TRX_ID_INT > 0 
   ) RBK
   WHERE 
 -- NOT EXISTS ( SELECT 1 FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT WHERE MT.MANUAL_TRX_KEY = RBK.MANUAL_TRX_KEY AND MT.DV_SOURCE_TYPE = 'RTNR' )
     -- AND 
NOT EXISTS ( SELECT 1 FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB WI WHERE WI.MANUAL_TRX_KEY = RBK.MANUAL_TRX_KEY )


Post SQL : 



Target4 Name : WI_EL_SLS_ADJ_SLS_MOTION_ATTRIB3


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_EL_SLSADJ_SMC_ATTRIB','D');


Source5 Name : SQ_N_SALES_ADJ_REBOK_MNL_TRX_TV


Pre SQL : 



SQL Query : 
SELECT 
     RBK.MANUAL_TRX_KEY,
     RBK.SALES_ORDER_LINE_KEY,
     RBK.ENTERPRISE_OR_INVOICE_SKU,
     RBK.SALES_MOTION_CD,
     RBK.ALLOCATION_PCT,
     RBK.SERVICE_CATEGORY_CD,
     RBK.OA_FLG,
     RBK.START_DATE,
     RBK.END_DATE,
     RBK.SOURCE,
     CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM , 
     USER AS EDW_CREATE_USER ,
     CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM , 
     USER AS EDW_UPDATE_USER
 FROM 
    (
  SELECT
    NSLSADJ.MANUAL_TRX_KEY
   ,NSLSADJ.RU_NEW_RENEW_SOL_KEY  AS SALES_ORDER_LINE_KEY
   ,NSLSADJ.RU_PRODUCT_KEY AS ENTERPRISE_OR_INVOICE_SKU         
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.SALES_MOTION_CD
      ELSE NSLSADJ.SALES_MOTION_CD
     END AS SALES_MOTION_CD 
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_ALLOCATION_PCT
      ELSE 1.000000 
     END AS ALLOCATION_PCT
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN 'SWSS' 
         ELSE 'TS' 
     END AS SERVICE_CATEGORY_CD
   ,'N' AS OA_FLG
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.START_TV_DT
      ELSE CAST(NSLSADJ.START_TV_DTM AS DATE) 
     END AS START_DATE 
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.END_TV_DT
      ELSE CAST(NSLSADJ.END_TV_DTM AS DATE)  END AS END_DATE                    
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN 'RTNR' 
      ELSE 'NON-RTNR' 
      END AS SOURCE 
  FROM $$SLSORDVWDB.N_SALES_ADJ_REBOK_MNL_TRX_TV NSLSADJ 
  LEFT JOIN $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION SMC_ALLOC
      ON NSLSADJ.RU_NEW_RENEW_SOL_KEY = SMC_ALLOC.SALES_ORDER_LINE_KEY
     AND SMC_ALLOC.END_TV_DT = '3500-01-01'
  WHERE NSLSADJ.EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE 
                                     FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
            WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB' 
                                      AND TABLE_NAME = 'N_SALES_ADJ_REBOK_MNL_TRX_TV_ERP' )
      AND NSLSADJ.END_TV_DTM = '3500-01-01 00:00:00'  
  ) RBK
 WHERE 
-- NOT EXISTS ( SELECT 1 FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT WHERE MT.MANUAL_TRX_KEY = RBK.MANUAL_TRX_KEY AND MT.DV_SOURCE_TYPE = 'RTNR' )
 -- AND 
NOT EXISTS ( SELECT 1 FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB WI WHERE WI.MANUAL_TRX_KEY = RBK.MANUAL_TRX_KEY )


Post SQL : 



Target5 Name : WI_EL_SLS_ADJ_SLS_MOTION_ATTRIB2


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_EL_SLSADJ_SMC_ATTRIB','D');


Source6 Name : SQ_WI_EL_SLS_ADJ_SLS_MOTION_ATTRIB


Pre SQL : 



SQL Query : 
SELECT     
  MANUAL_TRX_KEY
    ,SALES_ORDER_LINE_KEY
    ,DV_ENTERPRISE_INV_SKU_ID
    ,SALES_MOTION_CD
    ,DV_ALLOCATION_PCT
    ,DV_SERVICE_CATEGORY_CD
    ,DV_OA_FLG                                         
    ,START_TV_DT
    ,END_TV_DT
    ,DV_SOURCE_TYPE
    ,EDW_CREATE_DTM
    ,EDW_CREATE_USER
    ,EDW_UPDATE_DTM
    ,EDW_UPDATE_USER
 FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB WI
 WHERE NOT EXISTS ( SELECT 1
                     FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT
        WHERE WI.MANUAL_TRX_KEY = MT.MANUAL_TRX_KEY
          AND WI.DV_ENTERPRISE_INV_SKU_ID = MT.DV_ENTERPRISE_INV_SKU_ID
          AND WI.START_TV_DT = MT.START_TV_DT
       )


Post SQL : 



Target6 Name : MT_SLS_ADJ_SLS_MOTION_ATTRIB


Pre SQL : 
DELETE FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT
 WHERE EXISTS ( SELECT 1 FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB WI WHERE MT.MANUAL_TRX_KEY = WI.MANUAL_TRX_KEY
 AND MT.DV_ENTERPRISE_INV_SKU_ID = WI.DV_ENTERPRISE_INV_SKU_ID
 AND MT.DV_SOURCE_TYPE = 'NON-RTNR' ) ;
 
 UPDATE MT
   FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT , 
        ( SELECT MANUAL_TRX_KEY, DV_ENTERPRISE_INV_SKU_ID, MAX(START_TV_DT) MAX_START_DT
                       FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB  
                                  -- WHERE DV_SOURCE_TYPE = 'RTNR'
                                 GROUP BY 1,2
                    ) WI
   SET END_TV_DT = MAX_START_DT - 1 ,
       EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0)
 WHERE MT.MANUAL_TRX_KEY = WI.MANUAL_TRX_KEY
 AND MT.DV_ENTERPRISE_INV_SKU_ID = WI.DV_ENTERPRISE_INV_SKU_ID
 AND MT.START_TV_DT <> WI.MAX_START_DT 
 AND MT.END_TV_DT = '3500-01-01';


Post SQL : 
CALL COLLECT_STATS_WRAP('$$SLSORDDB','MT_SLS_ADJ_SLS_MOTION_ATTRIB','D');
 
  UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
      ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
      FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB
        WHERE DV_SOURCE_TYPE = 'RTNR' ) WI  
 SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE)  
 WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB' 
 AND TABLE_NAME = 'MT_RTNR_SMC_ALLOCATION_ERP' ;  
 
 UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
      ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
      FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB
        WHERE DV_SOURCE_TYPE = 'RTNR' ) WI  
 SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE)  
 WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB' 
 AND TABLE_NAME = 'MT_RTNR_SMC_ALLOCATION_POS' ; 
 
 UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
      ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
      FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB 
        WHERE DV_SOURCE_TYPE = 'NON-RTNR' ) WI  
 SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
 WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB' 
 AND TABLE_NAME = 'N_SALES_ADJ_REBOK_MNL_TRX_TV_ERP' ;
 
 UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
      ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
      FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB 
        WHERE DV_SOURCE_TYPE = 'NON-RTNR' ) WI  
 SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
 WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB' 
 AND TABLE_NAME = 'N_SALES_ADJ_REBOK_MNL_TRX_TV_POS' ;

 UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
      ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
      FROM $$STGDB.WI_EL_SLSADJ_SMC_ATTRIB 
        WHERE DV_SOURCE_TYPE = 'NON-RTNR' ) WI  
 SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
 WHERE JOB_STREAM_ID = 'wf_MT_SLS_ADJ_SMC_ATTRIB' 
 AND TABLE_NAME = 'N_POS_TRX_LINE_AS_NEW_OR_RNWL_POS' ;