


Source1 Name : SQ_ST_OPL_XXGCO_RTR_ATTRIB_CV


Pre SQL : 
CREATE MULTISET VOLATILE TABLE ST_OPL_XXGCO_RTR_ATTRIB_CV_SET_CV 
 AS 
 (
 SEL * FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV ST
 QUALIFY ROW_NUMBER() OVER(PARTITION BY RTR_ATTRIBUTION_ID, OA_ATTRIBUTION_ID, SS_CD ORDER BY EDW_CREATE_DTM DESC ) = 1
 ) WITH DATA ON COMMIT PRESERVE ROWS;
 
 
 COLLECT STATISTICS COLUMN ( RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID )ON ST_OPL_XXGCO_RTR_ATTRIB_CV_SET_CV;
 
 DELETE FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV;
 
 INSERT INTO $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV
 SELECT * FROM ST_OPL_XXGCO_RTR_ATTRIB_CV_SET_CV
GROUP BY RECORD_OFFSET ,RTR_ATTRIBUTION_ID ,TRX_ID,TRX_VERSION,ATTRIBUTED_EXT_NET_PRICE,ATTRIBUTED_UNIT_NET_PRICE ,ATTRIBUTED_PERCENTAGE
,ATTRIBUTED_QUANTITY,ENTERPRISE_SKU_INV_ITM_ID ,COVERED_PRD_INV_ITM_ID ,AS_PARENT_SKU_INV_ITM_ID,ARCHITECTURE_ID
,TECHNOLOGY_ID,TXN_CR_PARTY_ID,ERP_HEADER_ID,ERP_LINE_ID,ERP_SO_NUMBER,ORDER_NUMBER ,LINE_REF_NUMBER,SALES_MOTION 
,SALES_MOTION_CONTEXT ,AS_TS_FLAG ,ITEM_CATEGORIZATION,RECGD_ATTRIB_EXT_NET_PRICE,RECGD_PERCENTAGE,SS_CD ,OA_ATTRIBUTION_ID
,OFFER_TYPE_ID,LIST_PRICE ,ATTR_PRDT_CLASS_NAME ,HQ_CR_PARTY_ID ,RENEWAL_REF_TYPE,RENEWAL_REF_VALUE,REASON_CODE,SALES_MOTION_TIMING
,MANUAL_PROCESS_FLAG,USER_ID ,CASE_NUMBER,COMMENTS,SMR_SALES_VALUE,SMR_ACV_AMOUNT ,SMR_TCV_AMOUNT ,PRODUCT_CLASS,RENEW_CLE_ID 
,MANUAL_OVERRIDE_FLAG ,LINE_EXTENDED_PRICE,EDW_CREATE_DTM ,PARTITION_NUMBER,TOPIC_NAME ,INSTALL_SITE_LOCATION,
POS_TRANSACTION_ID_INT,
ORDER_ORIGIN_CD,
SK_TRX_ID_INT,
SK_OPL_HEADER_ID_INT ,RENEWAL_ERP_REF_VALUE;


SQL Query : 
SELECT
 RECORD_OFFSET,
 RTR_ATTRIBUTION_ID,
 TRX_ID,
 TRX_VERSION,
 ATTRIBUTED_EXT_NET_PRICE,
 ATTRIBUTED_UNIT_NET_PRICE,
 ATTRIBUTED_PERCENTAGE,
 ATTRIBUTED_QUANTITY,
 ENTERPRISE_SKU_INV_ITM_ID,
 COVERED_PRD_INV_ITM_ID,
 AS_PARENT_SKU_INV_ITM_ID,
 ARCHITECTURE_ID,
 TECHNOLOGY_ID,
 TXN_CR_PARTY_ID,
 ERP_HEADER_ID,
 ERP_LINE_ID,
 ERP_SO_NUMBER,
 ORDER_NUMBER,
 LINE_REF_NUMBER,
 SALES_MOTION,
 SALES_MOTION_CONTEXT,
 AS_TS_FLAG,
 ITEM_CATEGORIZATION,
 RECGD_ATTRIB_EXT_NET_PRICE,
 RECGD_PERCENTAGE,
 SS_CD,
 OA_ATTRIBUTION_ID,
 OFFER_TYPE_ID,
 LIST_PRICE,
 ATTR_PRDT_CLASS_NAME,
 HQ_CR_PARTY_ID,
 RENEWAL_REF_TYPE,
 RENEWAL_REF_VALUE,
 REASON_CODE,
 SALES_MOTION_TIMING,
 MANUAL_PROCESS_FLAG,
 USER_ID,
 CASE_NUMBER,
 COMMENTS,
 SMR_SALES_VALUE,
 SMR_ACV_AMOUNT,
 SMR_TCV_AMOUNT,
 PRODUCT_CLASS,
 RENEW_CLE_ID,
 MANUAL_OVERRIDE_FLAG,
 LINE_EXTENDED_PRICE,
 EDW_CREATE_DTM,
 PARTITION_NUMBER,
 TOPIC_NAME,
 INSTALL_SITE_LOCATION,
 POS_TRANSACTION_ID_INT,
 ORDER_ORIGIN_CD,
SK_TRX_ID_INT,
SK_OPL_HEADER_ID_INT,
RENEWAL_ERP_REF_VALUE
FROM $$EXCEPDB.EX_OPL_XXGCO_RTR_ATTRIB_CV EX
WHERE EX.EXCEPTION_TYPE = 'RI' 
AND ORDER_ORIGIN_CD <> 'DISTI-DSV'
AND NOT EXISTS (  SELECT 1 FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV ST  WHERE ST.TRX_ID= EX.TRX_ID  AND ST.ORDER_ORIGIN_CD <> 'DISTI-DSV')
UNION ALL
SELECT
 RECORD_OFFSET,
 RTR_ATTRIBUTION_ID,
 TRX_ID,
 TRX_VERSION,
 ATTRIBUTED_EXT_NET_PRICE,
 ATTRIBUTED_UNIT_NET_PRICE,
 ATTRIBUTED_PERCENTAGE,
 ATTRIBUTED_QUANTITY,
 ENTERPRISE_SKU_INV_ITM_ID,
 COVERED_PRD_INV_ITM_ID,
 AS_PARENT_SKU_INV_ITM_ID,
 ARCHITECTURE_ID,
 TECHNOLOGY_ID,
 TXN_CR_PARTY_ID,
 ERP_HEADER_ID,
 ERP_LINE_ID,
 ERP_SO_NUMBER,
 ORDER_NUMBER,
 LINE_REF_NUMBER,
 SALES_MOTION,
 SALES_MOTION_CONTEXT,
 AS_TS_FLAG,
 ITEM_CATEGORIZATION,
 RECGD_ATTRIB_EXT_NET_PRICE,
 RECGD_PERCENTAGE,
 SS_CD,
 OA_ATTRIBUTION_ID,
 OFFER_TYPE_ID,
 LIST_PRICE,
 ATTR_PRDT_CLASS_NAME,
 HQ_CR_PARTY_ID,
 RENEWAL_REF_TYPE,
 RENEWAL_REF_VALUE,
 REASON_CODE,
 SALES_MOTION_TIMING,
 MANUAL_PROCESS_FLAG,
 USER_ID,
 CASE_NUMBER,
 COMMENTS,
 SMR_SALES_VALUE,
 SMR_ACV_AMOUNT,
 SMR_TCV_AMOUNT,
 PRODUCT_CLASS,
 RENEW_CLE_ID,
 MANUAL_OVERRIDE_FLAG,
 LINE_EXTENDED_PRICE,
 EDW_CREATE_DTM,
 PARTITION_NUMBER,
 TOPIC_NAME,
 INSTALL_SITE_LOCATION,
 POS_TRANSACTION_ID_INT,
 ORDER_ORIGIN_CD,
SK_TRX_ID_INT,
SK_OPL_HEADER_ID_INT,
RENEWAL_ERP_REF_VALUE
FROM $$EXCEPDB.EX_OPL_XXGCO_RTR_ATTRIB_CV EX
WHERE EX.EXCEPTION_TYPE = 'RI' 
AND ORDER_ORIGIN_CD = 'DISTI-DSV'
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV ST WHERE ST.POS_TRANSACTION_ID_INT= EX.POS_TRANSACTION_ID_INT  AND ST.ORDER_ORIGIN_CD = 'DISTI-DSV' )


Post SQL : 



Target1 Name : ST_OPL_XXGCO_RTR_ATTRIB_CV


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','ST_OPL_XXGCO_RTR_ATTRIB_CV','D');


Source2 Name : SQ_SM_ATTR_PRDT_NEW_RNWL_ACV


Pre SQL : 



SQL Query : 
SELECT
  SM.MAX_RTR_KEY + RANK() OVER (ORDER BY RTR_ATTRIBUTION_ID, OA_ATTRIBUTION_ID, SS_CD) AS ATTR_PRDT_AS_NEW_OR_RNWL_KEY
  ,DT.RTR_ATTRIBUTION_ID AS SK_RTR_ATTRIBUTION_ID
  ,DT.SS_CD
  ,DT.OA_ATTRIBUTION_ID AS SK_ATTRIBUTION_ID_INT
  ,CURRENT_TIMESTAMP(0) EDW_CREATE_DTM
  ,USER EDW_CREATE_USER
FROM (
    SELECT RTR_ATTRIBUTION_ID, OA_ATTRIBUTION_ID, SS_CD
      FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV ST
     WHERE NOT EXISTS
     ( SELECT SK_RTR_ATTRIBUTION_ID , SK_ATTRIBUTION_ID_INT, SS_CD
         FROM $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_ACV SM
     WHERE ST.RTR_ATTRIBUTION_ID = SM.SK_RTR_ATTRIBUTION_ID
  AND ST.OA_ATTRIBUTION_ID = SM.SK_ATTRIBUTION_ID_INT
  AND ST.SS_CD = SM.SS_CD
      )
    GROUP BY 1,2,3  
  ) DT,
(
SELECT COALESCE(MAX(ATTR_PRDT_AS_NEW_OR_RNWL_KEY),0)  MAX_RTR_KEY
FROM ( SEL ATTR_PRDT_AS_NEW_OR_RNWL_KEY FROM $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_ACV
UNION SEL ATTR_PRDT_AS_NEW_OR_RNWL_KEY FROM $$ETLVWDB.SM_ATTR_PRDT_AS_NEW_OR_RNWL
UNION SEL ATTR_PRDT_AS_NEW_OR_RNWL_KEY  FROM $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_BUNDLE
) WI
) SM


Post SQL : 



Target2 Name : SM_ATTR_PRDT_NEW_RNWL_ACV


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$TRANSLATIONDB','SM_ATTR_PRDT_NEW_RNWL_ACV','D');


Source3 Name : SQ_WI_OPL_XXGCO_RTR_ATTRIB_CV1


Pre SQL : 



SQL Query : 
SELECT
     SMXSS.ATTR_PRDT_AS_NEW_OR_RNWL_KEY,
     ST.RTR_ATTRIBUTION_ID AS SK_RTR_ATTRIBUTION_ID,
     NPA.ITEM_KEY AS ATTR_PRDT_KEY,
	 NSOL.SALES_ORDER_LINE_KEY,
	 COALESCE(NPHQ.PARTY_KEY,-999) AS HQ_CR_PRTY_KEY,
	 COALESCE(NP.PARTY_KEY,-999) AS TRANSACTION_CR_PARTY_KEY,
	 COALESCE( OFFER.NAME,'UNKNOWN' ) AS BK_DV_ATTR_PRDT_OFFER_TYPE_NAME,
	 COALESCE( TECH.NAME, 'UNKNOWN' ) AS BK_TECH_GROUP_ID,
	 COALESCE( ARCH.NAME, 'UNKNOWN' ) AS BK_AS_ARCHITECTURE_NAME,
	 COALESCE(NPC.ITEM_KEY,-999) AS COVERED_PRDT_KEY,
	 ST.ATTRIBUTED_QUANTITY AS ATTR_PRDT_QTY,
	 COALESCE(NULLIF(ST.ATTRIBUTED_PERCENTAGE,0), 0 ) AS ATTR_PCT,
	 COALESCE(ST.ATTRIBUTED_UNIT_NET_PRICE,0.0000) AS ATTR_NET_PRICE_LOCAL_AMT,
	 COALESCE(ST.ATTRIBUTED_EXT_NET_PRICE,0.0000) AS ATTR_EXTD_PRICE_LOCAL_AMT,
     COALESCE(ST.SALES_MOTION, 'UNKNOWN' ) SALES_MOTION_CD,
	 COALESCE(ST.SALES_MOTION_CONTEXT,'UNKNOWN') AS SALES_MOTION_CONTEXT_NAME,
	 COALESCE(SITEUSE.ERP_CUST_ACCOUNT_LOCATION_KEY, -999 ) AS ERP_CUST_ACCT_LOC_KEY,
	 COALESCE(ST.AS_TS_FLAG,'UNK') AS AS_TS_CD,
	 COALESCE( ST.LINE_REF_NUMBER,-999 ) AS SK_LINE_REF_NUM,
	 COALESCE(ST.TRX_ID,-999) AS SK_ERP_BKGS_TRX_ID,
	 COALESCE(ST.RENEW_CLE_ID,-999) AS SK_RENEW_CONTRACT_LINE_ID,
     COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-999) AS SK_AS_PARENT_INVENTORY_ITEM_ID,
     COALESCE(ST.ITEM_CATEGORIZATION,'UNKNOWN') AS ITEM_CATEGORY_NAME,
     COALESCE(ST.TRX_VERSION,-999) AS ERP_TRX_VERSION_INT,
     ST.SS_CD,
	 ST.OA_ATTRIBUTION_ID AS SK_ATTRIBUTION_ID_INT,
	 ST.ATTR_PRDT_CLASS_NAME,
	 ST.RENEWAL_REF_VALUE AS RENEWAL_REF_ID,
     ST.RENEWAL_REF_TYPE AS RENEWAL_REF_CD,
	 ST.REASON_CODE AS SMR_TAGGING_FAILURE_RSN_CD,
     ST.SALES_MOTION_TIMING AS SALES_MOTION_TIMING_CD,
     COALESCE(ST.MANUAL_OVERRIDE_FLAG,'N') AS MANUAL_OVERRIDE_ROLE, 
	 COALESCE(ST.SMR_SALES_VALUE, 0.000000 ) AS TOTAL_SERVICES_USD_AMT,
	 COALESCE(ST.SMR_ACV_AMOUNT, 0.000000 ) AS ACV_USD_AMT,
	 COALESCE(ST.SMR_TCV_AMOUNT, 0.000000 ) AS TCV_USD_AMT,
	 COALESCE(ST.LINE_EXTENDED_PRICE, 0.000000 ) AS EXTENDED_PRICE_USD_AMT,
	 COALESCE(NCWP.CISCO_WORKER_PARTY_KEY,-999) AS REQUESTING_CSCO_WRKR_PRTY_KEY,                   
     ST.CASE_NUMBER AS SLS_MTN_CORRECTION_CASE_NUM,                   
     ST.COMMENTS AS SLS_MTN_CORRECTION_CMNT,
     CURRENT_TIMESTAMP(0)  AS START_TV_DTM,
	 NSOA.ATTRIBUTED_PRODUCT_KEY AS OFFER_ATTRIB_PRDT_KEY,
ST.POS_TRANSACTION_ID_INT,
	 ST.ORDER_ORIGIN_CD,
 ST.SK_TRX_ID_INT,
 ST.SK_OPL_HEADER_ID_INT,
 ST.RENEWAL_ERP_REF_VALUE
    FROM ( SEL * FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV WHERE ITEM_CATEGORIZATION NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' )
	AND ORDER_ORIGIN_CD <> 'DISTI-DSV' ) ST 
    INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
     ON ST.ERP_LINE_ID = NSOL.SK_SO_LINE_ID_INT
	 AND NSOL.SS_CODE = 'CG'
	INNER JOIN $$COMREFVWDB.N_PRODUCT NPA
     ON ST.ENTERPRISE_SKU_INV_ITM_ID = NPA.SK_INVENTORY_ITEM_ID_INT
	INNER JOIN ( SEL * FROM $$NRTNCRVWDB.N_SOL_OFFER_ATTRIBUTION WHERE SK_OFFER_ATTRIBUTION_ID_INT > 0 ) NSOA /* for hard exception for OA records WITH OA ID */
     ON NSOL.SALES_ORDER_LINE_KEY = NSOA.TOP_SKU_SALES_ORDER_LINE_KEY
	 AND NPA.ITEM_KEY = NSOA.ENTERPRISE_SKU_PRDT_KEY
	 AND COALESCE(ST.OA_ATTRIBUTION_ID,-9999) = NSOA.SK_OFFER_ATTRIBUTION_ID_INT
	LEFT JOIN $$COMREFVWDB.N_PRODUCT NPC
     ON COALESCE(ST.COVERED_PRD_INV_ITM_ID,-1012624) = NPC.SK_INVENTORY_ITEM_ID_INT     
    LEFT JOIN $$COMREFVWDB.N_PRODUCT NPP
     ON COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-1012624) = NPP.SK_INVENTORY_ITEM_ID_INT
    LEFT JOIN $$COMREFVWDB.N_ERP_CUST_ACCT_LOC_USE SITEUSE
     ON CAST(COALESCE(ST.INSTALL_SITE_LOCATION,-999) AS BIGINT) = SITEUSE.SK_SITE_USE_ID_INT 
    LEFT JOIN $$COMREFVWDB.N_PARTY NP
     ON COALESCE(ST.TXN_CR_PARTY_ID,-999) = NP.PARTY_SSOT_PARTY_ID_INT
     AND NP.SS_CODE IN ('CR_MODS','CR')
     AND COALESCE(NP.STATUS_CODE,'A')='A'
    LEFT JOIN $$COMREFVWDB.N_PARTY NPHQ
     ON COALESCE(ST.HQ_CR_PARTY_ID,-999) = NPHQ.PARTY_SSOT_PARTY_ID_INT
     AND NPHQ.SS_CODE IN ('CR_MODS','CR')
     AND COALESCE(NPHQ.STATUS_CODE,'A')='A'
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_ARCH ARCH
     ON ST.ARCHITECTURE_ID = ARCH.ARCHITECTURE_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_TECH TECH
     ON ST.TECHNOLOGY_ID = TECH.TECHNOLOGY_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_BIZ_SERVICES OFFER
     ON ST.OFFER_TYPE_ID = OFFER.BS_ID
    LEFT OUTER JOIN $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCWP
     ON NCWP.CEC_ID||'@cisco.com' =ST.USER_ID 
     AND NCWP.END_TV_DATE='3500-01-01'
    INNER JOIN $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_ACV SMXSS
     ON SMXSS.SK_RTR_ATTRIBUTION_ID=ST.RTR_ATTRIBUTION_ID
     AND SMXSS.SK_ATTRIBUTION_ID_INT = ST.OA_ATTRIBUTION_ID
     AND SMXSS.SS_CD = ST.SS_CD
WHERE EXISTS ( SEL 1 FROM $$NRTNCRVWDB.N_SOL_OFFER_ATTRIBUTION NSOA 
			  WHERE NSOL.SALES_ORDER_LINE_KEY = NSOA.TOP_SKU_SALES_ORDER_LINE_KEY )   /* FOR ATTRIBUTED ERP LINES */


Post SQL : 



Target3 Name : WI_OPL_XXGCO_RTR_ATTRIB_CV1


Pre SQL : 
DELETE FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_OPL_XXGCO_RTR_ATTRIB_CV','D');


Source4 Name : SQ_WI_OPL_XXGCO_RTR_ATTRIB_CV2


Pre SQL : 



SQL Query : 
SELECT
     SMXSS.ATTR_PRDT_AS_NEW_OR_RNWL_KEY,
     ST.RTR_ATTRIBUTION_ID AS SK_RTR_ATTRIBUTION_ID,
     NPA.ITEM_KEY AS ATTR_PRDT_KEY,
	 NSOL.SALES_ORDER_LINE_KEY,
	 COALESCE(NPHQ.PARTY_KEY,-999) AS HQ_CR_PRTY_KEY,
	 COALESCE(NP.PARTY_KEY,-999) AS TRANSACTION_CR_PARTY_KEY,
	 COALESCE( OFFER.NAME,'UNKNOWN' ) AS BK_DV_ATTR_PRDT_OFFER_TYPE_NAME,
	 COALESCE( TECH.NAME, 'UNKNOWN' ) AS BK_TECH_GROUP_ID,
	 COALESCE( ARCH.NAME, 'UNKNOWN' ) AS BK_AS_ARCHITECTURE_NAME,
	 COALESCE(NPC.ITEM_KEY,-999) AS COVERED_PRDT_KEY,
	 ST.ATTRIBUTED_QUANTITY AS ATTR_PRDT_QTY,
	 COALESCE(NULLIF(ST.ATTRIBUTED_PERCENTAGE,0), 0 ) AS ATTR_PCT,
	 COALESCE(ST.ATTRIBUTED_UNIT_NET_PRICE,0.0000) AS ATTR_NET_PRICE_LOCAL_AMT,
	 COALESCE(ST.ATTRIBUTED_EXT_NET_PRICE,0.0000) AS ATTR_EXTD_PRICE_LOCAL_AMT,
     COALESCE(ST.SALES_MOTION, 'UNKNOWN' ) SALES_MOTION_CD,
	 COALESCE(ST.SALES_MOTION_CONTEXT,'UNKNOWN') AS SALES_MOTION_CONTEXT_NAME,
	 COALESCE(SITEUSE.ERP_CUST_ACCOUNT_LOCATION_KEY, -999 ) AS ERP_CUST_ACCT_LOC_KEY,
	 COALESCE(ST.AS_TS_FLAG,'UNK') AS AS_TS_CD,
	 COALESCE( ST.LINE_REF_NUMBER,-999 ) AS SK_LINE_REF_NUM,
	 COALESCE(ST.TRX_ID,-999) AS SK_ERP_BKGS_TRX_ID,
	 COALESCE(ST.RENEW_CLE_ID,-999) AS SK_RENEW_CONTRACT_LINE_ID,
     COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-999) AS SK_AS_PARENT_INVENTORY_ITEM_ID,
     COALESCE(ST.ITEM_CATEGORIZATION,'UNKNOWN') AS ITEM_CATEGORY_NAME,
     COALESCE(ST.TRX_VERSION,-999) AS ERP_TRX_VERSION_INT,
     ST.SS_CD,
	 ST.OA_ATTRIBUTION_ID AS SK_ATTRIBUTION_ID_INT,
	 ST.ATTR_PRDT_CLASS_NAME,
	 ST.RENEWAL_REF_VALUE AS RENEWAL_REF_ID,
     ST.RENEWAL_REF_TYPE AS RENEWAL_REF_CD,
	 ST.REASON_CODE AS SMR_TAGGING_FAILURE_RSN_CD,
     ST.SALES_MOTION_TIMING AS SALES_MOTION_TIMING_CD,
     COALESCE(ST.MANUAL_OVERRIDE_FLAG,'N') AS MANUAL_OVERRIDE_ROLE, 
	 COALESCE(ST.SMR_SALES_VALUE, 0.000000 ) AS TOTAL_SERVICES_USD_AMT,
	 COALESCE(ST.SMR_ACV_AMOUNT, 0.000000 ) AS ACV_USD_AMT,
	 COALESCE(ST.SMR_TCV_AMOUNT, 0.000000 ) AS TCV_USD_AMT,
	 COALESCE(ST.LINE_EXTENDED_PRICE, 0.000000 ) AS EXTENDED_PRICE_USD_AMT,
	 COALESCE(NCWP.CISCO_WORKER_PARTY_KEY,-999) AS REQUESTING_CSCO_WRKR_PRTY_KEY,                   
     ST.CASE_NUMBER AS SLS_MTN_CORRECTION_CASE_NUM,                   
     ST.COMMENTS AS SLS_MTN_CORRECTION_CMNT,
     CURRENT_TIMESTAMP(0)  AS START_TV_DTM,
	 NSOL.PRODUCT_KEY AS OFFER_ATTRIB_PRDT_KEY,
ST.POS_TRANSACTION_ID_INT,
	 ST.ORDER_ORIGIN_CD,
COALESCE(ST.SK_TRX_ID_INT, -999) AS SK_TRX_ID_INT,
 ST.SK_OPL_HEADER_ID_INT,
 ST.RENEWAL_ERP_REF_VALUE
    FROM ( SEL * FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV WHERE ITEM_CATEGORIZATION NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' )
	AND ORDER_ORIGIN_CD <>  'DISTI-DSV' ) ST 
    INNER JOIN $$COMREFVWDB.N_PRODUCT NPA
     ON ST.ENTERPRISE_SKU_INV_ITM_ID = NPA.SK_INVENTORY_ITEM_ID_INT
	 INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL /* NSOL REFERENCE join to get sol key and so key*/
     ON ST.ERP_LINE_ID = NSOL.SK_SO_LINE_ID_INT
	 AND NSOL.SS_CODE = 'CG'
	INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_V1_TV NSO /* NSO join to get CCW ORDER ORIGIN CD COL */
     ON NSOL.SALES_ORDER_KEY =  NSO.SALES_ORDER_KEY
	 AND NSO.END_TV_DTM = '3500-01-01 00:00:00'
	 AND NSO.SS_CD = 'CG'
	INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL_P
     ON NSOL.SALES_ORDER_LINE_KEY = NSOL_P.SALES_ORDER_LINE_KEY
	 AND CASE WHEN NSO.CCW_ORDER_ORIGIN_CD NOT IN ('CCW-RENEWALS','CCW-RENEWALS-2T') THEN NSOL_P.PRODUCT_KEY ELSE -999 END
	 = CASE WHEN NSO.CCW_ORDER_ORIGIN_CD NOT IN ('CCW-RENEWALS','CCW-RENEWALS-2T') THEN NPA.ITEM_KEY ELSE -999 END /* STANDALONE ERP LINES - HARD EXCEPTION FOR INV SKU except CCWR/CCWR-2T lines*/
	 AND NSOL_P.SS_CODE = 'CG'
    LEFT JOIN $$COMREFVWDB.N_PRODUCT NPC
     ON COALESCE(ST.COVERED_PRD_INV_ITM_ID,-1012624) = NPC.SK_INVENTORY_ITEM_ID_INT     
    LEFT JOIN $$COMREFVWDB.N_PRODUCT NPP
     ON COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-1012624) = NPP.SK_INVENTORY_ITEM_ID_INT
    LEFT JOIN $$COMREFVWDB.N_ERP_CUST_ACCT_LOC_USE SITEUSE
     ON CAST(COALESCE(ST.INSTALL_SITE_LOCATION,-999) AS BIGINT)= SITEUSE.SK_SITE_USE_ID_INT 
    LEFT JOIN $$COMREFVWDB.N_PARTY NP
     ON COALESCE(ST.TXN_CR_PARTY_ID,-999) = NP.PARTY_SSOT_PARTY_ID_INT
     AND NP.SS_CODE IN ('CR_MODS','CR')
     AND COALESCE(NP.STATUS_CODE,'A')='A'
    LEFT JOIN $$COMREFVWDB.N_PARTY NPHQ
     ON COALESCE(ST.HQ_CR_PARTY_ID,-999) = NPHQ.PARTY_SSOT_PARTY_ID_INT
     AND NPHQ.SS_CODE IN ('CR_MODS','CR')
     AND COALESCE(NPHQ.STATUS_CODE,'A')='A'
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_ARCH ARCH
     ON ST.ARCHITECTURE_ID = ARCH.ARCHITECTURE_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_TECH TECH
     ON ST.TECHNOLOGY_ID = TECH.TECHNOLOGY_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_BIZ_SERVICES OFFER
     ON ST.OFFER_TYPE_ID = OFFER.BS_ID
    LEFT OUTER JOIN $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCWP
     ON NCWP.CEC_ID||'@cisco.com' =ST.USER_ID 
     AND NCWP.END_TV_DATE='3500-01-01'
    INNER JOIN $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_ACV SMXSS
     ON SMXSS.SK_RTR_ATTRIBUTION_ID=ST.RTR_ATTRIBUTION_ID
     AND SMXSS.SK_ATTRIBUTION_ID_INT = ST.OA_ATTRIBUTION_ID
     AND SMXSS.SS_CD = ST.SS_CD
WHERE NOT EXISTS ( SEL 1 FROM $$NRTNCRVWDB.N_SOL_OFFER_ATTRIBUTION NSOA
			  WHERE NSOL.SALES_ORDER_LINE_KEY = NSOA.TOP_SKU_SALES_ORDER_LINE_KEY ) /* FOR STANDALONE ERP LINES */


Post SQL : 



Target4 Name : WI_OPL_XXGCO_RTR_ATTRIB_CV2


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_OPL_XXGCO_RTR_ATTRIB_CV','D');


Source5 Name : SQ_WI_OPL_XXGCO_RTR_ATTRIB_CV3


Pre SQL : 



SQL Query : 
SELECT
     SMXSS.ATTR_PRDT_AS_NEW_OR_RNWL_KEY,
     ST.RTR_ATTRIBUTION_ID AS SK_RTR_ATTRIBUTION_ID,
     NPA.ITEM_KEY AS ATTR_PRDT_KEY,
	 CAST( -7777 AS INTEGER ) AS SALES_ORDER_LINE_KEY,
	 COALESCE(NPHQ.PARTY_KEY,-999) AS HQ_CR_PRTY_KEY,
	 COALESCE(NP.PARTY_KEY,-999) AS TRANSACTION_CR_PARTY_KEY,
	 COALESCE( OFFER.NAME,'UNKNOWN' ) AS BK_DV_ATTR_PRDT_OFFER_TYPE_NAME,
	 COALESCE( TECH.NAME, 'UNKNOWN' ) AS BK_TECH_GROUP_ID,
	 COALESCE( ARCH.NAME, 'UNKNOWN' ) AS BK_AS_ARCHITECTURE_NAME,
	 COALESCE(NPC.ITEM_KEY,-999) AS COVERED_PRDT_KEY,
	 ST.ATTRIBUTED_QUANTITY AS ATTR_PRDT_QTY,
	 COALESCE(NULLIF(ST.ATTRIBUTED_PERCENTAGE,0), 0 ) AS ATTR_PCT,
	 COALESCE(ST.ATTRIBUTED_UNIT_NET_PRICE,0.0000) AS ATTR_NET_PRICE_LOCAL_AMT,
	 COALESCE(ST.ATTRIBUTED_EXT_NET_PRICE,0.0000) AS ATTR_EXTD_PRICE_LOCAL_AMT,
     COALESCE(ST.SALES_MOTION, 'UNKNOWN' ) SALES_MOTION_CD,
	 COALESCE(ST.SALES_MOTION_CONTEXT,'UNKNOWN') AS SALES_MOTION_CONTEXT_NAME,
	 COALESCE(SITEUSE.ERP_CUST_ACCOUNT_LOCATION_KEY, -999 ) AS ERP_CUST_ACCT_LOC_KEY,
	 COALESCE(ST.AS_TS_FLAG,'UNK') AS AS_TS_CD,
	 COALESCE( ST.LINE_REF_NUMBER,-999 ) AS SK_LINE_REF_NUM,
	 COALESCE(ST.TRX_ID,-999) AS SK_ERP_BKGS_TRX_ID,
	 COALESCE(ST.RENEW_CLE_ID,-999) AS SK_RENEW_CONTRACT_LINE_ID,
     COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-999) AS SK_AS_PARENT_INVENTORY_ITEM_ID,
     COALESCE(ST.ITEM_CATEGORIZATION,'UNKNOWN') AS ITEM_CATEGORY_NAME,
     COALESCE(ST.TRX_VERSION,-999) AS ERP_TRX_VERSION_INT,
     ST.SS_CD,
	 ST.OA_ATTRIBUTION_ID AS SK_ATTRIBUTION_ID_INT,
	 ST.ATTR_PRDT_CLASS_NAME,
	 ST.RENEWAL_REF_VALUE AS RENEWAL_REF_ID,
     ST.RENEWAL_REF_TYPE AS RENEWAL_REF_CD,
	 ST.REASON_CODE AS SMR_TAGGING_FAILURE_RSN_CD,
     ST.SALES_MOTION_TIMING AS SALES_MOTION_TIMING_CD,
     COALESCE(ST.MANUAL_OVERRIDE_FLAG,'N') AS MANUAL_OVERRIDE_ROLE, 
	 COALESCE(ST.SMR_SALES_VALUE, 0.000000 ) AS TOTAL_SERVICES_USD_AMT,
	 COALESCE(ST.SMR_ACV_AMOUNT, 0.000000 ) AS ACV_USD_AMT,
	 COALESCE(ST.SMR_TCV_AMOUNT, 0.000000 ) AS TCV_USD_AMT,
	 COALESCE(ST.LINE_EXTENDED_PRICE, 0.000000 ) AS EXTENDED_PRICE_USD_AMT,
	 COALESCE(NCWP.CISCO_WORKER_PARTY_KEY,-999) AS REQUESTING_CSCO_WRKR_PRTY_KEY,                   
     ST.CASE_NUMBER AS SLS_MTN_CORRECTION_CASE_NUM,                   
     ST.COMMENTS AS SLS_MTN_CORRECTION_CMNT,
     CURRENT_TIMESTAMP(0)  AS START_TV_DTM,
	 XOA.ORDERED_PRODUCT_KEY AS OFFER_ATTRIB_PRDT_KEY,
ST.POS_TRANSACTION_ID_INT,
	 ST.ORDER_ORIGIN_CD,
 ST.SK_TRX_ID_INT,
 ST.SK_OPL_HEADER_ID_INT,
 ST.RENEWAL_ERP_REF_VALUE
    FROM ( SEL * FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV WHERE ITEM_CATEGORIZATION IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' ) AND ORDER_ORIGIN_CD <>  'DISTI-DSV' ) ST 
    INNER JOIN $$NRTNCRVWDB.N_XAAS_SO_SBSCR_ITM_SLSTRX_NRT TRX
	 ON ST.TRX_ID = TRX.SK_TRX_ID_INT
	 AND COALESCE(TRX.TRX_SS_CD, 'UNKNOWN' ) <> 'AR' /* Added filter as part of Nov 2020 SW release to restrict AR XAAS lines from OPL and inherit within EDW */
	 INNER JOIN $$COMREFVWDB.N_PRODUCT NPA
     ON ST.ENTERPRISE_SKU_INV_ITM_ID = NPA.SK_INVENTORY_ITEM_ID_INT
	INNER JOIN ( SEL * FROM $$NRTNCRVWDB.N_XAAS_SO_SBSCRPTN_ATTRBTN_NRT WHERE BK_OFFER_ATTRIBUTION_ID_INT > 0 ) XOA /* for hard exception for OA records WITH OA ID */
     ON TRX.SO_SBSCRPTN_ITM_SLS_TRX_KEY = XOA.PARENT_SO_SBSCRP_ITMSLSTRX_KEY
	 AND NPA.ITEM_KEY = XOA.ENTERPRISE_SKU_PRDT_KEY
	 AND COALESCE(ST.OA_ATTRIBUTION_ID,-9999) = XOA.BK_OFFER_ATTRIBUTION_ID_INT
	LEFT JOIN $$COMREFVWDB.N_PRODUCT NPC
     ON COALESCE(ST.COVERED_PRD_INV_ITM_ID,-1012624) = NPC.SK_INVENTORY_ITEM_ID_INT     
    LEFT JOIN $$COMREFVWDB.N_PRODUCT NPP
     ON COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-1012624) = NPP.SK_INVENTORY_ITEM_ID_INT
    LEFT JOIN $$COMREFVWDB.N_ERP_CUST_ACCT_LOC_USE SITEUSE
     ON CAST(COALESCE(ST.INSTALL_SITE_LOCATION,-999) AS BIGINT) = SITEUSE.SK_SITE_USE_ID_INT 
    LEFT JOIN $$COMREFVWDB.N_PARTY NP
     ON COALESCE(ST.TXN_CR_PARTY_ID,-999) = NP.PARTY_SSOT_PARTY_ID_INT
     AND NP.SS_CODE IN ('CR_MODS','CR')
     AND COALESCE(NP.STATUS_CODE,'A')='A'
    LEFT JOIN $$COMREFVWDB.N_PARTY NPHQ
     ON COALESCE(ST.HQ_CR_PARTY_ID,-999) = NPHQ.PARTY_SSOT_PARTY_ID_INT
     AND NPHQ.SS_CODE IN ('CR_MODS','CR')
     AND COALESCE(NPHQ.STATUS_CODE,'A')='A'
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_ARCH ARCH
     ON ST.ARCHITECTURE_ID = ARCH.ARCHITECTURE_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_TECH TECH
     ON ST.TECHNOLOGY_ID = TECH.TECHNOLOGY_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_BIZ_SERVICES OFFER
     ON ST.OFFER_TYPE_ID = OFFER.BS_ID
    LEFT OUTER JOIN $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCWP
     ON NCWP.CEC_ID =ST.USER_ID 
     AND NCWP.END_TV_DATE='3500-01-01'
    INNER JOIN $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_ACV SMXSS
     ON SMXSS.SK_RTR_ATTRIBUTION_ID=ST.RTR_ATTRIBUTION_ID
     AND SMXSS.SK_ATTRIBUTION_ID_INT = ST.OA_ATTRIBUTION_ID
     AND SMXSS.SS_CD = ST.SS_CD
WHERE EXISTS ( SEL 1 FROM $$NRTNCRVWDB.N_XAAS_SO_SBSCRPTN_ATTRBTN_NRT XOA
			  WHERE TRX.SO_SBSCRPTN_ITM_SLS_TRX_KEY = XOA.PARENT_SO_SBSCRP_ITMSLSTRX_KEY ) /* FOR ATTRIBUTED XAAS LINES */


Post SQL : 



Target5 Name : WI_OPL_XXGCO_RTR_ATTRIB_CV3


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_OPL_XXGCO_RTR_ATTRIB_CV','D');


Source6 Name : SQ_WI_OPL_XXGCO_RTR_ATTRIB_CV4


Pre SQL : 



SQL Query : 
SELECT
     SMXSS.ATTR_PRDT_AS_NEW_OR_RNWL_KEY,
     ST.RTR_ATTRIBUTION_ID AS SK_RTR_ATTRIBUTION_ID,
     NPA.ITEM_KEY AS ATTR_PRDT_KEY,
	 CAST( -7777 AS INTEGER ) AS SALES_ORDER_LINE_KEY,
	 COALESCE(NPHQ.PARTY_KEY,-999) AS HQ_CR_PRTY_KEY,
	 COALESCE(NP.PARTY_KEY,-999) AS TRANSACTION_CR_PARTY_KEY,
	 COALESCE( OFFER.NAME,'UNKNOWN' ) AS BK_DV_ATTR_PRDT_OFFER_TYPE_NAME,
	 COALESCE( TECH.NAME, 'UNKNOWN' ) AS BK_TECH_GROUP_ID,
	 COALESCE( ARCH.NAME, 'UNKNOWN' ) AS BK_AS_ARCHITECTURE_NAME,
	 COALESCE(NPC.ITEM_KEY,-999) AS COVERED_PRDT_KEY,
	 ST.ATTRIBUTED_QUANTITY AS ATTR_PRDT_QTY,
	 COALESCE(NULLIF(ST.ATTRIBUTED_PERCENTAGE,0), 0 ) AS ATTR_PCT,
	 COALESCE(ST.ATTRIBUTED_UNIT_NET_PRICE,0.0000) AS ATTR_NET_PRICE_LOCAL_AMT,
	 COALESCE(ST.ATTRIBUTED_EXT_NET_PRICE,0.0000) AS ATTR_EXTD_PRICE_LOCAL_AMT,
     COALESCE(ST.SALES_MOTION, 'UNKNOWN' ) SALES_MOTION_CD,
	 COALESCE(ST.SALES_MOTION_CONTEXT,'UNKNOWN') AS SALES_MOTION_CONTEXT_NAME,
	 COALESCE(SITEUSE.ERP_CUST_ACCOUNT_LOCATION_KEY, -999 ) AS ERP_CUST_ACCT_LOC_KEY,
	 COALESCE(ST.AS_TS_FLAG,'UNK') AS AS_TS_CD,
	 COALESCE( ST.LINE_REF_NUMBER,-999 ) AS SK_LINE_REF_NUM,
	 COALESCE(ST.TRX_ID,-999) AS SK_ERP_BKGS_TRX_ID,
	 COALESCE(ST.RENEW_CLE_ID,-999) AS SK_RENEW_CONTRACT_LINE_ID,
     COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-999) AS SK_AS_PARENT_INVENTORY_ITEM_ID,
     COALESCE(ST.ITEM_CATEGORIZATION,'UNKNOWN') AS ITEM_CATEGORY_NAME,
     COALESCE(ST.TRX_VERSION,-999) AS ERP_TRX_VERSION_INT,
     ST.SS_CD,
	 ST.OA_ATTRIBUTION_ID AS SK_ATTRIBUTION_ID_INT,
	 ST.ATTR_PRDT_CLASS_NAME,
	 ST.RENEWAL_REF_VALUE AS RENEWAL_REF_ID,
     ST.RENEWAL_REF_TYPE AS RENEWAL_REF_CD,
	 ST.REASON_CODE AS SMR_TAGGING_FAILURE_RSN_CD,
     ST.SALES_MOTION_TIMING AS SALES_MOTION_TIMING_CD,
     COALESCE(ST.MANUAL_OVERRIDE_FLAG,'N') AS MANUAL_OVERRIDE_ROLE, 
	 COALESCE(ST.SMR_SALES_VALUE, 0.000000 ) AS TOTAL_SERVICES_USD_AMT,
	 COALESCE(ST.SMR_ACV_AMOUNT, 0.000000 ) AS ACV_USD_AMT,
	 COALESCE(ST.SMR_TCV_AMOUNT, 0.000000 ) AS TCV_USD_AMT,
	 COALESCE(ST.LINE_EXTENDED_PRICE, 0.000000 ) AS EXTENDED_PRICE_USD_AMT,
	 COALESCE(NCWP.CISCO_WORKER_PARTY_KEY,-999) AS REQUESTING_CSCO_WRKR_PRTY_KEY,                   
     ST.CASE_NUMBER AS SLS_MTN_CORRECTION_CASE_NUM,                   
     ST.COMMENTS AS SLS_MTN_CORRECTION_CMNT,
     CURRENT_TIMESTAMP(0)  AS START_TV_DTM,
	 TRX.SUBSCRIPTION_PRODUCT_KEY AS OFFER_ATTRIB_PRDT_KEY,
	 ST.POS_TRANSACTION_ID_INT,
	ST.ORDER_ORIGIN_CD,
COALESCE(ST.SK_TRX_ID_INT, -999) AS SK_TRX_ID_INT,
ST.SK_OPL_HEADER_ID_INT,
ST.RENEWAL_ERP_REF_VALUE
    FROM ( SEL * FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV WHERE ITEM_CATEGORIZATION IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' ) AND ORDER_ORIGIN_CD <> 'DISTI-DSV' ) ST 
    INNER JOIN $$COMREFVWDB.N_PRODUCT NPA
     ON ST.ENTERPRISE_SKU_INV_ITM_ID = NPA.SK_INVENTORY_ITEM_ID_INT
	INNER JOIN $$NRTNCRVWDB.N_XAAS_SO_SBSCR_ITM_SLSTRX_NRT TRX
	 ON ST.TRX_ID = TRX.SK_TRX_ID_INT
	 AND NPA.ITEM_KEY = TRX.SUBSCRIPTION_PRODUCT_KEY /* STANDALONE XAAS LINES - HARD EXCEPTION FOR INV SKU */
	 AND COALESCE( TRX.TRX_SS_CD, 'UNKNOWN' ) <> 'AR' /* Added as part of Nov 2020 SW release to restrict AR XAAS lines from OPL and inherit within EDW */
    LEFT JOIN $$COMREFVWDB.N_PRODUCT NPC
     ON COALESCE(ST.COVERED_PRD_INV_ITM_ID,-1012624) = NPC.SK_INVENTORY_ITEM_ID_INT     
    LEFT JOIN $$COMREFVWDB.N_PRODUCT NPP
     ON COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-1012624) = NPP.SK_INVENTORY_ITEM_ID_INT
    LEFT JOIN $$COMREFVWDB.N_ERP_CUST_ACCT_LOC_USE SITEUSE
     ON CAST(COALESCE(ST.INSTALL_SITE_LOCATION,-999) AS BIGINT)= SITEUSE.SK_SITE_USE_ID_INT 
    LEFT JOIN $$COMREFVWDB.N_PARTY NP
     ON COALESCE(ST.TXN_CR_PARTY_ID,-999) = NP.PARTY_SSOT_PARTY_ID_INT
     AND NP.SS_CODE IN ('CR_MODS','CR')
     AND COALESCE(NP.STATUS_CODE,'A')='A'
    LEFT JOIN $$COMREFVWDB.N_PARTY NPHQ
     ON COALESCE(ST.HQ_CR_PARTY_ID,-999) = NPHQ.PARTY_SSOT_PARTY_ID_INT
     AND NPHQ.SS_CODE IN ('CR_MODS','CR')
     AND COALESCE(NPHQ.STATUS_CODE,'A')='A'
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_ARCH ARCH
     ON ST.ARCHITECTURE_ID = ARCH.ARCHITECTURE_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_TECH TECH
     ON ST.TECHNOLOGY_ID = TECH.TECHNOLOGY_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_BIZ_SERVICES OFFER
     ON ST.OFFER_TYPE_ID = OFFER.BS_ID
    LEFT OUTER JOIN $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCWP
     ON NCWP.CEC_ID =ST.USER_ID 
     AND NCWP.END_TV_DATE='3500-01-01'
    INNER JOIN $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_ACV SMXSS
     ON SMXSS.SK_RTR_ATTRIBUTION_ID=ST.RTR_ATTRIBUTION_ID
     AND SMXSS.SK_ATTRIBUTION_ID_INT = ST.OA_ATTRIBUTION_ID
     AND SMXSS.SS_CD = ST.SS_CD
WHERE NOT EXISTS ( SEL 1 FROM $$NRTNCRVWDB.N_XAAS_SO_SBSCRPTN_ATTRBTN_NRT XOA
			  WHERE TRX.SO_SBSCRPTN_ITM_SLS_TRX_KEY = XOA.PARENT_SO_SBSCRP_ITMSLSTRX_KEY ) /* FOR STANDALONE XAAS LINES */


Post SQL : 



Target6 Name : WI_OPL_XXGCO_RTR_ATTRIB_CV4


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_OPL_XXGCO_RTR_ATTRIB_CV','D');


Source7 Name : SQ_WI_OPL_XXGCO_RTR_ATTRIB_CV5


Pre SQL : 



SQL Query : 
SELECT
     SMXSS.ATTR_PRDT_AS_NEW_OR_RNWL_KEY,
     ST.RTR_ATTRIBUTION_ID AS SK_RTR_ATTRIBUTION_ID,
     BKG_POS.PRODUCT_KEY AS ATTR_PRDT_KEY,
	 COALESCE(NSOL.SALES_ORDER_LINE_KEY,CAST(-7777 AS INTEGER)) AS SALES_ORDER_LINE_KEY,
	 COALESCE(NPHQ.PARTY_KEY,-999) AS HQ_CR_PRTY_KEY,
	 COALESCE(NP.PARTY_KEY,-999) AS TRANSACTION_CR_PARTY_KEY,
	 COALESCE( OFFER.NAME,'UNKNOWN' ) AS BK_DV_ATTR_PRDT_OFFER_TYPE_NAME,
	 COALESCE( TECH.NAME, 'UNKNOWN' ) AS BK_TECH_GROUP_ID,
	 COALESCE( ARCH.NAME, 'UNKNOWN' ) AS BK_AS_ARCHITECTURE_NAME,
	 COALESCE(NPC.ITEM_KEY,-999) AS COVERED_PRDT_KEY,
	 ST.ATTRIBUTED_QUANTITY AS ATTR_PRDT_QTY,
	 COALESCE(NULLIF(ST.ATTRIBUTED_PERCENTAGE,0), 0 ) AS ATTR_PCT,
	 COALESCE(ST.ATTRIBUTED_UNIT_NET_PRICE,0.0000) AS ATTR_NET_PRICE_LOCAL_AMT,
	 COALESCE(ST.ATTRIBUTED_EXT_NET_PRICE,0.0000) AS ATTR_EXTD_PRICE_LOCAL_AMT,
     COALESCE(ST.SALES_MOTION, 'UNKNOWN' ) SALES_MOTION_CD,
	 COALESCE(ST.SALES_MOTION_CONTEXT,'UNKNOWN') AS SALES_MOTION_CONTEXT_NAME,
	 COALESCE(SITEUSE.WIPS_SITE_USE_KEY, -999 ) AS ERP_CUST_ACCT_LOC_KEY,
	 -- COALESCE(SITEUSE.ERP_CUST_ACCOUNT_LOCATION_KEY, -999 ) AS ERP_CUST_ACCT_LOC_KEY,
	 COALESCE(ST.AS_TS_FLAG,'UNK') AS AS_TS_CD,
	 COALESCE( ST.LINE_REF_NUMBER,-999 ) AS SK_LINE_REF_NUM,
	 COALESCE(ST.TRX_ID,-999) AS SK_ERP_BKGS_TRX_ID,
	 COALESCE(ST.RENEW_CLE_ID,-999) AS SK_RENEW_CONTRACT_LINE_ID,
     COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-999) AS SK_AS_PARENT_INVENTORY_ITEM_ID,
     COALESCE(ST.ITEM_CATEGORIZATION,'UNKNOWN') AS ITEM_CATEGORY_NAME,
     COALESCE(ST.TRX_VERSION,-999) AS ERP_TRX_VERSION_INT,
     ST.SS_CD,
	 ST.OA_ATTRIBUTION_ID AS SK_ATTRIBUTION_ID_INT,
	 ST.ATTR_PRDT_CLASS_NAME,
	 ST.RENEWAL_REF_VALUE AS RENEWAL_REF_ID,
     ST.RENEWAL_REF_TYPE AS RENEWAL_REF_CD,
	 ST.REASON_CODE AS SMR_TAGGING_FAILURE_RSN_CD,
     ST.SALES_MOTION_TIMING AS SALES_MOTION_TIMING_CD,
     COALESCE(ST.MANUAL_OVERRIDE_FLAG,'N') AS MANUAL_OVERRIDE_ROLE, 
	 COALESCE(ST.SMR_SALES_VALUE, 0.000000 ) AS TOTAL_SERVICES_USD_AMT,
	 COALESCE(ST.SMR_ACV_AMOUNT, 0.000000 ) AS ACV_USD_AMT,
	 COALESCE(ST.SMR_TCV_AMOUNT, 0.000000 ) AS TCV_USD_AMT,
	 COALESCE(ST.LINE_EXTENDED_PRICE, 0.000000 ) AS EXTENDED_PRICE_USD_AMT,
	 COALESCE(NCWP.CISCO_WORKER_PARTY_KEY,-999) AS REQUESTING_CSCO_WRKR_PRTY_KEY,                   
     ST.CASE_NUMBER AS SLS_MTN_CORRECTION_CASE_NUM,                   
     ST.COMMENTS AS SLS_MTN_CORRECTION_CMNT,
     CURRENT_TIMESTAMP(0)  AS START_TV_DTM,
	 NPOA.ATTRIBUTED_PRODUCT_KEY AS OFFER_ATTRIB_PRDT_KEY,
	 ST.POS_TRANSACTION_ID_INT,
	 ST.ORDER_ORIGIN_CD,
COALESCE(ST.SK_TRX_ID_INT, -999) AS SK_TRX_ID_INT,
 ST.SK_OPL_HEADER_ID_INT,
 RENEWAL_ERP_REF_VALUE
    FROM ( SEL * FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV WHERE ORDER_ORIGIN_CD = 'DISTI-DSV' AND POS_TRANSACTION_ID_INT > 0 ) ST 
     LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
     ON ST.ERP_LINE_ID = NSOL.SK_SO_LINE_ID_INT
	 AND NSOL.SS_CODE = 'CG'
	/*INNER JOIN $$COMREFVWDB.N_PRODUCT NPA
     ON ST.ENTERPRISE_SKU_INV_ITM_ID = NPA.SK_INVENTORY_ITEM_ID_INT*/
	INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS  
     ON ST.POS_TRANSACTION_ID_INT = BKG_POS.BK_POS_TRANSACTION_ID_INT
	INNER JOIN ( SEL * FROM $$SLSORDVWDB.N_POS_TRX_LINE_OFFER_ATRBTN WHERE BK_OFFER_ATTRIBUTION_ID_INT > 0 ) NPOA   /* for hard exception for OA records WITH OA ID */
     ON ST.POS_TRANSACTION_ID_INT = NPOA.TOP_SKU_POS_TRX_ID_INT 
	 AND COALESCE(ST.OA_ATTRIBUTION_ID,-9999) = NPOA.BK_OFFER_ATTRIBUTION_ID_INT
	 /*AND NPA.ITEM_KEY=NPOA.ATTRIBUTED_PRODUCT_KEY*/
	LEFT JOIN $$COMREFVWDB.N_PRODUCT NPC
     ON COALESCE(ST.COVERED_PRD_INV_ITM_ID,-1012624) = NPC.SK_INVENTORY_ITEM_ID_INT     
    LEFT JOIN $$COMREFVWDB.N_PRODUCT NPP
     ON COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-1012624) = NPP.SK_INVENTORY_ITEM_ID_INT
	 LEFT JOIN $$COMREFVWDB.N_WIPS_CUSTOMER_SITE_TV SITEUSE
	ON CAST(COALESCE(ST.INSTALL_SITE_LOCATION,-999) AS BIGINT) = SITEUSE.BK_SITE_USE_ID_INT
   /* LEFT JOIN $$COMREFVWDB.N_ERP_CUST_ACCT_LOC_USE SITEUSE
     ON CAST(COALESCE(ST.INSTALL_SITE_LOCATION,-999) AS BIGINT) = SITEUSE.SK_SITE_USE_ID_INT */
    LEFT JOIN $$COMREFVWDB.N_PARTY NP
     ON COALESCE(ST.TXN_CR_PARTY_ID,-999) = NP.PARTY_SSOT_PARTY_ID_INT
     AND NP.SS_CODE IN ('CR_MODS','CR')   
     AND COALESCE(NP.STATUS_CODE,'A')='A'   
    LEFT JOIN $$COMREFVWDB.N_PARTY NPHQ
     ON COALESCE(ST.HQ_CR_PARTY_ID,-999) = NPHQ.PARTY_SSOT_PARTY_ID_INT
     AND NPHQ.SS_CODE IN ('CR_MODS','CR')       
     AND COALESCE(NPHQ.STATUS_CODE,'A')='A'     
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_ARCH ARCH
     ON ST.ARCHITECTURE_ID = ARCH.ARCHITECTURE_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_TECH TECH
     ON ST.TECHNOLOGY_ID = TECH.TECHNOLOGY_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_BIZ_SERVICES OFFER
     ON ST.OFFER_TYPE_ID = OFFER.BS_ID
    LEFT OUTER JOIN $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCWP
     ON NCWP.CEC_ID||'@cisco.com' =ST.USER_ID 
     AND NCWP.END_TV_DATE='3500-01-01'
    INNER JOIN $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_ACV SMXSS
     ON SMXSS.SK_RTR_ATTRIBUTION_ID=ST.RTR_ATTRIBUTION_ID
     AND SMXSS.SK_ATTRIBUTION_ID_INT = ST.OA_ATTRIBUTION_ID
     AND SMXSS.SS_CD = ST.SS_CD
WHERE EXISTS ( SEL 1 FROM $$SLSORDVWDB.N_POS_TRX_LINE_OFFER_ATRBTN NPOA  WHERE ST.POS_TRANSACTION_ID_INT = NPOA.TOP_SKU_POS_TRX_ID_INT )


Post SQL : 



Target7 Name : WI_OPL_XXGCO_RTR_ATTRIB_CV5


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_OPL_XXGCO_RTR_ATTRIB_CV','D');


Source8 Name : SQ_WI_OPL_XXGCO_RTR_ATTRIB_CV6


Pre SQL : 



SQL Query : 
SELECT
     SMXSS.ATTR_PRDT_AS_NEW_OR_RNWL_KEY,
     ST.RTR_ATTRIBUTION_ID AS SK_RTR_ATTRIBUTION_ID,
     NPA.ITEM_KEY AS ATTR_PRDT_KEY,
	 COALESCE(NSOL.SALES_ORDER_LINE_KEY,CAST(-7777 AS INTEGER)) AS SALES_ORDER_LINE_KEY,
	 COALESCE(NPHQ.PARTY_KEY,-999) AS HQ_CR_PRTY_KEY,
	 COALESCE(NP.PARTY_KEY,-999) AS TRANSACTION_CR_PARTY_KEY,
	 COALESCE( OFFER.NAME,'UNKNOWN' ) AS BK_DV_ATTR_PRDT_OFFER_TYPE_NAME,
	 COALESCE( TECH.NAME, 'UNKNOWN' ) AS BK_TECH_GROUP_ID,
	 COALESCE( ARCH.NAME, 'UNKNOWN' ) AS BK_AS_ARCHITECTURE_NAME,
	 COALESCE(NPC.ITEM_KEY,-999) AS COVERED_PRDT_KEY,
	 ST.ATTRIBUTED_QUANTITY AS ATTR_PRDT_QTY,
	 COALESCE(NULLIF(ST.ATTRIBUTED_PERCENTAGE,0), 0 ) AS ATTR_PCT,
	 COALESCE(ST.ATTRIBUTED_UNIT_NET_PRICE,0.0000) AS ATTR_NET_PRICE_LOCAL_AMT,
	 COALESCE(ST.ATTRIBUTED_EXT_NET_PRICE,0.0000) AS ATTR_EXTD_PRICE_LOCAL_AMT,
     COALESCE(ST.SALES_MOTION, 'UNKNOWN' ) SALES_MOTION_CD,
	 COALESCE(ST.SALES_MOTION_CONTEXT,'UNKNOWN') AS SALES_MOTION_CONTEXT_NAME,
	 COALESCE(SITEUSE.WIPS_SITE_USE_KEY, -999 ) AS ERP_CUST_ACCT_LOC_KEY, --COALESCE(SITEUSE.ERP_CUST_ACCOUNT_LOCATION_KEY, -999 ) AS ERP_CUST_ACCT_LOC_KEY,
	 COALESCE(ST.AS_TS_FLAG,'UNK') AS AS_TS_CD,
	 COALESCE( ST.LINE_REF_NUMBER,-999 ) AS SK_LINE_REF_NUM,
	 COALESCE(ST.TRX_ID,-999) AS SK_ERP_BKGS_TRX_ID,
	 COALESCE(ST.RENEW_CLE_ID,-999) AS SK_RENEW_CONTRACT_LINE_ID,
     COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-999) AS SK_AS_PARENT_INVENTORY_ITEM_ID,
     COALESCE(ST.ITEM_CATEGORIZATION,'UNKNOWN') AS ITEM_CATEGORY_NAME,
     COALESCE(ST.TRX_VERSION,-999) AS ERP_TRX_VERSION_INT,
     ST.SS_CD,
	 ST.OA_ATTRIBUTION_ID AS SK_ATTRIBUTION_ID_INT,
	 ST.ATTR_PRDT_CLASS_NAME,
	 ST.RENEWAL_REF_VALUE AS RENEWAL_REF_ID,
     ST.RENEWAL_REF_TYPE AS RENEWAL_REF_CD,
	 ST.REASON_CODE AS SMR_TAGGING_FAILURE_RSN_CD,
     ST.SALES_MOTION_TIMING AS SALES_MOTION_TIMING_CD,
     COALESCE(ST.MANUAL_OVERRIDE_FLAG,'N') AS MANUAL_OVERRIDE_ROLE, 
	 COALESCE(ST.SMR_SALES_VALUE, 0.000000 ) AS TOTAL_SERVICES_USD_AMT,
	 COALESCE(ST.SMR_ACV_AMOUNT, 0.000000 ) AS ACV_USD_AMT,
	 COALESCE(ST.SMR_TCV_AMOUNT, 0.000000 ) AS TCV_USD_AMT,
	 COALESCE(ST.LINE_EXTENDED_PRICE, 0.000000 ) AS EXTENDED_PRICE_USD_AMT,
	 COALESCE(NCWP.CISCO_WORKER_PARTY_KEY,-999) AS REQUESTING_CSCO_WRKR_PRTY_KEY,                   
     ST.CASE_NUMBER AS SLS_MTN_CORRECTION_CASE_NUM,                   
     ST.COMMENTS AS SLS_MTN_CORRECTION_CMNT,
     CURRENT_TIMESTAMP(0)  AS START_TV_DTM,
	 BKG_POS.PRODUCT_KEY AS OFFER_ATTRIB_PRDT_KEY,
	 ST.POS_TRANSACTION_ID_INT,
	 ST.ORDER_ORIGIN_CD,
COALESCE(ST.SK_TRX_ID_INT, -999) AS SK_TRX_ID_INT,
 ST.SK_OPL_HEADER_ID_INT,
 RENEWAL_ERP_REF_VALUE
    FROM ( SEL * FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV WHERE ORDER_ORIGIN_CD = 'DISTI-DSV'  AND POS_TRANSACTION_ID_INT > 0 ) ST 
	LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
     ON ST.ERP_LINE_ID = NSOL.SK_SO_LINE_ID_INT
	 AND NSOL.SS_CODE = 'CG'
    INNER JOIN $$COMREFVWDB.N_PRODUCT NPA
     ON ST.ENTERPRISE_SKU_INV_ITM_ID = NPA.SK_INVENTORY_ITEM_ID_INT
	INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS  
     ON ST.POS_TRANSACTION_ID_INT = BKG_POS.BK_POS_TRANSACTION_ID_INT
	 LEFT JOIN $$COMREFVWDB.N_PRODUCT NPC
     ON COALESCE(ST.COVERED_PRD_INV_ITM_ID,-1012624) = NPC.SK_INVENTORY_ITEM_ID_INT     
    LEFT JOIN $$COMREFVWDB.N_PRODUCT NPP
     ON COALESCE(ST.AS_PARENT_SKU_INV_ITM_ID,-1012624) = NPP.SK_INVENTORY_ITEM_ID_INT
	 LEFT JOIN $$COMREFVWDB.N_WIPS_CUSTOMER_SITE_TV SITEUSE
     ON CAST(COALESCE(ST.INSTALL_SITE_LOCATION,-999) AS BIGINT) = SITEUSE.BK_SITE_USE_ID_INT
   /* LEFT JOIN $$COMREFVWDB.N_ERP_CUST_ACCT_LOC_USE SITEUSE
     ON CAST(COALESCE(ST.INSTALL_SITE_LOCATION,-999) AS BIGINT)= SITEUSE.SK_SITE_USE_ID_INT */
    LEFT JOIN $$COMREFVWDB.N_PARTY NP
     ON COALESCE(ST.TXN_CR_PARTY_ID,-999) = NP.PARTY_SSOT_PARTY_ID_INT
     AND NP.SS_CODE IN ('CR_MODS','CR')  
     AND COALESCE(NP.STATUS_CODE,'A')='A'
    LEFT JOIN $$COMREFVWDB.N_PARTY NPHQ
     ON COALESCE(ST.HQ_CR_PARTY_ID,-999) = NPHQ.PARTY_SSOT_PARTY_ID_INT
     AND NPHQ.SS_CODE IN ('CR_MODS','CR')  
     AND COALESCE(NPHQ.STATUS_CODE,'A')='A'
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_ARCH ARCH
     ON ST.ARCHITECTURE_ID = ARCH.ARCHITECTURE_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_TECH TECH
     ON ST.TECHNOLOGY_ID = TECH.TECHNOLOGY_ID
    LEFT JOIN $$ETLVWDB.EL_XXCAS_SLIMCS_BIZ_SERVICES OFFER
     ON ST.OFFER_TYPE_ID = OFFER.BS_ID
    LEFT OUTER JOIN $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCWP
     ON NCWP.CEC_ID||'@cisco.com' =ST.USER_ID 
     AND NCWP.END_TV_DATE='3500-01-01'
    INNER JOIN $$ETLVWDB.SM_ATTR_PRDT_NEW_RNWL_ACV SMXSS
     ON SMXSS.SK_RTR_ATTRIBUTION_ID=ST.RTR_ATTRIBUTION_ID
     AND SMXSS.SK_ATTRIBUTION_ID_INT = ST.OA_ATTRIBUTION_ID
     AND SMXSS.SS_CD = ST.SS_CD
WHERE NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.N_POS_TRX_LINE_OFFER_ATRBTN NPOA WHERE ST.POS_TRANSACTION_ID_INT = NPOA.TOP_SKU_POS_TRX_ID_INT)


Post SQL : 



Target8 Name : WI_OPL_XXGCO_RTR_ATTRIB_CV6


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_OPL_XXGCO_RTR_ATTRIB_CV','D');
CREATE MULTISET VOLATILE TABLE SOL_ENRICHED
AS
(SELECT SOL.SALES_ORDER_LINE_KEY,CASE
WHEN SOL.PERIODIC_BILLING_START_DT NOT IN ('1900-01-01' , '3500-01-01') 
AND SOL.PERIODIC_BILLING_START_DT IS NOT NULL
AND SOL.PERIODIC_BILLING_START_DT >= '2000-01-01'
THEN SOL.PERIODIC_BILLING_START_DT
END 
AS PB_START_DT,
CASE
WHEN SOL.PERIODIC_BILLING_END_DT NOT IN ('1900-01-01' , '3500-01-01')
AND SOL.PERIODIC_BILLING_END_DT IS NOT NULL
AND SOL.PERIODIC_BILLING_END_DT > SOL.PERIODIC_BILLING_START_DT
THEN SOL.PERIODIC_BILLING_END_DT
END 
AS PB_END_DT,
CAST((PB_END_DT - PB_START_DT) AS DECIMAL(15,6)) * 12 /365
AS PB_CONTRACT_DURATION,
CASE
WHEN SOL.RU_SERVICE_CONTRACT_START_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') 
AND SOL.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL
AND SOL.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
THEN CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)
END 
AS SOL_CONTRACT_START_DT,
CASE
WHEN SOL.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
AND SOL.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL
AND SOL.RU_SERVICE_CONTRACT_END_DTM > SOL.RU_SERVICE_CONTRACT_START_DTM
AND CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
THEN CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE)
END 
AS SOL_CONTRACT_END_DT,
CAST((SOL_CONTRACT_END_DT - SOL_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12 /365
AS DV_SOL_CONTRACT_DURATION,
CASE WHEN SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <> 0 AND SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <= 240 THEN  SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT  END 
AS SOLV1_CONTRACT_DURATION,
CASE WHEN P.PRDT_SETUP_CLASSIFICATION_CD IN ('SOFTWARE') THEN 
(CASE          
WHEN P.PRICING_UNIT_NAME = 'YEAR'   THEN P.PRICING_UNIT_DURATION_INT * 12
WHEN P.PRICING_UNIT_NAME = 'MONTHS' THEN P.PRICING_UNIT_DURATION_INT
WHEN P.PRICING_UNIT_NAME = 'DAYS'   THEN (CAST(P.PRICING_UNIT_DURATION_INT AS DECIMAL(15,6)) * 12)/365
END)
ELSE NULL
END AS PID_TO_TERM_ATTR1,
CASE WHEN PID_TO_TERM_ATTR1 IS NULL AND P.BK_PRODUCT_ID = 'XCAT-ELA-5Y-ENG' THEN  60
ELSE PID_TO_TERM_ATTR1
END AS PID_TO_TERM_ATT,
CASE 
WHEN SOL.RU_SERVICE_CONTRACT_START_DTM NOT IN ('3500-01-01 00:00:00') 
AND SOL.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL  
AND SOL.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00' 
THEN CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)
END
AS BKGS_CONTRACT_START_DT,
CASE 
WHEN SOL.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') 
AND SOL.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL  
AND SOL.RU_SERVICE_CONTRACT_END_DTM > SOL.RU_SERVICE_CONTRACT_START_DTM 
AND CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
THEN CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE)
END
AS BKGS_CONTRACT_END_DT,
CASE WHEN BKGS_CONTRACT_START_DT IS NOT NULL AND BKGS_CONTRACT_END_DT IS NOT NULL THEN 
CAST((BKGS_CONTRACT_END_DT - BKGS_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12/365
WHEN DV_SOL_CONTRACT_DURATION IS NOT NULL AND  DV_SOL_CONTRACT_DURATION > 0 AND DV_SOL_CONTRACT_DURATION <= 240   THEN DV_SOL_CONTRACT_DURATION
END 
AS DV_BKGS_CONTRACT_DURATION
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE SOL 
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = SOL.PRODUCT_KEY)
LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV SOLV1 
ON ( SOL.SALES_ORDER_LINE_KEY = SOLV1.SALES_ORDER_LINE_KEY AND SOLV1.SS_CODE IN ('CG','OPL') AND SOLV1.END_TV_DTM = '3500-01-01 00:00:00' )
WHERE SOL.SS_CODE IN ('CG','OPL')
) WITH DATA AND STATS PRIMARY INDEX (SALES_ORDER_LINE_KEY) ON COMMIT PRESERVE ROWS;

COLLECT STATISTICS COLUMN(SALES_ORDER_LINE_KEY)ON SOL_ENRICHED;

CREATE MULTISET VOLATILE TABLE SVC_ENRICHED
AS
(
SELECT SALES_ORDER_LINE_KEY,
CASE 
WHEN SVC.SERVICE_CONTRACT_START_DTM NOT IN ( '3500-01-01 00:00:00')
AND SVC.SERVICE_CONTRACT_START_DTM IS NOT NULL 
AND SVC.SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
THEN CAST(SVC.SERVICE_CONTRACT_START_DTM AS DATE)
END
AS SVC_CONTRACT_START_DT,
CASE 
WHEN SVC.SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
AND SVC.SERVICE_CONTRACT_END_DTM IS NOT NULL
AND SVC.SERVICE_CONTRACT_END_DTM > SVC.SERVICE_CONTRACT_START_DTM
AND CAST(SVC.SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
THEN CAST(SVC.SERVICE_CONTRACT_END_DTM AS DATE)
END
AS SVC_CONTRACT_END_DT,
CAST((SVC_CONTRACT_END_DT - SVC_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12 /365
AS DV_SVC_CONTRACT_DURATION
FROM
(
SELECT
CNTRCT.SERVICE_SOL_KEY AS SALES_ORDER_LINE_KEY
,MIN(CAST (CNTRCT.CONTRACT_LINE_START_DT AS TIMESTAMP(0))) AS SERVICE_CONTRACT_START_DTM
,MAX(CAST(CNTRCT.CONTRACT_LINE_END_DT AS TIMESTAMP(0))) AS SERVICE_CONTRACT_END_DTM
FROM 
$$SERVICEVWDB.N_SRVC_CNTRCT_LN_HANA_SRCD  CNTRCT
WHERE CNTRCT.SERVICE_SOL_KEY > 0 
AND  
(  CNTRCT.CONTRACT_LINE_STYLE_ID_INT =  9 AND  SERVICE_SOL_LINKAGE_LOGIC_NAME LIKE '%OKC%' 
OR CNTRCT.CONTRACT_LINE_STYLE_ID_INT =  7 )
AND CNTRCT.CONTRACT_LINE_STATUS_NAME <> 'TERMINATED'
AND NOT EXISTS  (
SELECT 1 FROM  $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH
WHERE  1=1
AND SFH.ITEM_KEY = CNTRCT.SERVICE_PRODUCT_KEY
AND SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN'  AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
AND SFH.BK_SERVICE_CATEGORY_ID = 'ADVANCED SERVICES' AND SFH.ALLOCATION_PERCENTAGE = 1
)
GROUP BY SERVICE_SOL_KEY ) SVC
) WITH DATA AND STATS PRIMARY INDEX (SALES_ORDER_LINE_KEY) ON COMMIT PRESERVE ROWS;

COLLECT STATISTICS COLUMN(SALES_ORDER_LINE_KEY)ON SVC_ENRICHED;

CREATE MULTISET VOLATILE TABLE ERP_ENRICH_DATE
AS
(SELECT SOL.SALES_ORDER_LINE_KEY,CASE
WHEN PB_CONTRACT_DURATION IS NOT NULL AND PB_CONTRACT_DURATION > 0 THEN (CASE WHEN CAST(SOL1.EDW_CREATE_DATETIME AS DATE) < '2020-08-16' THEN PB_START_DT
WHEN CAST(SOL1.EDW_CREATE_DATETIME AS DATE) >= '2020-08-16' AND DV_SOL_CONTRACT_DURATION > 0 THEN SOL_CONTRACT_START_DT END)
WHEN (DV_SVC_CONTRACT_DURATION IS NOT NULL AND DV_SVC_CONTRACT_DURATION > 0) THEN SVC_CONTRACT_START_DT
WHEN (DV_SOL_CONTRACT_DURATION IS NOT NULL AND DV_SOL_CONTRACT_DURATION > 0) THEN SOL_CONTRACT_START_DT
WHEN (SOLV1_CONTRACT_DURATION IS NOT NULL AND SOLV1_CONTRACT_DURATION > 0) THEN 
COALESCE(SOL_CONTRACT_START_DT,SO.RU_CISCO_BOOKED_DATETIME,PD.PROCESS_DATE)
WHEN (SOL1.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL AND SOL1.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL) THEN SOL1.RU_SERVICE_CONTRACT_START_DTM
ELSE COALESCE(SO.RU_CISCO_BOOKED_DATETIME,PD.PROCESS_DATE)
END
AS NEW_SERVICE_CONTRACT_START_DTM,
CASE
WHEN PB_CONTRACT_DURATION IS NOT NULL AND PB_CONTRACT_DURATION > 0 THEN (CASE WHEN CAST(SOL1.EDW_CREATE_DATETIME AS DATE) < '2020-08-16' THEN PB_CONTRACT_DURATION
WHEN CAST(SOL1.EDW_CREATE_DATETIME AS DATE) >= '2020-08-16' AND DV_SOL_CONTRACT_DURATION > 0 THEN DV_SOL_CONTRACT_DURATION END)
WHEN (DV_SVC_CONTRACT_DURATION IS NOT NULL AND DV_SVC_CONTRACT_DURATION > 0) THEN DV_SVC_CONTRACT_DURATION
WHEN (DV_SOL_CONTRACT_DURATION IS NOT NULL AND DV_SOL_CONTRACT_DURATION > 0) THEN DV_SOL_CONTRACT_DURATION 
WHEN (SOLV1_CONTRACT_DURATION IS NOT NULL AND SOLV1_CONTRACT_DURATION > 0) THEN SOLV1_CONTRACT_DURATION 
WHEN (DV_BKGS_CONTRACT_DURATION IS NOT NULL AND DV_BKGS_CONTRACT_DURATION > 0) THEN DV_BKGS_CONTRACT_DURATION 
WHEN COALESCE(PID_TO_TERM_ATT,0) > 0 THEN PID_TO_TERM_ATT 
ELSE  12
END
AS LKP_CONTRACT_DURATION,
CASE WHEN LKP_CONTRACT_DURATION > 0 AND LKP_CONTRACT_DURATION <=1 THEN 1 
ELSE LKP_CONTRACT_DURATION 
END AS NEW_CONTRACT_DURATION,
CASE 
WHEN FLOOR(NEW_CONTRACT_DURATION) = CEIL(NEW_CONTRACT_DURATION)
THEN ADD_MONTHS(NEW_SERVICE_CONTRACT_START_DTM, CAST(NEW_CONTRACT_DURATION AS INTEGER)) - 1
ELSE NEW_SERVICE_CONTRACT_START_DTM + (ROUND((NEW_CONTRACT_DURATION / 12.000000) * 365))
END
AS NEW_SERVICE_CONTRACT_END_DTM
FROM SOL_ENRICHED SOL
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE SOL1
ON SOL.SALES_ORDER_LINE_KEY=SOL1.SALES_ORDER_LINE_KEY
AND SOL1.SS_CODE IN ('CG','OPL')
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER SO
ON SOL1.SALES_ORDER_KEY=SO.SALES_ORDER_KEY
LEFT JOIN SVC_ENRICHED SVC
ON (SVC.SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY)
CROSS JOIN $$ETLVWDB.BKG_PROCESS_DT_CNTRL PD)
WITH DATA AND STATS PRIMARY INDEX(SALES_ORDER_LINE_KEY) ON COMMIT PRESERVE ROWS;

COLLECT STATISTICS COLUMN(SALES_ORDER_LINE_KEY)ON ERP_ENRICH_DATE;

CREATE MULTISET VOLATILE TABLE XAAS_ENRICHED
AS 
(SELECT TSL.SO_SBSCRPTN_ITM_SLS_TRX_KEY,
TSL.MINOR_LN_EXAAS_SUBSCR_SOL_KEY
,TSL.RU_SERVICE_CONTRACT_START_DTM 
,TSL.RU_SERVICE_CONTRACT_END_DTM   
,TSL.DV_CONTRACT_DURATION    
,'N' AS XCAT_FLAG
,'N' AS ACV_POLICY_FLG,
-- SUB look up
CASE WHEN (SUB.TERM_START_DT >='2000-01-01' AND SUB.TERM_START_DT <> '3500-01-01') THEN SUB.TERM_START_DT END
AS SUB_TERM_START_DT,
CASE WHEN (SUB.TERM_END_DT <> '1900-01-01' AND SUB.TERM_END_DT <> '3500-01-01' AND SUB.TERM_END_DT <= Add_Months(Current_Date,240) ) THEN SUB.TERM_END_DT END
AS SUB_TERM_END_DT,
CASE WHEN (SUB.SUBSCRIPTION_END_DT <> '1900-01-01' AND SUB.SUBSCRIPTION_END_DT <> '3500-01-01' AND SUB.SUBSCRIPTION_END_DT <= Add_Months(Current_Date,240) ) THEN SUB.SUBSCRIPTION_END_DT END 
AS SUB_END_DT,
SUB.INITIAL_TERM_MONTHS_CNT AS SUB_INITIAL_TERM,
SUB.RENEWAL_TERM_MONTHS_CNT AS SUB_RENEWAL_TERM,
SUB.SUBSCRIPTION_RENEW_CNT AS SUB_RENEWAL_CNT,
CASE WHEN SUB_RENEWAL_CNT > 0 THEN SUB_RENEWAL_TERM ELSE SUB_INITIAL_TERM END AS SUB_CURRENT_TERM,
-- TSL look up
TSL.BK_SALES_ORDER_TYPE_CD AS TSL_ORDER_TYPE,
TSL.BK_SALES_ORDER_SELL_TYPE_CD AS TSL_SELL_TYPE,
TSL.ACTION_CD AS TSL_ACTION_CODE,
CASE WHEN TSL.INITIAL_TERM_DUR_MTHS_CNT <> -999 AND TSL.INITIAL_TERM_DUR_MTHS_CNT <> 0  AND  TSL.INITIAL_TERM_DUR_MTHS_CNT <= 240 THEN TSL.INITIAL_TERM_DUR_MTHS_CNT END
AS TSL_INITIAL_TERM,
CASE WHEN TSL.RENEWAL_TERM_MTHS_CNT <> -999 AND TSL.RENEWAL_TERM_MTHS_CNT <=240 THEN TSL.RENEWAL_TERM_MTHS_CNT ELSE 0 END 
AS TSL_RENEWAL_TERM,
TSL.RENEWAL_CNT AS TSL_RENEWAL_CNT,
CASE WHEN TSL_RENEWAL_CNT > 0  THEN Coalesce(SUB_RENEWAL_TERM, TSL_RENEWAL_TERM) ELSE Coalesce(SUB_INITIAL_TERM, TSL_INITIAL_TERM) END
AS TSL_CURRENT_TERM,
Round((Cast(Coalesce(TSL_INITIAL_TERM,0) AS DECIMAL(15,6)) / 12) * 365)
AS TSL_INITIAL_DAYS,
Round((Cast(Coalesce(TSL_RENEWAL_TERM,0) AS DECIMAL(15,6)) / 12) * 365)
AS TSL_RENEWAL_DAYS,
Round((Cast(Coalesce(TSL_CURRENT_TERM, 0) AS DECIMAL(15,6)) / 12) * 365)
AS TSL_CURRENT_TERM_DAYS,
TSL_INITIAL_DAYS + (Coalesce(TSL_RENEWAL_CNT, 0) * TSL_RENEWAL_DAYS)
AS TSL_TOTAL_DAYS,
CASE WHEN TSL.BOOKING_TERM_MONTHS_CNT <> 0 AND NOT(TSL_ORDER_TYPE IN ('REPLACE') AND TSL_ACTION_CODE IN ('REMOVE', 'CANCEL') )
THEN TSL.BOOKING_TERM_MONTHS_CNT END 
AS TSL_BOOKING_TERM,
Round((Cast(Coalesce(TSL_BOOKING_TERM,0) AS DECIMAL(15,6)) / 12) * 365)
AS TSL_BOOKING_DAYS,
CASE 
WHEN TSL_ORDER_TYPE IN ('REPLACE') AND TSL_ACTION_CODE NOT IN ('REMOVE', 'CANCEL') THEN 0
ELSE Coalesce(TSL.FULFILLMENT_TERM_DAYS_CNT, 0) END AS TSL_FULFILLMENT_DAYS,
CASE 
WHEN TSL_FULFILLMENT_DAYS < TSL_CURRENT_TERM_DAYS THEN (TSL_CURRENT_TERM_DAYS - TSL_FULFILLMENT_DAYS)
WHEN TSL_FULFILLMENT_DAYS >= TSL_CURRENT_TERM_DAYS AND TSL_FULFILLMENT_DAYS < TSL_TOTAL_DAYS THEN (TSL_TOTAL_DAYS - TSL_FULFILLMENT_DAYS)
WHEN TSL_FULFILLMENT_DAYS >= TSL_CURRENT_TERM_DAYS AND TSL_FULFILLMENT_DAYS >= TSL_TOTAL_DAYS THEN 0 END AS TSL_REMAINING_DAYS,
COALESCE(CASE WHEN TSL_REMAINING_DAYS > 0 
THEN Cast(TSL_REMAINING_DAYS AS DECIMAL(15,6)) * 12 / 365 END ,0) AS TSL_REMAINING_TERM,
COALESCE(CASE WHEN TSL_CURRENT_TERM_DAYS >= TSL_REMAINING_DAYS
THEN (TSL_CURRENT_TERM_DAYS - TSL_REMAINING_DAYS) END ,0) AS DV_FULFILLMENT_DAYS,
-- TSL Contract Duratiom
CASE 
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM >= TSL_REMAINING_TERM THEN TSL_BOOKING_TERM
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM < TSL_REMAINING_TERM  AND TSL_FULFILLMENT_DAYS = 0 THEN TSL_BOOKING_TERM
WHEN TSL_REMAINING_TERM >= 0 AND TSL_FULFILLMENT_DAYS > 0 THEN TSL_REMAINING_TERM
ELSE TSL_CURRENT_TERM
END
AS TSL_CONTRACT_DURATION,
-- Look up duration
CASE
WHEN TSL_CONTRACT_DURATION >= 0 THEN TSL_CONTRACT_DURATION
ELSE TSL.DV_CONTRACT_DURATION    
END
AS LKP_CONTRACT_DURATION,
-- Subscription Effective Date
CASE 
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM >= TSL_REMAINING_TERM 
THEN (SUB_TERM_START_DT + DV_FULFILLMENT_DAYS)
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM < TSL_REMAINING_TERM AND TSL_FULFILLMENT_DAYS = 0 
THEN (SUB_TERM_END_DT - TSL_BOOKING_DAYS)
WHEN TSL_REMAINING_TERM > 0 AND TSL_FULFILLMENT_DAYS > 0 
THEN  (SUB_TERM_START_DT + DV_FULFILLMENT_DAYS)
WHEN TSL_REMAINING_TERM = 0 AND SUB_END_DT >= SUB_TERM_END_DT THEN SUB_END_DT 
ELSE  SUB_TERM_START_DT
END AS SUB_EFFECTIVE_DATE,
CASE WHEN (NSOL1.CUST_EXPECTED_START_DT >= '2000-01-01' 
AND NSOL1.CUST_EXPECTED_START_DT <> '3500-01-01') THEN NSOL1.CUST_EXPECTED_START_DT END
AS SOL_REQUESTED_START_DT
,BOOKED_DT AS DV_BOOKED_DT
FROM(SELECT 
ROUND(CASE 
WHEN NXSSIS.ACQUISITION_ORDER_ORIGIN_CD IN 'ACQ-BSFT' AND NXSSIS.BOOKING_TERM_MONTHS_CNT>0 THEN NXSSIS.BOOKING_TERM_MONTHS_CNT
WHEN NXSSIS.ACQUISITION_ORDER_ORIGIN_CD IN 'ACQ-BSFT' AND NXSSIS.BOOKING_TERM_MONTHS_CNT <=0 AND NXSSIS.DV_SERVICE_CONTRACT_START_DT IS NOT NULL AND NXSSIS.DV_SERVICE_CONTRACT_END_DT IS NOT NULL THEN CAST(((NXSSIS.DV_SERVICE_CONTRACT_END_DT-NXSSIS.DV_SERVICE_CONTRACT_START_DT+1)/365)*12 as decimal(15,6))
WHEN NXSSIS.BK_SALES_ORDER_TYPE_CD = 'AUTO-RENEWAL' THEN NXSSIS.RENEWAL_TERM_MTHS_CNT 
WHEN NXSSIS.INITIAL_TERM_DUR_MTHS_CNT > 0 THEN  NXSSIS.INITIAL_TERM_DUR_MTHS_CNT
WHEN ( NP.BK_PRODUCT_ID LIKE 'SWOA%' OR  NP.BK_PRODUCT_ID LIKE '%ADJ%' ) AND NP.BK_PRODUCT_ID NOT LIKE 'SWOA-MX%' THEN NULL
ELSE 
CASE 
WHEN NP.PRICING_UNIT_NAME = 'YEAR' THEN NP.PRICING_UNIT_DURATION_INT * 12 
WHEN NP.PRICING_UNIT_NAME = 'MONTHS' THEN NP.PRICING_UNIT_DURATION_INT 
WHEN NP.PRICING_UNIT_NAME = 'DAYS' THEN  CAST(((NP.PRICING_UNIT_DURATION_INT*12(FLOAT))/365) AS DECIMAL(15,6) )
WHEN EL.BIZ_DEF_TERM IS NOT NULL THEN EL.BIZ_DEF_TERM
WHEN EL.DURATION IS NOT NULL THEN EL.DURATION
ELSE NULL
END
END) DV_CONTRACT_DURATION,NXSSIS.* FROM 
$$NRTNCRVWDB.N_XAAS_SO_SBCR_ITM_STRX_NRT_TV NXSSIS
INNER JOIN $$COMREFVWDB.N_PRODUCT NP 
ON (NP.ITEM_KEY = NXSSIS.SUBSCRIPTION_PRODUCT_KEY) 
LEFT OUTER JOIN 
(SELECT SKU,INVENTORY_ITEM_ID,DURATION,BIZ_DEF_TERM FROM $$ETLVWDB.EL_CG1_XXCFIR_PROD_SUBSCR_SKU WHERE END_DATE IS NULL)EL 
ON NP.BK_PRODUCT_ID=EL.SKU
LEFT JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF 
ON NP.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID 
WHERE  NXSSIS.END_TV_DTM=CAST('3500-01-01 00:00:00' AS TIMESTAMP(0)))TSL
LEFT JOIN $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT NSOL
ON NSOL.SALES_ORDER_LINE_KEY=TSL.MINOR_LN_EXAAS_SUBSCR_SOL_KEY 
LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL1
ON NSOL1.SK_OPL_LINE_ID_INT=NSOL.SK_OPL_LINE_ID_INT
AND NSOL1.SS_CODE IN ('CG','OPL')
LEFT JOIN (
SELECT * FROM $$EXAASVWDB.N_EXAAS_SUBSCRIPTION_TV
WHERE SUBSCRIPTION_REF_ID <> 'UNKNOWN'
QUALIFY Row_Number() Over (PARTITION BY
SUBSCRIPTION_REF_ID,
BK_EXAAS_SUBSCRIPTION_NUM,
SUBSCRIPTION_RENEW_CNT
ORDER BY SUBSCRIPTION_END_DT DESC) = 1
) SUB
ON ( SUB.SUBSCRIPTION_REF_ID = TSL.SUBSCRIPTION_REFERENCE_ID
AND SUB.BK_EXAAS_SUBSCRIPTION_NUM = TSL.SRC_RPTD_SBSCRPTN_CD 
AND SUB.SUBSCRIPTION_RENEW_CNT = TSL.RENEWAL_CNT 
))WITH DATA AND STATS PRIMARY INDEX (SO_SBSCRPTN_ITM_SLS_TRX_KEY) ON COMMIT PRESERVE ROWS ;

COLLECT STATISTICS COLUMN(SO_SBSCRPTN_ITM_SLS_TRX_KEY)ON XAAS_ENRICHED;
COLLECT STATISTICS COLUMN(MINOR_LN_EXAAS_SUBSCR_SOL_KEY)ON XAAS_ENRICHED;

CREATE MULTISET VOLATILE TABLE XAAS_ENRICH_DATE
AS (
SELECT
SO_SBSCRPTN_ITM_SLS_TRX_KEY
,MINOR_LN_EXAAS_SUBSCR_SOL_KEY
,XAAS.RU_SERVICE_CONTRACT_START_DTM 
,XAAS.RU_SERVICE_CONTRACT_END_DTM   
,Cast(DV_CONTRACT_DURATION AS DECIMAL(18,0)) AS CONTRACT_DURATION,
-- Enriched Duration
CASE 
WHEN ACV_POLICY_FLG = 'Y' THEN 12 
ELSE  LKP_CONTRACT_DURATION
END
AS NEW_CONTRACT_DURATION,
-- Enriched Start Date
CASE 
WHEN TSL_CONTRACT_DURATION >= 0 THEN COALESCE( SUB_EFFECTIVE_DATE, (COALESCE(SOL_CONTRACT_START_DT,SOL_REQUESTED_START_DT)+DV_FULFILLMENT_DAYS),  DV_BOOKED_DT) 
WHEN  DV_SVC_CONTRACT_DURATION > 0 THEN SVC_CONTRACT_START_DT
WHEN  DV_SOL_CONTRACT_DURATION > 0 THEN SOL_CONTRACT_START_DT
WHEN  SOLV1_CONTRACT_DURATION > 0 THEN COALESCE( SOL_CONTRACT_START_DT, SOL_REQUESTED_START_DT, DV_BOOKED_DT)
ELSE  DV_BOOKED_DT
END
AS NEW_SERVICE_CONTRACT_START_DTM, -- BSFT Change
-- Enriched End Date
CASE 
WHEN  ACV_POLICY_FLG = 'Y' AND NEW_CONTRACT_DURATION = 12 THEN ADD_MONTHS( NEW_SERVICE_CONTRACT_START_DTM, 12) - 1
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM >= TSL_REMAINING_TERM AND SUB_TERM_START_DT IS NOT NULL THEN (SUB_TERM_START_DT + DV_FULFILLMENT_DAYS + TSL_BOOKING_DAYS)
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM < TSL_REMAINING_TERM AND TSL_FULFILLMENT_DAYS = 0 AND SUB_TERM_END_DT IS NOT NULL THEN SUB_TERM_END_DT
WHEN TSL_REMAINING_TERM > 0 AND TSL_FULFILLMENT_DAYS > 0 AND SUB_TERM_END_DT IS NOT NULL THEN SUB_TERM_END_DT
WHEN TSL_REMAINING_TERM = 0 AND SUB_END_DT >= SUB_TERM_END_DT THEN SUB_END_DT 
WHEN TSL_REMAINING_TERM IS NULL AND DV_SVC_CONTRACT_DURATION > 0 THEN  SVC_CONTRACT_END_DT
WHEN TSL_REMAINING_TERM IS NULL AND DV_SOL_CONTRACT_DURATION > 0 THEN  SOL_CONTRACT_END_DT
ELSE
(
CASE
WHEN FLOOR( NEW_CONTRACT_DURATION) = CEIL( NEW_CONTRACT_DURATION) AND NEW_CONTRACT_DURATION <> 0
THEN ADD_MONTHS( NEW_SERVICE_CONTRACT_START_DTM, CAST( NEW_CONTRACT_DURATION AS INTEGER)) - 1
ELSE NEW_SERVICE_CONTRACT_START_DTM + ROUND((CAST( NEW_CONTRACT_DURATION AS DECIMAL(15,6)) / 12) * 365)
END
)
END
AS NEW_SERVICE_CONTRACT_END_DTM
FROM XAAS_ENRICHED XAAS
LEFT JOIN SOL_ENRICHED SOL
ON XAAS.MINOR_LN_EXAAS_SUBSCR_SOL_KEY=SOL.SALES_ORDER_LINE_KEY
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE SOL1
ON SOL.SALES_ORDER_LINE_KEY=SOL1.SALES_ORDER_LINE_KEY
AND SOL1.SS_CODE IN ('CG','OPL')
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER SO
ON SOL1.SALES_ORDER_KEY=SO.SALES_ORDER_KEY
LEFT JOIN SVC_ENRICHED SVC
ON (SVC.SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY))
WITH DATA AND STATS PRIMARY INDEX (SO_SBSCRPTN_ITM_SLS_TRX_KEY) ON COMMIT PRESERVE ROWS ;

COLLECT STATISTICS COLUMN(SO_SBSCRPTN_ITM_SLS_TRX_KEY)ON XAAS_ENRICH_DATE;
COLLECT STATISTICS COLUMN(MINOR_LN_EXAAS_SUBSCR_SOL_KEY)ON XAAS_ENRICH_DATE;

CREATE MULTISET VOLATILE TABLE ST_OPL_XXGCO_RTR_ATTRIB_CV_R
AS 
(
SELECT DISTINCT RENEWAL_ERP_REF_VALUE,RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,TRX_ID,ERP_SO_NUMBER,ERP_LINE_ID,ORDER_NUMBER, LINE_REF_NUMBER ,ITEM_CATEGORIZATION,RENEWAL_REF_TYPE,RENEWAL_REF_VALUE ,SALES_MOTION
FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV
WHERE RENEWAL_REF_TYPE IN ('LINE REFERENCE NUMBER','OFFER ATTRIBUTION ID','Renew Covered Line ID')
AND ORDER_ORIGIN_CD <>  'DISTI-DSV'
AND (RENEWAL_ERP_REF_VALUE <>'UNKNOWN' OR RENEWAL_REF_VALUE<>'UNKNOWN')
) WITH DATA PRIMARY INDEX (RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID) ON COMMIT PRESERVE ROWS;

COLLECT STATISTICS COLUMN(RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID)ON ST_OPL_XXGCO_RTR_ATTRIB_CV_R;
COLLECT STATISTICS COLUMN(ITEM_CATEGORIZATION,RENEWAL_REF_TYPE)ON ST_OPL_XXGCO_RTR_ATTRIB_CV_R;
COLLECT STATISTICS COLUMN(TRX_ID,RENEWAL_REF_VALUE)ON ST_OPL_XXGCO_RTR_ATTRIB_CV_R;

CREATE MULTISET VOLATILE TABLE XAAS_R
AS 
(SELECT TRX.*,NSOL.ORIGINAL_SYSTEM_LINE_REF_ID,NSOL.BK_SALES_CHANNEL_CD 
FROM (SELECT DISTINCT SO_SBSCRPTN_ITM_SLS_TRX_KEY,SK_TRX_ID_INT,TRX.BOOKED_DT,
WEB_ORDER_ID,MINOR_LN_EXAAS_SUBSCR_SOL_KEY,TERM_START_DT,TERM_END_DT,DV_LINE_REF_NUM_INT
FROM
$$EXAASVWDB.N_EXAAS_SUBSCRIPTION_TV  HDRT
INNER JOIN $$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX TRX
ON TRX.DV_LINKED_MJR_LN_REF_NUM_KEY=HDRT.MJR_LN_EXAAS_SBSCRN_SO_LN_KEY
AND TRX.SUBSCRIPTION_REFERENCE_ID=HDRT.SUBSCRIPTION_REF_ID
AND TRX.MINOR_LN_EXAAS_SUBSCR_SOL_KEY>0
AND END_TV_DT= '3500-01-01 00:00:00'
QUALIFY ROW_NUMBER() OVER (PARTITION BY SO_SBSCRPTN_ITM_SLS_TRX_KEY ORDER BY END_TV_DT DESC)=1)TRX
INNER JOIN (SELECT BK_LINE_REF_NUM,SALES_ORDER_LINE_KEY,ORIGINAL_SYSTEM_LINE_REF_ID,BK_SALES_CHANNEL_CD
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE
WHERE SS_CODE IN ('CG','OPL')
QUALIFY ROW_NUMBER() OVER ( PARTITION BY BK_LINE_REF_NUM ORDER BY BK_LINE_REF_NUM DESC)=1)NSOL
ON  TRX.MINOR_LN_EXAAS_SUBSCR_SOL_KEY=NSOL.SALES_ORDER_LINE_KEY
AND CAST(TRX.DV_LINE_REF_NUM_INT AS BIGINT)=CAST(NSOL.BK_LINE_REF_NUM  AS BIGINT)
) WITH DATA PRIMARY INDEX (SO_SBSCRPTN_ITM_SLS_TRX_KEY) ON COMMIT PRESERVE ROWS;

COLLECT STATISTICS COLUMN(SO_SBSCRPTN_ITM_SLS_TRX_KEY)ON XAAS_R;

CREATE MULTISET VOLATILE TABLE POS_R
AS 
(SELECT DISTINCT NSOL.SALES_ORDER_LINE_KEY,POS_TV.BK_POS_TRANSACTION_ID_INT,ORIGINAL_SYSTEM_LINE_REF_ID,BKG_POS.RU_SERVICE_CONTRACT_END_DTM
FROM (SELECT SALES_ORDER_LINE_KEY,MIN(BK_POS_TRANSACTION_ID_INT)AS BK_POS_TRANSACTION_ID_INT FROM 
(SELECT * FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
WHERE END_TV_DTM = '3500-01-01 00:00:00' 
QUALIFY ROW_NUMBER() OVER (PARTITION BY SALES_ORDER_LINE_KEY  ORDER BY SRC_CREATED_DTM ASC)=1)POS
GROUP BY SALES_ORDER_LINE_KEY) POS_TV
INNER JOIN  (SELECT BK_POS_TRANSACTION_ID_INT,RU_SERVICE_CONTRACT_END_DTM FROM
$$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG GROUP BY 1,2
UNION
SELECT BK_POS_TRANSACTION_ID_INT,RU_SERVICE_CONTRACT_END_DTM FROM
$$SLSORDVWDB.N_POS_TRANSACTION_LINE POS GROUP BY 1,2) BKG_POS
ON  POS_TV.BK_POS_TRANSACTION_ID_INT=BKG_POS.BK_POS_TRANSACTION_ID_INT
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
ON NSOL.SALES_ORDER_LINE_KEY=POS_TV.SALES_ORDER_LINE_KEY
AND NSOL.BK_SALES_CHANNEL_CD='Two Tier Distributor'
AND NSOL.SS_CODE IN ('CG','OPL') )  WITH DATA
PRIMARY INDEX (BK_POS_TRANSACTION_ID_INT) ON COMMIT PRESERVE ROWS;

COLLECT STATISTICS COLUMN(BK_POS_TRANSACTION_ID_INT)ON POS_R; 

COLLECT STATISTICS COLUMN(DV_RENEWAL_GAP_DAYS_CNT)ON $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV;

UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(SOL.RU_SERVICE_CONTRACT_START_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(NSOL.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE 
COALESCE( CAST(COALESCE(SOL.RU_SERVICE_CONTRACT_START_DTM,ENRICH_O.NEW_SERVICE_CONTRACT_START_DTM) AS DATE)-CAST(COALESCE(NSOL.RU_SERVICE_CONTRACT_END_DTM,ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE) ,-9999) END ) AS RENEWAL_GAP_DAYS
FROM
ST_OPL_XXGCO_RTR_ATTRIB_CV_R RTR
INNER JOIN  $$SLSORDVWDB.N_SALES_ORDER_LINE SOL
ON SOL.SK_SO_LINE_ID_INT=RTR.ERP_LINE_ID
AND SOL.SS_CODE IN ('CG','OPL')
INNER  JOIN (SELECT SK_SO_LINE_ID_INT,SALES_ORDER_LINE_KEY,ORIGINAL_SYSTEM_LINE_REF_ID,RU_SERVICE_CONTRACT_START_DTM,RU_SERVICE_CONTRACT_END_DTM,SS_CODE
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE
WHERE SS_CODE IN ('CG','OPL')  
QUALIFY ROW_NUMBER() OVER ( PARTITION BY ORIGINAL_SYSTEM_LINE_REF_ID ORDER BY BK_SO_SRC_CRT_DATETIME DESC)=1) NSOL 
ON NSOL.SK_SO_LINE_ID_INT =CAST(RENEWAL_ERP_REF_VALUE AS BIGINT)
AND NSOL.SS_CODE IN ('CG','OPL')
LEFT JOIN ERP_ENRICH_DATE ENRICH_O
ON ENRICH_O.SALES_ORDER_LINE_KEY =SOL.SALES_ORDER_LINE_KEY
AND SOL.SS_CODE IN ('CG','OPL')
LEFT JOIN ERP_ENRICH_DATE ENRICH_R 
ON ENRICH_R.SALES_ORDER_LINE_KEY =NSOL.SALES_ORDER_LINE_KEY
AND NSOL.SS_CODE IN ('CG','OPL')
WHERE RTR.RENEWAL_REF_TYPE='LINE REFERENCE NUMBER'
AND ITEM_CATEGORIZATION NOT IN ('BILLING', 'FLEXIBLE CONSUMPTION MODEL')
AND RENEWAL_ERP_REF_VALUE <>'UNKNOWN'
AND EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID)
GROUP BY 1,2,3
UNION
SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(SOL.RU_SERVICE_CONTRACT_START_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(NSOL.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE 
COALESCE( CAST(COALESCE(SOL.RU_SERVICE_CONTRACT_START_DTM,ENRICH_O.NEW_SERVICE_CONTRACT_START_DTM) AS DATE)-CAST(COALESCE(NSOL.RU_SERVICE_CONTRACT_END_DTM,ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE) ,-9999) END ) AS RENEWAL_GAP_DAYS
FROM
ST_OPL_XXGCO_RTR_ATTRIB_CV_R RTR
INNER JOIN  $$SLSORDVWDB.N_SALES_ORDER_LINE SOL
ON SOL.SK_SO_LINE_ID_INT=RTR.ERP_LINE_ID
AND SOL.SS_CODE IN ('CG','OPL')
INNER  JOIN   (SELECT SK_SO_LINE_ID_INT,SALES_ORDER_LINE_KEY,ORIGINAL_SYSTEM_LINE_REF_ID,RU_SERVICE_CONTRACT_START_DTM,RU_SERVICE_CONTRACT_END_DTM,SS_CODE
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE
WHERE SS_CODE IN ('CG','OPL')  
QUALIFY ROW_NUMBER() OVER ( PARTITION BY ORIGINAL_SYSTEM_LINE_REF_ID ORDER BY BK_SO_SRC_CRT_DATETIME DESC)=1) NSOL 
ON NSOL.ORIGINAL_SYSTEM_LINE_REF_ID = RTR.RENEWAL_REF_VALUE
AND NSOL.SS_CODE IN ('CG','OPL')
LEFT JOIN ERP_ENRICH_DATE ENRICH_O
ON ENRICH_O.SALES_ORDER_LINE_KEY =SOL.SALES_ORDER_LINE_KEY
AND SOL.SS_CODE IN ('CG','OPL')
LEFT JOIN ERP_ENRICH_DATE ENRICH_R 
ON ENRICH_R.SALES_ORDER_LINE_KEY =NSOL.SALES_ORDER_LINE_KEY
AND NSOL.SS_CODE IN ('CG','OPL')
WHERE RTR.RENEWAL_REF_TYPE='LINE REFERENCE NUMBER'
AND ITEM_CATEGORIZATION NOT IN ('BILLING', 'FLEXIBLE CONSUMPTION MODEL')
AND RTR.RENEWAL_REF_VALUE<>'UNKNOWN' AND RENEWAL_ERP_REF_VALUE ='UNKNOWN'
AND EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID)
GROUP BY 1,2,3)ERP
SET DV_RENEWAL_GAP_DAYS_CNT =ERP.RENEWAL_GAP_DAYS
WHERE
WI.SK_RTR_ATTRIBUTION_ID=ERP.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=ERP.OA_ATTRIBUTION_ID
AND WI.ITEM_CATEGORY_NAME NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' ) 
AND WI.ORDER_ORIGIN_CD <>  'DISTI-DSV'
AND RENEWAL_REF_CD='LINE REFERENCE NUMBER'
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');


UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(SOL.RU_SERVICE_CONTRACT_START_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(OA_R.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(COALESCE(SOL.RU_SERVICE_CONTRACT_START_DTM,ENRICH_O.NEW_SERVICE_CONTRACT_START_DTM) AS DATE)-CAST(COALESCE(OA_R.RU_SERVICE_CONTRACT_END_DTM,ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END) RENEWAL_GAP_DAYS
FROM
ST_OPL_XXGCO_RTR_ATTRIB_CV_R RTR
INNER JOIN  $$SLSORDVWDB.N_SALES_ORDER_LINE SOL
ON SOL.SK_SO_LINE_ID_INT=RTR.ERP_LINE_ID
INNER JOIN (SELECT SOL_R.SALES_ORDER_LINE_KEY,SK_SO_LINE_ID_INT,SK_OFFER_ATTRIBUTION_ID_INT,RU_SERVICE_CONTRACT_START_DTM,RU_SERVICE_CONTRACT_END_DTM,SS_CODE  FROM  $$SLSORDVWDB.N_SOL_OFFER_ATTRIBUTION OA INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE SOL_R
ON SOL_R.SALES_ORDER_LINE_KEY=OA.TOP_SKU_SALES_ORDER_LINE_KEY
AND SS_CODE IN ('CG','OPL'))OA_R
ON   OA_R.SK_OFFER_ATTRIBUTION_ID_INT  =  CAST (RTR.RENEWAL_REF_VALUE  AS BIGINT) 
LEFT JOIN ERP_ENRICH_DATE ENRICH_O
ON ENRICH_O.SALES_ORDER_LINE_KEY =SOL.SALES_ORDER_LINE_KEY
AND SOL.SS_CODE IN ('CG','OPL')
LEFT JOIN ERP_ENRICH_DATE ENRICH_R 
ON ENRICH_R.SALES_ORDER_LINE_KEY =OA_R.SALES_ORDER_LINE_KEY
AND OA_R.SS_CODE IN ('CG','OPL')
WHERE RTR.RENEWAL_REF_TYPE='OFFER ATTRIBUTION ID'
AND ITEM_CATEGORIZATION NOT IN ('BILLING', 'FLEXIBLE CONSUMPTION MODEL')
AND EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID)
GROUP BY 1,2,3)ERP
SET DV_RENEWAL_GAP_DAYS_CNT =ERP.RENEWAL_GAP_DAYS
WHERE
WI.SK_RTR_ATTRIBUTION_ID=ERP.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=ERP.OA_ATTRIBUTION_ID
AND WI.ITEM_CATEGORY_NAME NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' ) 
AND WI.ORDER_ORIGIN_CD <>  'DISTI-DSV'
AND RENEWAL_REF_CD='OFFER ATTRIBUTION ID'
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');

UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(O.TERM_START_DT) IN ('3500-01-01','1900-01-01') OR TRUNC(SCL.SVC_CNTRCT_LINE_END_DTM) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(COALESCE(O.TERM_START_DT,ENRICH_O.NEW_SERVICE_CONTRACT_START_DTM) AS DATE)-CAST(COALESCE(SCL.SVC_CNTRCT_LINE_END_DTM,ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END) AS RENEWAL_GAP_DAYS
FROM
ST_OPL_XXGCO_RTR_ATTRIB_CV_R RTR
INNER JOIN  XAAS_R O
ON  RTR.ORDER_NUMBER=O.WEB_ORDER_ID
AND RTR.TRX_ID=O.SK_TRX_ID_INT
INNER  JOIN  $$SERVICEVWDB.N_SVC_CNTRCT_LN_TECH_SERVICES SCL
ON  SCL.SK_ID_LINT  =CAST (RTR.RENEWAL_REF_VALUE  AS BIGINT)  
LEFT JOIN XAAS_ENRICH_DATE ENRICH_O
ON ENRICH_O.SO_SBSCRPTN_ITM_SLS_TRX_KEY=O.SO_SBSCRPTN_ITM_SLS_TRX_KEY
LEFT JOIN XAAS_ENRICH_DATE ENRICH_R
ON ENRICH_R.MINOR_LN_EXAAS_SUBSCR_SOL_KEY=SCL.SALES_ORDER_LINE_KEY          
WHERE RTR.RENEWAL_REF_TYPE='Renew Covered Line ID'
AND EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID) 
GROUP BY 1,2,3)XAAS
SET DV_RENEWAL_GAP_DAYS_CNT =XAAS.RENEWAL_GAP_DAYS
WHERE
WI.SK_RTR_ATTRIBUTION_ID=XAAS.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=XAAS.OA_ATTRIBUTION_ID 
AND WI.ORDER_ORIGIN_CD <>  'DISTI-DSV'
AND RENEWAL_REF_CD='Renew Covered Line ID'
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');

UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(O.TERM_START_DT) IN ('3500-01-01','1900-01-01') OR TRUNC(R.TERM_END_DT) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(COALESCE(O.TERM_START_DT,ENRICH_O.NEW_SERVICE_CONTRACT_START_DTM) AS DATE)-CAST(COALESCE(R.TERM_END_DT,ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END)AS RENEWAL_GAP_DAYS
FROM ST_OPL_XXGCO_RTR_ATTRIB_CV_R RTR
INNER JOIN XAAS_R O
ON  RTR.ORDER_NUMBER=O.WEB_ORDER_ID
AND RTR.TRX_ID=O.SK_TRX_ID_INT
INNER JOIN (SELECT SO_SBSCRPTN_ITM_SLS_TRX_KEY,ORIGINAL_SYSTEM_LINE_REF_ID,TERM_END_DT FROM XAAS_R 
QUALIFY ROW_NUMBER() OVER (PARTITION BY ORIGINAL_SYSTEM_LINE_REF_ID ORDER BY BOOKED_DT DESC)=1)R
ON R.ORIGINAL_SYSTEM_LINE_REF_ID=RTR.RENEWAL_REF_VALUE
LEFT JOIN XAAS_ENRICH_DATE ENRICH_O
ON ENRICH_O.SO_SBSCRPTN_ITM_SLS_TRX_KEY=O.SO_SBSCRPTN_ITM_SLS_TRX_KEY
LEFT JOIN XAAS_ENRICH_DATE ENRICH_R
ON ENRICH_R.SO_SBSCRPTN_ITM_SLS_TRX_KEY=R.SO_SBSCRPTN_ITM_SLS_TRX_KEY 
WHERE RENEWAL_REF_TYPE IN ('LINE REFERENCE NUMBER')
AND EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID))XAAS
SET DV_RENEWAL_GAP_DAYS_CNT=XAAS.RENEWAL_GAP_DAYS
WHERE WI.SK_RTR_ATTRIBUTION_ID=XAAS.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=XAAS.OA_ATTRIBUTION_ID
AND WI.ITEM_CATEGORY_NAME IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' ) 
AND WI.ORDER_ORIGIN_CD <>  'DISTI-DSV'
AND RENEWAL_REF_CD='LINE REFERENCE NUMBER'
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');


UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(O.TERM_START_DT) IN ('3500-01-01','1900-01-01') OR TRUNC(R.TERM_END_DT) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(COALESCE(O.TERM_START_DT,ENRICH_O.NEW_SERVICE_CONTRACT_START_DTM) AS DATE)-CAST(COALESCE(R.TERM_END_DT,ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END) AS RENEWAL_GAP_DAYS
FROM ST_OPL_XXGCO_RTR_ATTRIB_CV_R RTR
INNER JOIN XAAS_R O
ON  RTR.ORDER_NUMBER=O.WEB_ORDER_ID
AND RTR.TRX_ID=O.SK_TRX_ID_INT
LEFT JOIN (SELECT TRX.*,SK_ATTRIBUTION_ID_INT from
(SELECT * FROM XAAS_R 
QUALIFY ROW_NUMBER() OVER (PARTITION BY ORIGINAL_SYSTEM_LINE_REF_ID ORDER BY BOOKED_DT DESC)=1)TRX 
INNER JOIN 
$$NRTNCRVWDB.N_XAAS_SO_SBSCRPTN_ATTRBTN_NRT XOA
ON TRX.SO_SBSCRPTN_ITM_SLS_TRX_KEY = XOA.PARENT_SO_SBSCRP_ITMSLSTRX_KEY
AND BK_OFFER_ATTRIBUTION_ID_INT > 0)R
ON R.SK_ATTRIBUTION_ID_INT =CAST(RTR.RENEWAL_REF_VALUE  AS BIGINT)
LEFT JOIN XAAS_ENRICH_DATE ENRICH_O
ON ENRICH_O.SO_SBSCRPTN_ITM_SLS_TRX_KEY=O.SO_SBSCRPTN_ITM_SLS_TRX_KEY
LEFT JOIN XAAS_ENRICH_DATE ENRICH_R
ON ENRICH_R.SO_SBSCRPTN_ITM_SLS_TRX_KEY=R.SO_SBSCRPTN_ITM_SLS_TRX_KEY
WHERE RENEWAL_REF_TYPE IN ('OFFER ATTRIBUTION ID')
AND EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID))XAAS
SET DV_RENEWAL_GAP_DAYS_CNT=XAAS.RENEWAL_GAP_DAYS
WHERE WI.SK_RTR_ATTRIBUTION_ID=XAAS.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=XAAS.OA_ATTRIBUTION_ID
AND WI.ITEM_CATEGORY_NAME IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL') 
AND WI.ORDER_ORIGIN_CD <>  'DISTI-DSV'
AND RENEWAL_REF_CD='OFFER ATTRIBUTION ID'
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');

UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(BKG_POS.RU_SERVICE_CONTRACT_START_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(POS.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(NSOL.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(BKG_POS.RU_SERVICE_CONTRACT_START_DTM  AS DATE)-CAST(COALESCE((CASE WHEN BK_SALES_CHANNEL_CD ='Two Tier Distributor' THEN POS.RU_SERVICE_CONTRACT_END_DTM ELSE NSOL.RU_SERVICE_CONTRACT_END_DTM END),ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END ) AS RENEWAL_GAP_DAYS
FROM
(SELECT DISTINCT RENEWAL_ERP_REF_VALUE,RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,TRX_ID,ERP_SO_NUMBER,ERP_LINE_ID,ORDER_NUMBER, LINE_REF_NUMBER ,ITEM_CATEGORIZATION,RENEWAL_REF_TYPE,RENEWAL_REF_VALUE ,SALES_MOTION,POS_TRANSACTION_ID_INT
FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV
WHERE RENEWAL_REF_TYPE IN ('LINE REFERENCE NUMBER')
AND ITEM_CATEGORIZATION NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL') 
AND ORDER_ORIGIN_CD =  'DISTI-DSV'
AND (RENEWAL_ERP_REF_VALUE <>'UNKNOWN' OR RENEWAL_REF_VALUE<>'UNKNOWN')) RTR
INNER JOIN  $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS  
ON RTR.POS_TRANSACTION_ID_INT = BKG_POS.BK_POS_TRANSACTION_ID_INT
INNER JOIN   (SELECT SK_SO_LINE_ID_INT,SS_CODE,SALES_ORDER_LINE_KEY,ORIGINAL_SYSTEM_LINE_REF_ID,RU_SERVICE_CONTRACT_START_DTM,RU_SERVICE_CONTRACT_END_DTM,BK_SALES_CHANNEL_CD
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE
WHERE SS_CODE IN ('CG','OPL')  
QUALIFY ROW_NUMBER() OVER ( PARTITION BY ORIGINAL_SYSTEM_LINE_REF_ID ORDER BY BK_SO_SRC_CRT_DATETIME DESC)=1) NSOL
ON   NSOL.SK_SO_LINE_ID_INT = CAST(RENEWAL_ERP_REF_VALUE AS BIGINT)
AND NSOL.SS_CODE IN ('CG','OPL')
LEFT  JOIN POS_R POS 
ON NSOL.SALES_ORDER_LINE_KEY=POS.SALES_ORDER_LINE_KEY
LEFT JOIN ERP_ENRICH_DATE ENRICH_R 
ON ENRICH_R.SALES_ORDER_LINE_KEY =NSOL.SALES_ORDER_LINE_KEY
AND NSOL.SS_CODE IN ('CG','OPL')
WHERE
 RENEWAL_ERP_REF_VALUE <>'UNKNOWN' AND 
 EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID)
GROUP BY 1,2,3
UNION
SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(BKG_POS.RU_SERVICE_CONTRACT_START_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(POS.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(NSOL.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(BKG_POS.RU_SERVICE_CONTRACT_START_DTM  AS DATE)-CAST(COALESCE((CASE WHEN BK_SALES_CHANNEL_CD ='Two Tier Distributor' THEN POS.RU_SERVICE_CONTRACT_END_DTM ELSE NSOL.RU_SERVICE_CONTRACT_END_DTM END),ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END ) AS RENEWAL_GAP_DAYS
FROM
(SELECT DISTINCT RENEWAL_ERP_REF_VALUE,RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,TRX_ID,ERP_SO_NUMBER,ERP_LINE_ID,ORDER_NUMBER, LINE_REF_NUMBER ,ITEM_CATEGORIZATION,RENEWAL_REF_TYPE,RENEWAL_REF_VALUE ,SALES_MOTION,POS_TRANSACTION_ID_INT
FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV
WHERE RENEWAL_REF_TYPE IN ('LINE REFERENCE NUMBER')
AND ITEM_CATEGORIZATION NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL') 
AND ORDER_ORIGIN_CD =  'DISTI-DSV'
AND (RENEWAL_ERP_REF_VALUE <>'UNKNOWN' OR RENEWAL_REF_VALUE<>'UNKNOWN')) RTR
INNER JOIN  $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS  
ON RTR.POS_TRANSACTION_ID_INT = BKG_POS.BK_POS_TRANSACTION_ID_INT
INNER JOIN  (SELECT SK_SO_LINE_ID_INT,SS_CODE,SALES_ORDER_LINE_KEY,ORIGINAL_SYSTEM_LINE_REF_ID,RU_SERVICE_CONTRACT_START_DTM,RU_SERVICE_CONTRACT_END_DTM,BK_SALES_CHANNEL_CD
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE
WHERE SS_CODE IN ('CG','OPL')  
QUALIFY ROW_NUMBER() OVER ( PARTITION BY ORIGINAL_SYSTEM_LINE_REF_ID ORDER BY BK_SO_SRC_CRT_DATETIME DESC)=1) NSOL
ON NSOL.ORIGINAL_SYSTEM_LINE_REF_ID=RTR.RENEWAL_REF_VALUE
AND NSOL.SS_CODE IN ('CG','OPL')
LEFT  JOIN POS_R POS 
ON NSOL.SALES_ORDER_LINE_KEY=POS.SALES_ORDER_LINE_KEY
LEFT JOIN ERP_ENRICH_DATE ENRICH_R 
ON ENRICH_R.SALES_ORDER_LINE_KEY =NSOL.SALES_ORDER_LINE_KEY
AND NSOL.SS_CODE IN ('CG','OPL')
WHERE RTR.RENEWAL_REF_VALUE<>'UNKNOWN' AND RENEWAL_ERP_REF_VALUE ='UNKNOWN'
AND EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID)
GROUP BY 1,2,3)POS
SET DV_RENEWAL_GAP_DAYS_CNT =POS.RENEWAL_GAP_DAYS
WHERE
WI.SK_RTR_ATTRIBUTION_ID=POS.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=POS.OA_ATTRIBUTION_ID
AND WI.ORDER_ORIGIN_CD = 'DISTI-DSV'
AND WI.ITEM_CATEGORY_NAME NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL')
AND RENEWAL_REF_CD='LINE REFERENCE NUMBER' 
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');

UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(BKG_POS.RU_SERVICE_CONTRACT_START_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(POS_REF.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(NSOL.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(BKG_POS.RU_SERVICE_CONTRACT_START_DTM  AS DATE)-CAST(COALESCE((CASE WHEN BK_SALES_CHANNEL_CD='Two Tier Distributor' THEN POS_REF.RU_SERVICE_CONTRACT_END_DTM ELSE NSOL.RU_SERVICE_CONTRACT_END_DTM END),ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END) AS RENEWAL_GAP_DAYS
FROM
(SELECT DISTINCT RENEWAL_ERP_REF_VALUE,RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,TRX_ID,ERP_SO_NUMBER,ERP_LINE_ID,ORDER_NUMBER, LINE_REF_NUMBER ,ITEM_CATEGORIZATION,RENEWAL_REF_TYPE,RENEWAL_REF_VALUE ,SALES_MOTION,POS_TRANSACTION_ID_INT
FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV
WHERE RENEWAL_REF_TYPE IN ('OFFER ATTRIBUTION ID')
AND ORDER_ORIGIN_CD =  'DISTI-DSV'
AND ITEM_CATEGORIZATION NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL')
AND (RENEWAL_ERP_REF_VALUE <>'UNKNOWN' OR RENEWAL_REF_VALUE<>'UNKNOWN')) RTR
INNER JOIN  $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS  
ON RTR.POS_TRANSACTION_ID_INT = BKG_POS.BK_POS_TRANSACTION_ID_INT
INNER JOIN (SELECT SOL_R.SALES_ORDER_LINE_KEY,BK_SALES_CHANNEL_CD,SK_OFFER_ATTRIBUTION_ID_INT,RU_SERVICE_CONTRACT_START_DTM,RU_SERVICE_CONTRACT_END_DTM ,SS_CODE FROM  $$SLSORDVWDB.N_SOL_OFFER_ATTRIBUTION OA INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE SOL_R 
ON SOL_R.SALES_ORDER_LINE_KEY=OA.TOP_SKU_SALES_ORDER_LINE_KEY
AND SOL_R.SS_CODE IN ('CG','OPL'))NSOL
ON   NSOL.SK_OFFER_ATTRIBUTION_ID_INT  =  CAST (RTR.RENEWAL_REF_VALUE  AS BIGINT) 
LEFT JOIN POS_R POS_REF
ON NSOL.SALES_ORDER_LINE_KEY=POS_REF.SALES_ORDER_LINE_KEY
LEFT JOIN ERP_ENRICH_DATE ENRICH_R 
ON ENRICH_R.SALES_ORDER_LINE_KEY =NSOL.SALES_ORDER_LINE_KEY
AND NSOL.SS_CODE IN ('CG','OPL')
WHERE EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID)
GROUP BY 1,2,3)POS
SET DV_RENEWAL_GAP_DAYS_CNT =POS.RENEWAL_GAP_DAYS
WHERE
WI.SK_RTR_ATTRIBUTION_ID=POS.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=POS.OA_ATTRIBUTION_ID
AND WI.ORDER_ORIGIN_CD = 'DISTI-DSV'
AND RENEWAL_REF_CD='OFFER ATTRIBUTION ID'
AND WI.ITEM_CATEGORY_NAME NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL')
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');


UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(BKG_POS.RU_SERVICE_CONTRACT_START_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(POS.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(R.TERM_END_DT) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(BKG_POS.RU_SERVICE_CONTRACT_START_DTM  AS DATE)-CAST(COALESCE((CASE WHEN BK_SALES_CHANNEL_CD ='Two Tier Distributor' THEN POS.RU_SERVICE_CONTRACT_END_DTM ELSE R.TERM_END_DT END),ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END ) AS RENEWAL_GAP_DAYS
FROM
(SELECT DISTINCT RENEWAL_ERP_REF_VALUE,RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,TRX_ID,ERP_SO_NUMBER,ERP_LINE_ID,ORDER_NUMBER, LINE_REF_NUMBER ,ITEM_CATEGORIZATION,RENEWAL_REF_TYPE,RENEWAL_REF_VALUE ,SALES_MOTION,POS_TRANSACTION_ID_INT
FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV
WHERE RENEWAL_REF_TYPE IN ('LINE REFERENCE NUMBER')
AND ORDER_ORIGIN_CD =  'DISTI-DSV'
AND ITEM_CATEGORIZATION IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL')
AND (RENEWAL_ERP_REF_VALUE <>'UNKNOWN' OR RENEWAL_REF_VALUE<>'UNKNOWN')) RTR
INNER JOIN  $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS  
ON RTR.POS_TRANSACTION_ID_INT = BKG_POS.BK_POS_TRANSACTION_ID_INT
INNER JOIN (SELECT * FROM XAAS_R 
QUALIFY ROW_NUMBER() OVER (PARTITION BY ORIGINAL_SYSTEM_LINE_REF_ID ORDER BY BOOKED_DT DESC)=1) R
ON R.ORIGINAL_SYSTEM_LINE_REF_ID=RTR.RENEWAL_REF_VALUE
LEFT JOIN POS_R POS 
ON R.MINOR_LN_EXAAS_SUBSCR_SOL_KEY=POS.SALES_ORDER_LINE_KEY
LEFT JOIN XAAS_ENRICH_DATE ENRICH_R
ON ENRICH_R.SO_SBSCRPTN_ITM_SLS_TRX_KEY=R.SO_SBSCRPTN_ITM_SLS_TRX_KEY
WHERE EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID)
GROUP BY 1,2,3)POS
SET DV_RENEWAL_GAP_DAYS_CNT =POS.RENEWAL_GAP_DAYS
WHERE
WI.SK_RTR_ATTRIBUTION_ID=POS.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=POS.OA_ATTRIBUTION_ID
AND WI.ORDER_ORIGIN_CD = 'DISTI-DSV'
AND RENEWAL_REF_CD='LINE REFERENCE NUMBER' 
AND WI.ITEM_CATEGORY_NAME IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL')
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');

UPDATE WI FROM 
$$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI,
(SELECT  DISTINCT RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,
(CASE WHEN (TRUNC(BKG_POS.RU_SERVICE_CONTRACT_START_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(POS_REF.RU_SERVICE_CONTRACT_END_DTM) IN ('3500-01-01','1900-01-01') OR TRUNC(R.TERM_END_DT) IN ('3500-01-01','1900-01-01')) THEN -9999 
ELSE
COALESCE(( CAST(BKG_POS.RU_SERVICE_CONTRACT_START_DTM  AS DATE)-CAST(COALESCE((CASE WHEN BK_SALES_CHANNEL_CD='Two Tier Distributor' THEN POS_REF.RU_SERVICE_CONTRACT_END_DTM ELSE R.TERM_END_DT END),ENRICH_R.NEW_SERVICE_CONTRACT_END_DTM) AS DATE)) ,-9999) END) AS RENEWAL_GAP_DAYS
FROM
(SELECT DISTINCT RENEWAL_ERP_REF_VALUE,RTR_ATTRIBUTION_ID,OA_ATTRIBUTION_ID,TRX_ID,ERP_SO_NUMBER,ERP_LINE_ID,ORDER_NUMBER, LINE_REF_NUMBER ,ITEM_CATEGORIZATION,RENEWAL_REF_TYPE,RENEWAL_REF_VALUE ,SALES_MOTION,POS_TRANSACTION_ID_INT
FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV
WHERE RENEWAL_REF_TYPE IN ('OFFER ATTRIBUTION ID')
AND ORDER_ORIGIN_CD =  'DISTI-DSV'
AND ITEM_CATEGORIZATION IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL')
AND (RENEWAL_ERP_REF_VALUE <>'UNKNOWN' OR RENEWAL_REF_VALUE<>'UNKNOWN')) RTR
INNER JOIN  $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS  
ON RTR.POS_TRANSACTION_ID_INT = BKG_POS.BK_POS_TRANSACTION_ID_INT
LEFT JOIN (SELECT TRX.*,XOA.SK_ATTRIBUTION_ID_INT from 
(SELECT * FROM XAAS_R 
QUALIFY ROW_NUMBER() OVER (PARTITION BY ORIGINAL_SYSTEM_LINE_REF_ID ORDER BY BOOKED_DT DESC)=1) TRX 
INNER JOIN 
$$NRTNCRVWDB.N_XAAS_SO_SBSCRPTN_ATTRBTN_NRT XOA
ON TRX.SO_SBSCRPTN_ITM_SLS_TRX_KEY = XOA.PARENT_SO_SBSCRP_ITMSLSTRX_KEY
AND BK_OFFER_ATTRIBUTION_ID_INT > 0)R
ON R.SK_ATTRIBUTION_ID_INT =CAST(RTR.RENEWAL_REF_VALUE  AS BIGINT)
LEFT JOIN POS_R POS_REF
ON R.MINOR_LN_EXAAS_SUBSCR_SOL_KEY=POS_REF.SALES_ORDER_LINE_KEY
LEFT JOIN XAAS_ENRICH_DATE ENRICH_R
ON ENRICH_R.SO_SBSCRPTN_ITM_SLS_TRX_KEY=R.SO_SBSCRPTN_ITM_SLS_TRX_KEY
WHERE EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV W
WHERE W.SK_RTR_ATTRIBUTION_ID=RTR.RTR_ATTRIBUTION_ID
AND W.SK_ATTRIBUTION_ID_INT=RTR.OA_ATTRIBUTION_ID)
GROUP BY 1,2,3)POS
SET DV_RENEWAL_GAP_DAYS_CNT =POS.RENEWAL_GAP_DAYS
WHERE
WI.SK_RTR_ATTRIBUTION_ID=POS.RTR_ATTRIBUTION_ID
AND WI.SK_ATTRIBUTION_ID_INT=POS.OA_ATTRIBUTION_ID
AND WI.ORDER_ORIGIN_CD = 'DISTI-DSV'
AND RENEWAL_REF_CD='OFFER ATTRIBUTION ID'
AND WI.ITEM_CATEGORY_NAME IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL')
AND (RENEWAL_ERP_REF_VALUE<>'UNKNOWN' OR RENEWAL_REF_ID<>'UNKNOWN');


Source9 Name : SQ_EX_OPL_XXGCO_RTR_ATTRIB_CV


Pre SQL : 



SQL Query : 
SELECT
 ST.RECORD_OFFSET,
 ST.RTR_ATTRIBUTION_ID,
 ST.TRX_ID,
 ST.TRX_VERSION,
 ST.ATTRIBUTED_EXT_NET_PRICE,
 ST.ATTRIBUTED_UNIT_NET_PRICE,
 ST.ATTRIBUTED_PERCENTAGE,
 ST.ATTRIBUTED_QUANTITY,
 ST.ENTERPRISE_SKU_INV_ITM_ID,
 ST.COVERED_PRD_INV_ITM_ID,
 ST.AS_PARENT_SKU_INV_ITM_ID,
 ST.ARCHITECTURE_ID,
 ST.TECHNOLOGY_ID,
 ST.TXN_CR_PARTY_ID,
 ST.ERP_HEADER_ID,
 ST.ERP_LINE_ID,
 ST.ERP_SO_NUMBER,
 ST.ORDER_NUMBER,
 ST.LINE_REF_NUMBER,
 ST.SALES_MOTION,
 ST.SALES_MOTION_CONTEXT,
 ST.AS_TS_FLAG,
 ST.ITEM_CATEGORIZATION,
 ST.RECGD_ATTRIB_EXT_NET_PRICE,
 ST.RECGD_PERCENTAGE,
 ST.SS_CD,
 ST.OA_ATTRIBUTION_ID,
 ST.OFFER_TYPE_ID,
 ST.LIST_PRICE,
 ST.ATTR_PRDT_CLASS_NAME,
 ST.HQ_CR_PARTY_ID,
 ST.RENEWAL_REF_TYPE,
 ST.RENEWAL_REF_VALUE,
 ST.REASON_CODE,
 ST.SALES_MOTION_TIMING,
 ST.MANUAL_PROCESS_FLAG,
 ST.USER_ID,
 ST.CASE_NUMBER,
 ST.COMMENTS,
 ST.SMR_SALES_VALUE,
 ST.SMR_ACV_AMOUNT,
 ST.SMR_TCV_AMOUNT,
 ST.PRODUCT_CLASS,
 ST.RENEW_CLE_ID,
 ST.MANUAL_OVERRIDE_FLAG,
 ST.LINE_EXTENDED_PRICE,
 ST.EDW_CREATE_DTM,
 ST.PARTITION_NUMBER,
 ST.TOPIC_NAME,
 ST.INSTALL_SITE_LOCATION,
 CASE WHEN XAAS_TRX.SK_TRX_ID_INT IS NOT NULL THEN 'XAAS_AR_RESTRICTION'
	ELSE 'RI' END AS EXCEPTION_TYPE,
 ST.POS_TRANSACTION_ID_INT,
 ST.ORDER_ORIGIN_CD,
 ST.SK_TRX_ID_INT,
 ST.SK_OPL_HEADER_ID_INT,
 ST.RENEWAL_ERP_REF_VALUE
FROM
 $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV ST 
 INNER JOIN 
 (
   SELECT TRX_ID,POS_TRANSACTION_ID_INT FROM $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV STG 
WHERE NOT EXISTS 
    (  
     SELECT 1 FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI
     WHERE WI.SK_RTR_ATTRIBUTION_ID = STG.RTR_ATTRIBUTION_ID 
     AND WI.SK_ATTRIBUTION_ID_INT = STG.OA_ATTRIBUTION_ID
     AND WI.SS_CD = STG.SS_CD 
    ) 
   GROUP BY 1,2
 ) WK
 ON COALESCE(ST.TRX_ID,-999)    = COALESCE(WK.TRX_ID,-999)
 AND COALESCE(ST.POS_TRANSACTION_ID_INT,-999)    = COALESCE(WK.POS_TRANSACTION_ID_INT,-999)
 LEFT JOIN ( SEL SK_TRX_ID_INT FROM $$NRTNCRVWDB.N_XAAS_SO_SBSCR_ITM_SLSTRX_NRT WHERE TRX_SS_CD = 'AR' GROUP BY 1) XAAS_TRX
 ON ST.TRX_ID = XAAS_TRX.SK_TRX_ID_INT


Post SQL : 



Target9 Name : EX_OPL_XXGCO_RTR_ATTRIB_CV


Pre SQL : 
DELETE FROM $$EXCEPDB.EX_OPL_XXGCO_RTR_ATTRIB_CV WHERE EXCEPTION_TYPE = 'RI' ;


Post SQL : 
DELETE FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WK 
 WHERE EXISTS ( SELECT 1 FROM $$EXCEPDB.EX_OPL_XXGCO_RTR_ATTRIB_CV EX WHERE EX.RTR_ATTRIBUTION_ID = WK.SK_RTR_ATTRIBUTION_ID) ;
 
 CALL COLLECT_STATS_WRAP('$$EXCEPDB','EX_OPL_XXGCO_RTR_ATTRIB_CV','D');
 

 INSERT INTO $$EXCEPDB.EX_OPL_XXGCO_RTR_ATTRIB_CV
SELECT
 ST.RECORD_OFFSET,
 ST.RTR_ATTRIBUTION_ID,
 ST.TRX_ID,
 ST.TRX_VERSION,
 ST.ATTRIBUTED_EXT_NET_PRICE,
 ST.ATTRIBUTED_UNIT_NET_PRICE,
 ST.ATTRIBUTED_PERCENTAGE,
 ST.ATTRIBUTED_QUANTITY,
 ST.ENTERPRISE_SKU_INV_ITM_ID,
 ST.COVERED_PRD_INV_ITM_ID,
 ST.AS_PARENT_SKU_INV_ITM_ID,
 ST.ARCHITECTURE_ID,
 ST.TECHNOLOGY_ID,
 ST.TXN_CR_PARTY_ID,
 ST.ERP_HEADER_ID,
 ST.ERP_LINE_ID,
 ST.ERP_SO_NUMBER,
 ST.ORDER_NUMBER,
 ST.LINE_REF_NUMBER,
 ST.SALES_MOTION,
 ST.SALES_MOTION_CONTEXT,
 ST.AS_TS_FLAG,
 ST.ITEM_CATEGORIZATION,
 ST.RECGD_ATTRIB_EXT_NET_PRICE,
 ST.RECGD_PERCENTAGE,
 ST.SS_CD,
 ST.OA_ATTRIBUTION_ID,
 ST.OFFER_TYPE_ID,
 ST.LIST_PRICE,
 ST.ATTR_PRDT_CLASS_NAME,
 ST.HQ_CR_PARTY_ID,
 ST.RENEWAL_REF_TYPE,
 ST.RENEWAL_REF_VALUE,
 ST.REASON_CODE,
 ST.SALES_MOTION_TIMING,
 ST.MANUAL_PROCESS_FLAG,
 ST.USER_ID,
 ST.CASE_NUMBER,
 ST.COMMENTS,
 ST.SMR_SALES_VALUE,
 ST.SMR_ACV_AMOUNT,
 ST.SMR_TCV_AMOUNT,
 ST.PRODUCT_CLASS,
 ST.RENEW_CLE_ID,
 ST.MANUAL_OVERRIDE_FLAG,
 ST.LINE_EXTENDED_PRICE,
 ST.EDW_CREATE_DTM,
 ST.PARTITION_NUMBER,
 ST.TOPIC_NAME,
 ST.INSTALL_SITE_LOCATION,
 'RI_ZERO_SPLIT' AS EXCEPTION_TYPE,
ST.POS_TRANSACTION_ID_INT,
ST.ORDER_ORIGIN_CD,
 ST.SK_TRX_ID_INT,
 ST.SK_OPL_HEADER_ID_INT,
 ST.RENEWAL_ERP_REF_VALUE
FROM
 $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV ST 
 INNER JOIN 
 ( SELECT  SK_ERP_BKGS_TRX_ID TRX_ID
    FROM ( SEL SALES_ORDER_LINE_KEY, SK_ERP_BKGS_TRX_ID
			FROM  $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI WHERE ITEM_CATEGORY_NAME NOT IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' )
				AND EXISTS ( SEL 1 FROM $$NRTNCRVWDB.N_SALES_ORDER_LINE_NRT_HIST_TV NSOL
				WHERE NSOL.SALES_ORDER_LINE_KEY = WI.SALES_ORDER_LINE_KEY
				AND NSOL.END_TV_DTM = '3500-01-01 00:00:00'
                          AND ORDER_ORIGIN_CD <> 'DISTI-DSV'
				AND NSOL.SS_CD = 'CG'
				AND (NSOL.ORDER_QTY*NSOL.UNIT_NET_PRICE_LOCAL_AMT) <> 0.0000 )
			GROUP BY 1,2 HAVING SUM(ATTR_PCT) = 0.000 
		) ERP_EX_LINES -- EXCEPTION CHECK FOR 0 SPLIT RTR DATA FOR 0 DOLLAR ERP LINES
	UNION
	SELECT SK_ERP_BKGS_TRX_ID TRX_ID
	FROM ( SEL SK_ERP_BKGS_TRX_ID
			FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI WHERE ITEM_CATEGORY_NAME IN ( 'Billing', 'FLEXIBLE CONSUMPTION MODEL' )
				AND EXISTS ( SEL 1 FROM $$NRTNCRVWDB.N_XAAS_SO_SBSCR_ITM_SLSTRX_NRT TRX
				WHERE TRX.SK_TRX_ID_INT = WI.SK_ERP_BKGS_TRX_ID
				AND TRX.RECOG_SALES_VALUE_LOCAL_AMT <> 0.0000
                         AND ORDER_ORIGIN_CD <> 'DISTI-DSV' )
			GROUP BY 1 HAVING SUM(ATTR_PCT) = 0.000
		) XAAS_EX_LINES
 ) WK
 ON ST.TRX_ID = WK.TRX_ID
AND ORDER_ORIGIN_CD <> 'DISTI-DSV' ;

 INSERT INTO $$EXCEPDB.EX_OPL_XXGCO_RTR_ATTRIB_CV
SELECT
 ST.RECORD_OFFSET,
 ST.RTR_ATTRIBUTION_ID,
 ST.TRX_ID,
 ST.TRX_VERSION,
 ST.ATTRIBUTED_EXT_NET_PRICE,
 ST.ATTRIBUTED_UNIT_NET_PRICE,
 ST.ATTRIBUTED_PERCENTAGE,
 ST.ATTRIBUTED_QUANTITY,
 ST.ENTERPRISE_SKU_INV_ITM_ID,
 ST.COVERED_PRD_INV_ITM_ID,
 ST.AS_PARENT_SKU_INV_ITM_ID,
 ST.ARCHITECTURE_ID,
 ST.TECHNOLOGY_ID,
 ST.TXN_CR_PARTY_ID,
 ST.ERP_HEADER_ID,
 ST.ERP_LINE_ID,
 ST.ERP_SO_NUMBER,
 ST.ORDER_NUMBER,
 ST.LINE_REF_NUMBER,
 ST.SALES_MOTION,
 ST.SALES_MOTION_CONTEXT,
 ST.AS_TS_FLAG,
 ST.ITEM_CATEGORIZATION,
 ST.RECGD_ATTRIB_EXT_NET_PRICE,
 ST.RECGD_PERCENTAGE,
 ST.SS_CD,
 ST.OA_ATTRIBUTION_ID,
 ST.OFFER_TYPE_ID,
 ST.LIST_PRICE,
 ST.ATTR_PRDT_CLASS_NAME,
 ST.HQ_CR_PARTY_ID,
 ST.RENEWAL_REF_TYPE,
 ST.RENEWAL_REF_VALUE,
 ST.REASON_CODE,
 ST.SALES_MOTION_TIMING,
 ST.MANUAL_PROCESS_FLAG,
 ST.USER_ID,
 ST.CASE_NUMBER,
 ST.COMMENTS,
 ST.SMR_SALES_VALUE,
 ST.SMR_ACV_AMOUNT,
 ST.SMR_TCV_AMOUNT,
 ST.PRODUCT_CLASS,
 ST.RENEW_CLE_ID,
 ST.MANUAL_OVERRIDE_FLAG,
 ST.LINE_EXTENDED_PRICE,
 ST.EDW_CREATE_DTM,
 ST.PARTITION_NUMBER,
 ST.TOPIC_NAME,
 ST.INSTALL_SITE_LOCATION,
 'RI_ZERO_SPLIT' AS EXCEPTION_TYPE,
ST.POS_TRANSACTION_ID_INT,
ST.ORDER_ORIGIN_CD,
 ST.SK_TRX_ID_INT,
 ST.SK_OPL_HEADER_ID_INT,
 ST.RENEWAL_ERP_REF_VALUE
FROM
 $$STGDB.ST_OPL_XXGCO_RTR_ATTRIB_CV ST 
 INNER JOIN (SELECT  SK_ERP_BKGS_TRX_ID TRX_ID,POS_TRANSACTION_ID_INT POS_TRX_ID
    FROM ( SEL  SK_ERP_BKGS_TRX_ID  , POS_TRANSACTION_ID_INT
			FROM  $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WI WHERE  ORDER_ORIGIN_CD = 'DISTI-DSV'
				AND EXISTS ( SEL 1 FROM $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE NPOS
				WHERE NPOS.BK_POS_TRANSACTION_ID_INT = WI.POS_TRANSACTION_ID_INT
				AND ( VLDTD_NET_UNIT_PRICE_USD_AMT * POS_TRX_LINE_PRODUCT_QUANT ) <> 0.0000 )
			GROUP BY 1,2 HAVING SUM(ATTR_PCT) = 0.000 
		) POS_EX_LINES 
) WK
ON ST.POS_TRANSACTION_ID_INT = WK.POS_TRX_ID 
AND ORDER_ORIGIN_CD = 'DISTI-DSV';

 DELETE FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIB_CV WK 
 WHERE EXISTS ( SELECT 1 FROM $$EXCEPDB.EX_OPL_XXGCO_RTR_ATTRIB_CV EX WHERE EX.RTR_ATTRIBUTION_ID = WK.SK_RTR_ATTRIBUTION_ID) ;
 
 CALL COLLECT_STATS_WRAP('$$EXCEPDB','EX_OPL_XXGCO_RTR_ATTRIB_CV','D');