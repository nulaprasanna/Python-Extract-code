


Source1 Name : SQ_WI_POS_SCA_BKG_DLY


Pre SQL : 



SQL Query : 
SELECT 
	POS_SCAAC_KEY,
	PD_BK_POS_TRANSACTION_ID_INT,
	BASE_LIST_UNIT_PROD_PRICE_AMT,
	DISTI_RPTD_COST_UNIT_PRICE_AMT,
	VLDTD_NET_UNIT_PRICE_USD_AMT,
	VALUATION_PRICE_USD_AMOUNT,
	PD_SALES_TERRITORY_KEY,
	PD_SALES_REP_NUM,
	DISTRIBUTOR_OFFSET_FLG,
	PD_SALES_COMMISSION_PCT,
	SC_ID_INT,
	SOURCE_DELETED_FLG,
	LAST_UPDATED_DTM,
	DV_LAST_UPDATED_DT,
	START_TV_DTM,
	END_TV_DTM,
	DISTRIBUTOR_BUCKET_FLG,
	POS_TRX_LN_PRDT_QTY,
	NET_CHANGE_PROCESS_DT,
      SK_TRX_SC_ID_INT,
	DSV_OR_POS_TYPE_CD, 
      POS_RETURN_ROLE  
 /* ADDED AS PART OF JUNE 2018 RELEASE AMY-NRT SCOPE*/
 ,RU_SERVICE_CONTRACT_START_DTM
 ,RU_SERVICE_CONTRACT_END_DTM
 ,RU_SRVC_CNTRCT_DRTN_MNTHS_CNT

FROM $$STGDB.WI_POS_SCA_BKG WI 
WHERE NOT EXISTS ( SEL 1 FROM $$STGDB.WI_POS_SCA_BKG_DLY DLY WHERE WI.POS_SCAAC_KEY = DLY.POS_SCAAC_KEY)


Post SQL : 



Target1 Name : WI_POS_SCA_BKG_DLY


Pre SQL : 
DEL 
FROM $$STGDB.WI_POS_SCA_BKG_DLY DLY
WHERE EXISTS ( SEL 1 FROM $$STGDB.WI_POS_SCA_BKG WI 
WHERE DLY. PD_BK_POS_TRANSACTION_ID_INT = WI.PD_BK_POS_TRANSACTION_ID_INT 
AND DLY.DISTRIBUTOR_OFFSET_FLG = WI.DISTRIBUTOR_OFFSET_FLG 
AND DLY.NET_CHANGE_PROCESS_DT = WI.NET_CHANGE_PROCESS_DT ) ;


Post SQL : 
COLLECT STATS ON $$STGDB.WI_POS_SCA_BKG_DLY ;


Source2 Name : SQ_WI_POS_SCA_REP_INCR_BKG


Pre SQL : 
DELETE FROM $$STGDB.WI_POS_SCA_REP_INCR_BKG ALL;


SQL Query : 
SELECT 
	POS_SCAAC_KEY,
	PD_BK_POS_TRANSACTION_ID_INT,
	BASE_LIST_UNIT_PROD_PRICE_AMT,
	DISTI_RPTD_COST_UNIT_PRICE_AMT,
	VLDTD_NET_UNIT_PRICE_USD_AMT,
	VALUATION_PRICE_USD_AMOUNT,
	PD_SALES_TERRITORY_KEY,
	PD_SALES_REP_NUM,
	DISTRIBUTOR_OFFSET_FLG,
	PD_SALES_COMMISSION_PCT,
	SC_ID_INT,
	SK_TRX_SC_ID_INT,
	SOURCE_DELETED_FLG,
	LAST_UPDATED_DTM,
	DV_LAST_UPDATED_DT,
	START_TV_DTM,
	END_TV_DTM,
	DISTRIBUTOR_BUCKET_FLG,
	POS_TRX_LN_PRDT_QTY,
	NET_CHANGE_PROCESS_DT,
	DSV_OR_POS_TYPE_CD,  
	POS_RETURN_ROLE  
	/* ADDED AS PART OF JUNE 2018 RELEASE AMY-NRT SCOPE*/
 ,RU_SERVICE_CONTRACT_START_DTM
 ,RU_SERVICE_CONTRACT_END_DTM
 ,RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
 
FROM $$STGDB.WI_POS_SCA_BKG_DLY WI
WHERE NET_CHANGE_PROCESS_DT  = 
( SELECT MIN(NET_CHANGE_PROCESS_DT) FROM $$STGDB.WI_POS_SCA_BKG_DLY )
AND WI.START_TV_DTM <> WI.END_TV_DTM
QUALIFY RANK() OVER (PARTITION BY PD_BK_POS_TRANSACTION_ID_INT,DISTRIBUTOR_OFFSET_FLG ORDER BY END_TV_DTM DESC )=1


Post SQL : 



Target2 Name : WI_POS_SCA_REP_INCR_BKG


Pre SQL : 



Post SQL : 
COLLECT STATS ON $$STGDB.WI_POS_SCA_REP_INCR_BKG;


Source3 Name : SQ_WI_DRVD_SCA_POS_DTL_BKG_F


Pre SQL : 
DELETE FROM $$STGDB.WI_DRVD_SCA_POS_DTL_BKG_F ALL;


SQL Query : 
SELECT 
  ROW_NUMBER() OVER (ORDER BY BK_POS_TRANSACTION_ID_INT ) + COALESCE( POS_ADJ_DETAIL_RECORD_NUM_INT,0)  AS SK_RECORD_NUMBER_INT,
  ROW_NUMBER() OVER (ORDER BY BK_POS_TRANSACTION_ID_INT )  +  COALESCE(POS_ADJ_DETAIL_SEQ_NUM_INT,0)    AS SK_SEQUENCE_NUMBER_INT,
  BK_SALES_REP_NUMBER            ,
  SALES_CREDIT_TYPE_CODE         ,
  SALES_COMMISSION_PERCENTAGE    ,
  ADJUSTMENT_DATE,
  EXTENDED_LIST_PRICE_USD_AMOUNT ,
  EXTENDED_COST_PRICE_USD_AMOUNT ,
  EXTENDED_NET_PRICE_USD_AMOUNT  ,
  FORWARD_REVERSE_CODE           ,
  BK_POS_TRANSACTION_ID_INT      ,
  DISTRIBUTOR_OFFSET_FLAG        ,
  SALES_TERRITORY_KEY            ,
  ADJUSTMENT_CODE                ,
  DESCRIPTION                    ,
  SALES_CHANNEL_CODE             ,
  SALES_CHANNEL_SOURCE_TYPE      ,
  CHANNEL_BOOKING_FLAG           ,
  SALES_ADJUSTMENT_DATETIME       ,
  SERVICE_BOOKING_FLAG           ,
  BK_FISCAL_CALENDAR_CODE        ,
  PD.BK_FISCAL_YEAR_NUMBER_INT AS BK_FISCAL_YEAR_NUMBER_INT,
  PD.BK_FISCAL_MONTH_NUMBER_INT AS BK_FISCAL_MONTH_NUMBER_INT,  
  PD.DV_FISCAL_YEAR_MTH_NUMBER_INT AS DV_FISCAL_YEAR_MTH_NUMBER_INT,
  PRODUCT_KEY                    ,
  PD.PROCESS_DATE AS PROCESS_DATE, 
  EDW_CREATE_USER                ,
  EDW_UPDATE_USER                ,
  EDW_CREATE_DATETIME            ,
  EDW_UPDATE_DATETIME            ,
  DV_REVENUE_RECOGNITION_FLG     ,
  DV_NET_SPREAD_FLG              ,
  DV_CORPORATE_BOOKING_FLG       ,
  ADJUSTMENT_QTY                 ,
  DV_LATEST_FLG                  ,
  POS_OFFSET_FLG                 ,
  NET_CHANGE_PROCESS_DT           ,
  ATTRIBUTION_TYPE_CD    ,
  TOP_SKU_ATTRIBUTED_PRODUCT_KEY ,
  BK_OFFER_ATTRIBUTION_ID_INT,
  SK_TRX_SALES_CREDIT_ID_INT,
  DSV_OR_POS_TYPE_CD ,/*ADDED AS PART OF DSV Q1FY16*/
  POS_RETURN_ROLE,  /*ADDED AS PART OF DSV Q1FY16*/ 
    DV_LOCAL_EXTND_LIST_PRICE_AMT,
  LOCAL_UNIT_LIST_PRICE_AMT,
  DV_UNIT_LIST_PRICE_USD_AMT,
COALESCE(POB_TYPE_CD,'UNKNOWN')
   /* ADDED AS PART OF JUNE 2018 RELEASE AMY-NRT SCOPE*/
  ,CASE WHEN RU_SERVICE_CONTRACT_START_DTM IN ('3500-01-01 00:00:00','1900-01-01 00:00:00') THEN NULL
  ELSE RU_SERVICE_CONTRACT_START_DTM END 
 ,CASE WHEN RU_SERVICE_CONTRACT_END_DTM IN ('3500-01-01 00:00:00','1900-01-01 00:00:00') THEN NULL
 ELSE RU_SERVICE_CONTRACT_END_DTM END
 ,CASE WHEN DV_CONTRACT_DURATION=-999 THEN NULL
  ELSE COALESCE(DV_CONTRACT_DURATION,0)  END AS DV_CONTRACT_DURATION
 ,COALESCE(DV_ANNUALIZED_FLG,'=') AS DV_ANNUALIZED_FLG 
 ,COALESCE(DV_ANNUALIZED_US_NET_AMT,0) AS DV_ANNUALIZED_US_NET_AMT
 ,COALESCE(DV_MULTIYEAR_US_NET_AMT,0) AS DV_MULTIYEAR_US_NET_AMT
 ,BOOKINGS_POLICY_CD
   FROM 
  (
  SELECT  PD_SALES_REP_NUM AS BK_SALES_REP_NUMBER,           
       'Direct Sales' AS SALES_CREDIT_TYPE_CODE,       
        PD_SALES_COMMISSION_PCT AS SALES_COMMISSION_PERCENTAGE  , 
                    CAST(LAST_UPDATED_DTM AS DATE) AS ADJUSTMENT_DATE , 
                    LAST_UPDATED_DTM AS  SALES_ADJUSTMENT_DATETIME,      
        CASE 
                       WHEN DISTRIBUTOR_OFFSET_FLG='N' THEN COALESCE(WPS.BASE_LIST_UNIT_PROD_PRICE_AMT,0)*WPS.POS_TRX_LN_PRDT_QTY*PD_SALES_COMMISSION_PCT/100 
                       WHEN DISTRIBUTOR_OFFSET_FLG='Y' THEN -1*COALESCE(WPS.BASE_LIST_UNIT_PROD_PRICE_AMT,0)*WPS.POS_TRX_LN_PRDT_QTY*PD_SALES_COMMISSION_PCT/100
                             ELSE  NULL
                   END AS EXTENDED_LIST_PRICE_USD_AMOUNT,  
                   CASE 
                        WHEN DISTRIBUTOR_OFFSET_FLG='N' THEN COALESCE(WPS.DISTI_RPTD_COST_UNIT_PRICE_AMT,0)*WPS.POS_TRX_LN_PRDT_QTY*PD_SALES_COMMISSION_PCT/100 
                        WHEN DISTRIBUTOR_OFFSET_FLG='Y' THEN -1*COALESCE(WPS.DISTI_RPTD_COST_UNIT_PRICE_AMT,0)*WPS.POS_TRX_LN_PRDT_QTY*PD_SALES_COMMISSION_PCT/100
                        ELSE NULL
                   END AS EXTENDED_COST_PRICE_USD_AMOUNT,       
                  CASE 
                       WHEN DISTRIBUTOR_OFFSET_FLG='N' THEN COALESCE(WPS.VLDTD_NET_UNIT_PRICE_USD_AMT,COALESCE(WPS.VALUATION_PRICE_USD_AMOUNT,0))*WPS.POS_TRX_LN_PRDT_QTY*PD_SALES_COMMISSION_PCT/100
                       WHEN DISTRIBUTOR_OFFSET_FLG='Y' THEN -1*COALESCE(WPS.VLDTD_NET_UNIT_PRICE_USD_AMT,COALESCE(WPS.VALUATION_PRICE_USD_AMOUNT,0))*WPS.POS_TRX_LN_PRDT_QTY*PD_SALES_COMMISSION_PCT/100
                       ELSE NULL
                   END AS EXTENDED_NET_PRICE_USD_AMOUNT, 
      'F'                          AS FORWARD_REVERSE_CODE,          
      PD_BK_POS_TRANSACTION_ID_INT AS BK_POS_TRANSACTION_ID_INT,
      DISTRIBUTOR_BUCKET_FLG       AS DISTRIBUTOR_OFFSET_FLAG,       
      PD_SALES_TERRITORY_KEY       AS SALES_TERRITORY_KEY,           
      'DP'                         AS ADJUSTMENT_CODE ,  
      (CAST(WPS.LAST_UPDATED_DTM AS DATE) (FORMAT 'DD-MMM-YY'))  || 'NEW POS'  AS DESCRIPTION,
      '2-TIER DISTRIBUTOR'    AS SALES_CHANNEL_CODE,
       'REBOK'                   AS SALES_CHANNEL_SOURCE_TYPE,
       CASE 
                       WHEN RSH.L1_SALES_TERRITORY_NAME_CODE = 'WW Distribution' THEN 'N' 
                       ELSE 'Y' 
                   END AS CHANNEL_BOOKING_FLAG,
                   
                  CASE 
                       WHEN NP.GOODS_OR_SERVICE_TYPE = 'GOODS' THEN 'N' 
                       WHEN NP.GOODS_OR_SERVICE_TYPE = 'SERVICE' THEN 'Y' 
                           ELSE CASE 
                                    WHEN ZEROIFNULL(WPS.VALUATION_PRICE_USD_AMOUNT) <> 0 THEN 'Y' 
                                    ELSE 'N' 
                                END 
                  END SERVICE_BOOKING_FLAG,
                  'Fiscal Year'       AS BK_FISCAL_CALENDAR_CODE,  
      NBTL.PRODUCT_KEY              AS PRODUCT_KEY,                 
      USER        AS EDW_CREATE_USER,             
      USER         AS EDW_UPDATE_USER,              
      CURRENT_TIMESTAMP(0)     AS EDW_CREATE_DATETIME,          
      CURRENT_TIMESTAMP(0)     AS EDW_UPDATE_DATETIME,          
  CASE WHEN NP.DIVESTITURE_TYPE_CD <> 'UNKNOWN' OR (NP.GOODS_OR_SERVICE_TYPE = 'GOODS' 
 AND NPF.BK_BUSINESS_UNIT_ID ='CDBU' 
 AND ELC.ENABLE_FLAG_NRT ='Y' )
 THEN 'N' ELSE 'Y' END AS DV_REVENUE_RECOGNITION_FLG, 
 CASE WHEN RSH.L1_SALES_TERRITORY_NAME_CODE  = 'WW Distribution' 
  AND (CASE WHEN (NP.GOODS_OR_SERVICE_TYPE = 'GOODS' 
 AND NPF.BK_BUSINESS_UNIT_ID ='CDBU' 
 AND ELC.ENABLE_FLAG_NRT ='Y') OR NP.DIVESTITURE_TYPE_CD <> 'UNKNOWN'  THEN 'N'
   ELSE 'Y' END) ='Y' THEN 'Y' 
 ELSE 'N' END AS DV_NET_SPREAD_FLG,
 CASE WHEN RSH.L1_SALES_TERRITORY_NAME_CODE  <> 'WW Distribution' 
  AND (CASE WHEN (NP.GOODS_OR_SERVICE_TYPE = 'GOODS' 
 AND NPF.BK_BUSINESS_UNIT_ID ='CDBU' 
 AND 
 ELC.ENABLE_FLAG_NRT ='Y') OR NP.DIVESTITURE_TYPE_CD <> 'UNKNOWN'  THEN 'N'
 ELSE 'Y' END) ='Y' THEN 'Y' 
 ELSE 'N' END AS DV_CORPORATE_BOOKING_FLG,
       CASE 
                       WHEN DISTRIBUTOR_OFFSET_FLG ='N' THEN WPS.POS_TRX_LN_PRDT_QTY*PD_SALES_COMMISSION_PCT/100 
                       WHEN DISTRIBUTOR_OFFSET_FLG ='Y' THEN (-1*WPS.POS_TRX_LN_PRDT_QTY*PD_SALES_COMMISSION_PCT/100) 
                  END                           AS ADJUSTMENT_QTY,                 
                  'Y'           AS DV_LATEST_FLG,
                  DISTRIBUTOR_OFFSET_FLG        AS POS_OFFSET_FLG,
                  NET_CHANGE_PROCESS_DT         AS NET_CHANGE_PROCESS_DT,
      /*CASE WHEN NPOS.BK_POS_TRANSACTION_ID_INT IS NULL THEN 'STANDALONE' ELSE 'BUNDLE' END AS ATTRIBUTION_TYPE_CD, */
   CASE  WHEN ( NPOS.BK_POS_TRANSACTION_ID_INT IS NOT NULL OR NPOS_MPOB.BK_POS_TRANSACTION_ID_INT IS NOT NULL)THEN 'BUNDLE' 
                    ELSE 'STANDALONE' END AS ATTRIBUTION_TYPE_CD,
      COALESCE(NBTL.PRODUCT_KEY,-999) AS TOP_SKU_ATTRIBUTED_PRODUCT_KEY,
      CAST(-9999 AS INTEGER ) AS BK_OFFER_ATTRIBUTION_ID_INT,
      SK_TRX_SC_ID_INT AS SK_TRX_SALES_CREDIT_ID_INT,
      WPS.DSV_OR_POS_TYPE_CD , /*ADDED AS PART OF DSV Q1FY16*/
                  WPS.POS_RETURN_ROLE,  /*ADDED AS PART OF DSV Q1FY16*/ 
   CAST(0.0 AS DECIMAL(18,6)) DV_LOCAL_EXTND_LIST_PRICE_AMT,
 CAST(0.0 AS DECIMAL(18,6)) LOCAL_UNIT_LIST_PRICE_AMT,
 CAST(0.0 AS DECIMAL(18,6)) DV_UNIT_LIST_PRICE_USD_AMT,
NPOS_MPOB.POB_TYPE_CD
 /* ADDED AS PART OF JUNE 2018 RELEASE AMY-NRT SCOPE*/
,WPS.RU_SERVICE_CONTRACT_START_DTM
,WPS.RU_SERVICE_CONTRACT_END_DTM
,
/*CASE    
 WHEN   WPS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN WPS.DV_CONTRACT_DURATION  
 ELSE */
 /* Rounded as part of FY20 Oct Release */
ROUND(CASE WHEN NP.GOODS_OR_SERVICE_TYPE='GOODS' THEN 
  CASE WHEN WPS.RU_SERVICE_CONTRACT_END_DTM <> '3500-01-01 00:00:00' AND ( CAST(WPS.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WPS.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS   NOT NULL 
        THEN  CAST((CAST(CAST(WPS.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(WPS.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
                                                  WHEN  WPS.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT > 0
                                                                  THEN WPS.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
   WHEN ( NP.BK_PRODUCT_ID LIKE 'SWOA%' OR  NP.BK_PRODUCT_ID LIKE '%ADJ%' ) AND NP.BK_PRODUCT_ID NOT LIKE 'SWOA-MX%' THEN NULL
    ELSE CASE
      WHEN NP.PRICING_UNIT_NAME = 'YEAR' THEN NP.PRICING_UNIT_DURATION_INT * 12 
      WHEN NP.PRICING_UNIT_NAME = 'MONTHS' THEN NP.PRICING_UNIT_DURATION_INT  
	  WHEN NP.PRICING_UNIT_NAME = 'DAYS' THEN   
       CAST(((NP.PRICING_UNIT_DURATION_INT*12(FLOAT))/365) AS DECIMAL(15,6))
   WHEN EL.BIZ_DEF_TERM IS NOT NULL THEN EL.BIZ_DEF_TERM
     WHEN EL.DURATION IS NOT NULL THEN EL.DURATION
   ELSE NULL
     END 
  END 
  
 ELSE 
 CASE WHEN WPS.RU_SERVICE_CONTRACT_END_DTM <> '3500-01-01 00:00:00' AND ( CAST(WPS.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WPS.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS   NOT NULL 
        THEN  CAST((CAST(CAST(WPS.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(WPS.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
                                                  WHEN  WPS.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT > 0
                                                                  THEN WPS.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
                  END 
 END)   DV_CONTRACT_DURATION


,
/*CASE    
 WHEN   WPS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN WPS.DV_ANNUALIZED_FLG  
 ELSE */
CASE  WHEN NP.GOODS_OR_SERVICE_TYPE='GOODS' THEN           
  CASE WHEN DV_CONTRACT_DURATION IS NULL THEN 'Y' 
   WHEN DV_CONTRACT_DURATION IS NOT NULL THEN
   CASE
     WHEN NP.MONETIZATION_TYPE_CD ='PERPETUAL' AND NP.ELA_FLG = 'Y' THEN 'Y'  
     WHEN COALESCE ( EX.EXCLUDE_FLAG,'N' ) = 'Y' THEN 'Y' 
     WHEN EX.EXCLUDE_FLAG IS NOT NULL AND EX.EXCLUDE_FLAG = 'N'  
     THEN     CASE  WHEN   DV_CONTRACT_DURATION >12   AND NP.MONETIZATION_TYPE_CD <>'USAGE'  THEN 'N' ELSE 'Y' END
WHEN NP.XCAT_FLG ='Y' 
 AND(NSO.BK_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649') 
OR FDM.BK_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649'))  AND NP.RU_BK_PRODUCT_FAMILY_ID='WBXEE'  THEN 'Y'
     WHEN DV_CONTRACT_DURATION >12 AND NP.MONETIZATION_TYPE_CD <>'USAGE'  /*AND NP.XCAT_FLG <>'Y'*//*svakulab*/ AND FDM.BK_DEAL_ID IS NULL THEN 'N' ELSE 'Y'
   END
  END 
  ELSE
CASE  WHEN DV_CONTRACT_DURATION IS NULL THEN 'Y' 
WHEN DV_CONTRACT_DURATION IS NOT NULL THEN
 CASE WHEN   DV_CONTRACT_DURATION >12 THEN 'N' ELSE 'Y' END
END
END   DV_ANNUALIZED_FLG
,
/*CASE    
 WHEN   WPS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN WPS.DV_ANNUALIZED_US_NET_AMT  
 ELSE*/
/*CASE WHEN DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                    WHEN DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                    ELSE DD_COMP_US_NET_PRICE_AMOUNT 
END  DV_ANNUALIZED_US_NET_AMT */
CASE WHEN DV_ANNUALIZED_FLG = 'Y' THEN EXTENDED_NET_PRICE_USD_AMOUNT
                                    WHEN DV_ANNUALIZED_FLG = 'N' THEN ( EXTENDED_NET_PRICE_USD_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                    ELSE EXTENDED_NET_PRICE_USD_AMOUNT 
END  DV_ANNUALIZED_US_NET_AMT
,
/*CASE    
 WHEN   WPS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN WPS.DV_MULTIYEAR_US_NET_AMT  
 ELSE*/
/*CASE WHEN DV_ANNUALIZED_FLG = 'Y'  THEN 0
  WHEN DV_ANNUALIZED_FLG='N' THEN 
 DD_COMP_US_NET_PRICE_AMOUNT -  DV_ANNUALIZED_US_NET_AMT
 ELSE DD_COMP_US_NET_PRICE_AMOUNT 
 END  DV_MULTIYEAR_US_NET_AMT */

CASE WHEN DV_ANNUALIZED_FLG = 'Y'  THEN 0
  WHEN DV_ANNUALIZED_FLG='N' THEN 
 EXTENDED_NET_PRICE_USD_AMOUNT -  DV_ANNUALIZED_US_NET_AMT
 ELSE 0 
 END  DV_MULTIYEAR_US_NET_AMT 
 , COALESCE(NBTL.BOOKINGS_POLICY_CD,'UNK') AS BOOKINGS_POLICY_CD

  FROM $$STGDB.WI_POS_SCA_REP_INCR_BKG WPS
  INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE NBTL 
   ON NBTL.BK_POS_TRANSACTION_ID_INT =WPS.PD_BK_POS_TRANSACTION_ID_INT
  INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH
   ON WPS.PD_SALES_TERRITORY_KEY =  RSH.SALES_TERRITORY_KEY           
  INNER JOIN $$COMREFVWDB.N_PRODUCT NP
   ON NBTL.PRODUCT_KEY = NP.ITEM_KEY 
  LEFT JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF      /* NP, NPF and ELC Joins added as part of Q2FY16 - CDBU - SA (Scientific Atlanta) Changes for CORP BOOKINGS FLAG, REVENUE RECOGNITION FLAG and NET SPREAD FLAG Columns */
   ON NP.RU_BK_PRODUCT_FAMILY_ID = NPF.BK_PRODUCT_FAMILY_ID
  LEFT JOIN $$ETLVWDB.EL_CDBU ELC
  ON NPF.BK_BUSINESS_UNIT_ID = ELC.BK_BUSINESS_UNIT_ID
  AND NP.GOODS_OR_SERVICE_TYPE = ELC.GOODS_OR_SERVICE_TYPE
  LEFT JOIN (SELECT BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_POS_TRX_LINE_OFFER_ATRBTN WHERE POB_TYPE_CD = 'UNKNOWN' GROUP BY 1) NPOS
  ON NPOS.BK_POS_TRANSACTION_ID_INT=WPS.PD_BK_POS_TRANSACTION_ID_INT
   /*NRS MPOB Change */

 LEFT OUTER JOIN (SELECT 
     SKU,INVENTORY_ITEM_ID,DURATION,END_DATE,BIZ_DEF_TERM,VERSION_NUMBER FROM $$ETLVWDB.EL_CG1_XXCFIR_PROD_SUBSCR_SKU 
     GROUP BY 1,2,3,4,5,6
     QUALIFY RANK() OVER (PARTITION BY SKU,INVENTORY_ITEM_ID ORDER BY END_DATE,VERSION_NUMBER DESC)=1
    )EL
ON NP.BK_PRODUCT_ID=EL.SKU

LEFT OUTER JOIN $$STGDB.WI_ATCCV_EXCLUDE_TRX EX 
  ON EX.EXCLUDE_VALUE =  ( 
       CASE WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN NP.RU_BK_PRODUCT_FAMILY_ID 
                         WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN NP.BK_PRODUCT_ID 
       WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
       END )


LEFT OUTER JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING  FDM
  ON NBTL.BK_DEAL_ID = FDM.BK_DEAL_ID

  LEFT JOIN (SELECT BK_POS_TRANSACTION_ID_INT,POB_TYPE_CD,ATTRIBUTED_PRODUCT_KEY 
    FROM $$SLSORDVWDB.N_POS_TRX_LINE_OFFER_ATRBTN WHERE POB_TYPE_CD = 'MPOB' 
    GROUP BY 1,2,3) NPOS_MPOB
    ON NPOS_MPOB.BK_POS_TRANSACTION_ID_INT=WPS.PD_BK_POS_TRANSACTION_ID_INT
    AND  NPOS_MPOB.ATTRIBUTED_PRODUCT_KEY=NBTL.PRODUCT_KEY

/*ADDED BELOW BY-SVAKULAB as part of ICPM Q1FY19 XACT VIPTELA Annualization*/

LEFT OUTER JOIN 
  ( 
SELECT  
BKG_POS.BK_POS_TRANSACTION_ID_INT,
TRNWL.SALES_ORDER_LINE_KEY
 FROM   $$SLSORDVWDB.N_POS_TRANSACTION_LINE                      TPOS
INNER JOIN $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL    TRNWL
ON TRNWL.BK_POS_TRANSACTION_ID_INT=  TPOS.BK_POS_TRANSACTION_ID_INT
INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE       BKG_POS
ON BKG_POS.BK_POS_TRANSACTION_ID_INT                =  TPOS.BK_BOOKING_POS_TRX_ID_INT
WHERE TRNWL.MATCHING_MTHD_FOR_TAGGING_NAME  NOT LIKE ALL (		'%GSP%' ,	'%HQ%',  '%GU%')
AND TRNWL.SALES_ORDER_LINE_KEY > 0
UNION

SELECT 
TPOS.BK_POS_TRANSACTION_ID_INT,
TRNWL.SALES_ORDER_LINE_KEY
FROM  $$SLSORDVWDB.N_POS_TRANSACTION_LINE                          TPOS
INNER JOIN $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL        TRNWL
ON TRNWL.BK_POS_TRANSACTION_ID_INT= TPOS.BK_POS_TRANSACTION_ID_INT
WHERE TRNWL.MATCHING_MTHD_FOR_TAGGING_NAME  NOT LIKE ALL (		'%GSP%' ,	'%HQ%',  '%GU%')
AND TRNWL.SALES_ORDER_LINE_KEY > 0
GROUP BY 1,2
 )  SMC
ON NBTL.BK_POS_TRANSACTION_ID_INT= SMC.BK_POS_TRANSACTION_ID_INT  	

 LEFT OUTER JOIN
      $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
             ON SMC.SALES_ORDER_LINE_KEY   =NSOL.SALES_ORDER_LINE_KEY 
			 
  LEFT OUTER JOIN
     $$SLSORDVWDB.N_SALES_ORDER_TV NSO
	 ON NSOL.SALES_ORDER_KEY = NSO.SALES_ORDER_KEY/*ICPM Annualization-svakulab*/
/*End of ICPM Q1FY19 XACT VIPTELA Annualization*/	
	
	WHERE SOURCE_DELETED_FLG <> 'Y' 
  AND COALESCE(WPS.VLDTD_NET_UNIT_PRICE_USD_AMT,1) <> 0 
  AND WPS.POS_TRX_LN_PRDT_QTY <> 0 
  AND WPS.PD_SALES_COMMISSION_PCT <> 0 
  
  /*Added the below Query to pull the OA-DSV-BKGS Offset and Attributed records from OA-POS Custom table -as part of Q1FY16*/
  UNION ALL
  
  SELECT  PD_SALES_REP_NUM AS BK_SALES_REP_NUMBER,           
       'Direct Sales' AS SALES_CREDIT_TYPE_CODE,       
        PD_SALES_COMMISSION_PCT AS SALES_COMMISSION_PERCENTAGE  , 
                    CAST(LAST_UPDATED_DTM AS DATE) AS ADJUSTMENT_DATE , 
                    LAST_UPDATED_DTM AS  SALES_ADJUSTMENT_DATETIME,      
        CASE /*Using Unit List price and quantity from Custom table for List Price calculation of OA records*/
                       WHEN DISTRIBUTOR_OFFSET_FLG='N' THEN COALESCE(NPOS.UNIT_LIST_PRICE_USD_AMT,0)*NPOS.PRODUCT_ATTRIBUTED_QTY*PD_SALES_COMMISSION_PCT/100 
                       WHEN DISTRIBUTOR_OFFSET_FLG='Y' THEN -1*COALESCE(NPOS.UNIT_LIST_PRICE_USD_AMT,0)*NPOS.PRODUCT_ATTRIBUTED_QTY*PD_SALES_COMMISSION_PCT/100
                             ELSE  NULL
                   END AS EXTENDED_LIST_PRICE_USD_AMOUNT,  
                   CASE 
                        WHEN DISTRIBUTOR_OFFSET_FLG='N' THEN COALESCE(WPS.DISTI_RPTD_COST_UNIT_PRICE_AMT,0)*(NPOS.PRODUCT_ATTRIBUTED_QTY*PD_SALES_COMMISSION_PCT/100)*(NPOS.ATTRIBUTION_PCT/100.00000000) 
                        WHEN DISTRIBUTOR_OFFSET_FLG='Y' THEN -1*COALESCE(WPS.DISTI_RPTD_COST_UNIT_PRICE_AMT,0)*(NPOS.PRODUCT_ATTRIBUTED_QTY*PD_SALES_COMMISSION_PCT/100)*(NPOS.ATTRIBUTION_PCT/100.00000000) 
                        ELSE NULL
                   END AS EXTENDED_COST_PRICE_USD_AMOUNT,       
                   CASE /*Using Unit Net price and quantity from Custom table for Net Price calculation of OA records*/
                       WHEN DISTRIBUTOR_OFFSET_FLG='N' THEN COALESCE(NPOS.UNIT_NET_PRICE_USD_AMT,0)*NPOS.PRODUCT_ATTRIBUTED_QTY*PD_SALES_COMMISSION_PCT/100
                       WHEN DISTRIBUTOR_OFFSET_FLG='Y' THEN -1*COALESCE(NPOS.UNIT_NET_PRICE_USD_AMT,0)*NPOS.PRODUCT_ATTRIBUTED_QTY*PD_SALES_COMMISSION_PCT/100
                       ELSE NULL
                   END AS EXTENDED_NET_PRICE_USD_AMOUNT, 
      'F'                          AS FORWARD_REVERSE_CODE,          
      PD_BK_POS_TRANSACTION_ID_INT AS BK_POS_TRANSACTION_ID_INT,
      DISTRIBUTOR_BUCKET_FLG       AS DISTRIBUTOR_OFFSET_FLAG,       
      PD_SALES_TERRITORY_KEY       AS SALES_TERRITORY_KEY,           
      'DP'                         AS ADJUSTMENT_CODE ,  
      (CAST(WPS.LAST_UPDATED_DTM AS DATE) (FORMAT 'DD-MMM-YY'))  || 'NEW POS'  AS DESCRIPTION,
      '2-TIER DISTRIBUTOR'    AS SALES_CHANNEL_CODE,
       'REBOK'                   AS SALES_CHANNEL_SOURCE_TYPE,
       CASE 
                       WHEN RSH.L1_SALES_TERRITORY_NAME_CODE = 'WW Distribution' THEN 'N' 
                       ELSE 'Y' 
                   END AS CHANNEL_BOOKING_FLAG,
                   
                  CASE 
                       WHEN NP.GOODS_OR_SERVICE_TYPE = 'GOODS' THEN 'N' 
                       WHEN NP.GOODS_OR_SERVICE_TYPE = 'SERVICE' THEN 'Y' 
                           ELSE CASE 
                                    WHEN ZEROIFNULL(WPS.VALUATION_PRICE_USD_AMOUNT) <> 0 THEN 'Y' 
                                    ELSE 'N' 
                                END 
                  END SERVICE_BOOKING_FLAG,
                  'Fiscal Year'       AS BK_FISCAL_CALENDAR_CODE,  
      NPOS.ATTRIBUTED_PRODUCT_KEY              AS PRODUCT_KEY,   /*Using product key from OA-Custom table as Product Key*/              
      USER        AS EDW_CREATE_USER,             
      USER         AS EDW_UPDATE_USER,              
      CURRENT_TIMESTAMP(0)     AS EDW_CREATE_DATETIME,          
      CURRENT_TIMESTAMP(0)     AS EDW_UPDATE_DATETIME,          
  CASE WHEN NP.DIVESTITURE_TYPE_CD <> 'UNKNOWN' OR (NP.GOODS_OR_SERVICE_TYPE = 'GOODS' 
 AND NPF.BK_BUSINESS_UNIT_ID ='CDBU' 
 AND ELC.ENABLE_FLAG_NRT ='Y') THEN 'N' ELSE 'Y' END AS DV_REVENUE_RECOGNITION_FLG, 
 CASE WHEN RSH.L1_SALES_TERRITORY_NAME_CODE  = 'WW Distribution' 
  AND (CASE WHEN (NP.GOODS_OR_SERVICE_TYPE = 'GOODS' 
 AND NPF.BK_BUSINESS_UNIT_ID ='CDBU' 
 AND ELC.ENABLE_FLAG_NRT ='Y') OR NP.DIVESTITURE_TYPE_CD <> 'UNKNOWN'  THEN 'N'
   ELSE 'Y' END) ='Y' THEN 'Y' 
 ELSE 'N' END AS DV_NET_SPREAD_FLG,
 CASE WHEN RSH.L1_SALES_TERRITORY_NAME_CODE  <> 'WW Distribution' 
 AND (CASE WHEN (NP.GOODS_OR_SERVICE_TYPE = 'GOODS' 
 AND NPF.BK_BUSINESS_UNIT_ID ='CDBU' 
 AND ELC.ENABLE_FLAG_NRT ='Y') OR NP.DIVESTITURE_TYPE_CD <> 'UNKNOWN' THEN 'N'
 ELSE 'Y' END) ='Y' THEN 'Y' ELSE 'N' END AS DV_CORPORATE_BOOKING_FLG,
       
       CASE 
                       WHEN DISTRIBUTOR_OFFSET_FLG ='N' THEN NPOS.PRODUCT_ATTRIBUTED_QTY*PD_SALES_COMMISSION_PCT/100  
                       WHEN DISTRIBUTOR_OFFSET_FLG ='Y' THEN (-1*NPOS.PRODUCT_ATTRIBUTED_QTY*PD_SALES_COMMISSION_PCT/100 ) 
                  END                           AS ADJUSTMENT_QTY,                 
                  'Y'           AS DV_LATEST_FLG,
                  DISTRIBUTOR_OFFSET_FLG        AS POS_OFFSET_FLG,
                  NET_CHANGE_PROCESS_DT         AS NET_CHANGE_PROCESS_DT,
     /*CASE WHEN NPOS.ATTRIBUTION_TOP_SKU_FLG='Y' THEN 'OFFSET' ELSE 'ATTRIBUTED' END AS ATTRIBUTION_TYPE_CD,Correcting code deployed on 05/20 NRS*/
	  CASE WHEN NPOS.ATTRIBUTION_CD IN ('UNKNOWN') THEN CASE WHEN NPOS.ATTRIBUTION_TOP_SKU_FLG='Y' THEN 'OFFSET' ELSE 'ATTRIBUTED' END 
	   ELSE NPOS.ATTRIBUTION_CD END AS ATTRIBUTION_TYPE_CD,
       COALESCE(NBTL.PRODUCT_KEY,-999) AS TOP_SKU_ATTRIBUTED_PRODUCT_KEY,/*Using Bundle Product Key as TOP_SKU_ATTRIBUTED_PRODUCT_KEY*/
      NPOS.BK_OFFER_ATTRIBUTION_ID_INT AS BK_OFFER_ATTRIBUTION_ID_INT,
      SK_TRX_SC_ID_INT AS SK_TRX_SALES_CREDIT_ID_INT,
      WPS.DSV_OR_POS_TYPE_CD , /*ADDED AS PART OF DSV Q1FY16*/
                  WPS.POS_RETURN_ROLE,  /*ADDED AS PART OF DSV Q1FY16*/ 
   CAST(0.0 AS DECIMAL(18,6)) DV_LOCAL_EXTND_LIST_PRICE_AMT,
 CAST(0.0 AS DECIMAL(18,6)) LOCAL_UNIT_LIST_PRICE_AMT,
 CAST(0.0 AS DECIMAL(18,6)) DV_UNIT_LIST_PRICE_USD_AMT,
NPOS.POB_TYPE_CD
 /* ADDED AS PART OF JUNE 2018 RELEASE AMY-NRT SCOPE*/
,WPS.RU_SERVICE_CONTRACT_START_DTM
,WPS.RU_SERVICE_CONTRACT_END_DTM
,
/*CASE    
 WHEN   WPS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN WPS.DV_CONTRACT_DURATION  
 ELSE */
 /* ROUNDED AS PART OF FY20 OCT RELEASE*/
ROUND(CASE WHEN NP.GOODS_OR_SERVICE_TYPE='GOODS' THEN 
  CASE WHEN WPS.RU_SERVICE_CONTRACT_END_DTM <> '3500-01-01 00:00:00' AND ( CAST(WPS.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WPS.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS   NOT NULL 
        THEN  CAST((CAST(CAST(WPS.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(WPS.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
                                                  WHEN  WPS.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT > 0
                                                                  THEN WPS.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
   WHEN ( NP.BK_PRODUCT_ID LIKE 'SWOA%' OR  NP.BK_PRODUCT_ID LIKE '%ADJ%' ) AND NP.BK_PRODUCT_ID NOT LIKE 'SWOA-MX%' THEN NULL
    ELSE CASE
      WHEN NP.PRICING_UNIT_NAME = 'YEAR' THEN NP.PRICING_UNIT_DURATION_INT * 12 
      WHEN NP.PRICING_UNIT_NAME = 'MONTHS' THEN NP.PRICING_UNIT_DURATION_INT
      WHEN NP.PRICING_UNIT_NAME = 'DAYS' THEN   
       CAST(((NP.PRICING_UNIT_DURATION_INT*12(FLOAT))/365) AS DECIMAL(15,6))	  
   WHEN EL.BIZ_DEF_TERM IS NOT NULL THEN EL.BIZ_DEF_TERM
     WHEN EL.DURATION IS NOT NULL THEN EL.DURATION
   ELSE NULL
     END 
  END 
  
 ELSE 
 CASE WHEN WPS.RU_SERVICE_CONTRACT_END_DTM <> '3500-01-01 00:00:00' AND ( CAST(WPS.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WPS.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS   NOT NULL 
        THEN  CAST((CAST(CAST(WPS.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(WPS.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
                                                  WHEN  WPS.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT > 0
                                                                  THEN WPS.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
                  END 
 END)   DV_CONTRACT_DURATION

,
/*CASE    
 WHEN   WPS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN WPS.DV_ANNUALIZED_FLG  
 ELSE */
CASE  WHEN NP.GOODS_OR_SERVICE_TYPE='GOODS' THEN           
  CASE WHEN DV_CONTRACT_DURATION IS NULL THEN 'Y' 
   WHEN DV_CONTRACT_DURATION IS NOT NULL THEN
   CASE
     WHEN NP.MONETIZATION_TYPE_CD ='PERPETUAL' AND NP.ELA_FLG = 'Y' THEN 'Y'  
     WHEN COALESCE ( EX.EXCLUDE_FLAG,'N' ) = 'Y' THEN 'Y' 
     WHEN EX.EXCLUDE_FLAG IS NOT NULL AND EX.EXCLUDE_FLAG = 'N'  
     THEN     CASE  WHEN   DV_CONTRACT_DURATION >12   AND NP.MONETIZATION_TYPE_CD <>'USAGE'  THEN 'N' ELSE 'Y' END
WHEN NP.XCAT_FLG ='Y' 
 AND(NSO.BK_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649') 
OR FDM.BK_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649'))  AND NP.RU_BK_PRODUCT_FAMILY_ID='WBXEE'  THEN 'Y'
     WHEN DV_CONTRACT_DURATION >12 AND NP.MONETIZATION_TYPE_CD <>'USAGE'  /*AND NP.XCAT_FLG <>'Y'*//*svakulab*/ AND FDM.BK_DEAL_ID IS NULL THEN 'N' ELSE 'Y'
   END
  END 
  ELSE
CASE  WHEN DV_CONTRACT_DURATION IS NULL THEN 'Y' 
WHEN DV_CONTRACT_DURATION IS NOT NULL THEN
 CASE WHEN   DV_CONTRACT_DURATION >12 THEN 'N' ELSE 'Y' END
END
END   DV_ANNUALIZED_FLG
,
/*CASE    
 WHEN   WPS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN WPS.DV_ANNUALIZED_US_NET_AMT  
 ELSE*/
/*CASE WHEN DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                    WHEN DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                    ELSE DD_COMP_US_NET_PRICE_AMOUNT 
END  DV_ANNUALIZED_US_NET_AMT */
CASE WHEN DV_ANNUALIZED_FLG = 'Y' THEN EXTENDED_NET_PRICE_USD_AMOUNT
                                    WHEN DV_ANNUALIZED_FLG = 'N' THEN ( EXTENDED_NET_PRICE_USD_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                    ELSE EXTENDED_NET_PRICE_USD_AMOUNT 
END  DV_ANNUALIZED_US_NET_AMT
,
/*CASE    
 WHEN   WPS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN WPS.DV_MULTIYEAR_US_NET_AMT  
 ELSE*/
/*CASE WHEN DV_ANNUALIZED_FLG = 'Y'  THEN 0
  WHEN DV_ANNUALIZED_FLG='N' THEN 
 DD_COMP_US_NET_PRICE_AMOUNT -  DV_ANNUALIZED_US_NET_AMT
 ELSE DD_COMP_US_NET_PRICE_AMOUNT 
 END  DV_MULTIYEAR_US_NET_AMT */

CASE WHEN DV_ANNUALIZED_FLG = 'Y'  THEN 0
  WHEN DV_ANNUALIZED_FLG='N' THEN 
 EXTENDED_NET_PRICE_USD_AMOUNT -  DV_ANNUALIZED_US_NET_AMT
 ELSE 0 
 END  DV_MULTIYEAR_US_NET_AMT 
  , COALESCE(NPOS.BOOKINGS_POLICY_CD,'UNK') AS BOOKINGS_POLICY_CD


  FROM $$STGDB.WI_POS_SCA_REP_INCR_BKG WPS
  INNER JOIN $$SLSORDVWDB.N_POS_TRX_LINE_OFFER_ATRBTN NPOS
  ON NPOS.BK_POS_TRANSACTION_ID_INT=WPS.PD_BK_POS_TRANSACTION_ID_INT
  INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE NBTL 
   ON NBTL.BK_POS_TRANSACTION_ID_INT =WPS.PD_BK_POS_TRANSACTION_ID_INT
  INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY RSH
   ON WPS.PD_SALES_TERRITORY_KEY =  RSH.SALES_TERRITORY_KEY           
  INNER JOIN $$COMREFVWDB.N_PRODUCT NP
    ON NPOS.ATTRIBUTED_PRODUCT_KEY = NP.ITEM_KEY
  LEFT JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF      /* NP, NPF and ELC Joins added as part of Q2FY16 - CDBU - SA (Scientific Atlanta) Changes for CORP BOOKINGS FLAG, REVENUE RECOGNITION FLAG and NET SPREAD FLAG Columns */
   ON NP.RU_BK_PRODUCT_FAMILY_ID = NPF.BK_PRODUCT_FAMILY_ID
 LEFT OUTER JOIN (SELECT 
     SKU,INVENTORY_ITEM_ID,DURATION,END_DATE,BIZ_DEF_TERM,VERSION_NUMBER FROM $$ETLVWDB.EL_CG1_XXCFIR_PROD_SUBSCR_SKU 
     GROUP BY 1,2,3,4,5,6
     QUALIFY RANK() OVER (PARTITION BY SKU,INVENTORY_ITEM_ID ORDER BY END_DATE,VERSION_NUMBER DESC)=1
    )EL
ON NP.BK_PRODUCT_ID=EL.SKU

LEFT OUTER JOIN $$STGDB.WI_ATCCV_EXCLUDE_TRX EX 
  ON EX.EXCLUDE_VALUE =  ( 
       CASE WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN NP.RU_BK_PRODUCT_FAMILY_ID 
                         WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN NP.BK_PRODUCT_ID 
       WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
       END )


LEFT OUTER JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING  FDM
  ON NBTL.BK_DEAL_ID = FDM.BK_DEAL_ID

  
  LEFT JOIN $$ETLVWDB.EL_CDBU ELC
  ON NPF.BK_BUSINESS_UNIT_ID = ELC.BK_BUSINESS_UNIT_ID
  AND NP.GOODS_OR_SERVICE_TYPE = ELC.GOODS_OR_SERVICE_TYPE

/*ADDED BELOW BY-SVAKULAB as part of ICPM Q1FY19 XACT VIPTELA Annualization*/

LEFT OUTER JOIN 
  ( 
SELECT  
BKG_POS.BK_POS_TRANSACTION_ID_INT,
TRNWL.SALES_ORDER_LINE_KEY
 FROM   $$SLSORDVWDB.N_POS_TRANSACTION_LINE                      TPOS
INNER JOIN $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL    TRNWL
ON TRNWL.BK_POS_TRANSACTION_ID_INT=  TPOS.BK_POS_TRANSACTION_ID_INT
INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE       BKG_POS
ON BKG_POS.BK_POS_TRANSACTION_ID_INT                =  TPOS.BK_BOOKING_POS_TRX_ID_INT
WHERE TRNWL.MATCHING_MTHD_FOR_TAGGING_NAME  NOT LIKE ALL (		'%GSP%' ,	'%HQ%',  '%GU%')
AND TRNWL.SALES_ORDER_LINE_KEY > 0
UNION

SELECT 
TPOS.BK_POS_TRANSACTION_ID_INT,
TRNWL.SALES_ORDER_LINE_KEY
FROM  $$SLSORDVWDB.N_POS_TRANSACTION_LINE                          TPOS
INNER JOIN $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL        TRNWL
ON TRNWL.BK_POS_TRANSACTION_ID_INT= TPOS.BK_POS_TRANSACTION_ID_INT
WHERE TRNWL.MATCHING_MTHD_FOR_TAGGING_NAME  NOT LIKE ALL (		'%GSP%' ,	'%HQ%',  '%GU%')
AND TRNWL.SALES_ORDER_LINE_KEY > 0
GROUP BY 1,2
 )  SMC
ON NBTL.BK_POS_TRANSACTION_ID_INT= SMC.BK_POS_TRANSACTION_ID_INT  	

 LEFT OUTER JOIN
      $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
             ON SMC.SALES_ORDER_LINE_KEY   =NSOL.SALES_ORDER_LINE_KEY 
			 
  LEFT OUTER JOIN
     $$SLSORDVWDB.N_SALES_ORDER_TV NSO
	 ON NSOL.SALES_ORDER_KEY = NSO.SALES_ORDER_KEY/*ICPM Annualization-svakulab*/
/*End of ICPM Q1FY19 XACT VIPTELA Annualization*/	
  
  WHERE SOURCE_DELETED_FLG <> 'Y' 
  AND COALESCE(WPS.VLDTD_NET_UNIT_PRICE_USD_AMT,1) <> 0 
  AND WPS.POS_TRX_LN_PRDT_QTY <> 0 
  AND WPS.PD_SALES_COMMISSION_PCT <> 0 
  
  
  ) WI_F,
  
  (SELECT PROCESS_DATE,BK_FISCAL_YEAR_NUMBER_INT,BK_FISCAL_MONTH_NUMBER_INT,(BK_FISCAL_YEAR_NUMBER_INT*100 + BK_FISCAL_MONTH_NUMBER_INT) AS DV_FISCAL_YEAR_MTH_NUMBER_INT 
    FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL PDC,
                 $$COMREFVWDB.N_FISCAL_MONTH NFM 
  WHERE PDC.PROCESS_DATE BETWEEN FISCAL_MONTH_START_DATE AND FISCAL_MONTH_END_DATE)PD,
  
  (SELECT MAX(POS_ADJ_DETAIL_RECORD_NUM_INT) AS POS_ADJ_DETAIL_RECORD_NUM_INT, 
                    MAX(POS_ADJ_DETAIL_SEQ_NUM_INT) AS POS_ADJ_DETAIL_SEQ_NUM_INT 
    FROM $$TRANSLATIONDB.SM_DRVD_SCA_POS_ADJ_DETAILS)SM_TAB


Post SQL : 



Target3 Name : WI_DRVD_SCA_POS_DTL_BKG_F


Pre SQL : 



Post SQL : 
COLLECT STATS ON $$STGDB.WI_DRVD_SCA_POS_DTL_BKG_F;


Source4 Name : SQ_SM_DRVD_SCA_POS_ADJ_DETAILS


Pre SQL : 



SQL Query : 
SELECT	
(RANK() OVER (ORDER	BY SPAD.SK_RECORD_NUMBER_INT, SPAD.SK_SEQUENCE_NUMBER_INT)  +  SMPOS_MAX.MAX_POS_SGK_VAL)  AS ALLOCATED_POS_ADJ_KEY,
SPAD.SK_SEQUENCE_NUMBER_INT,
SPAD.SK_RECORD_NUMBER_INT,
USER AS EDW_CREATE_USER,
CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM 
FROM	
$$STGDB.WI_DRVD_SCA_POS_DTL_BKG_F   SPAD,
(
SELECT	COALESCE(MAX(ALLOCATED_POS_ADJ_KEY),0) MAX_POS_SGK_VAL  
FROM	$$TRANSLATIONDB.SM_DRVD_SCA_POS_ADJ_DETAILS ) SMPOS_MAX
WHERE	NOT EXISTS
(
SELECT	1 
FROM	$$TRANSLATIONDB.SM_DRVD_SCA_POS_ADJ_DETAILS SSPAD 
WHERE	SPAD.SK_RECORD_NUMBER_INT = SSPAD.POS_ADJ_DETAIL_RECORD_NUM_INT
	AND	SPAD.SK_SEQUENCE_NUMBER_INT = SSPAD.POS_ADJ_DETAIL_SEQ_NUM_INT)


Post SQL : 



Target4 Name : SM_DRVD_SCA_POS_ADJ_DETAILS


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP ('$$TRANSLATIONDB','SM_DRVD_SCA_POS_ADJ_DETAILS','D') ;