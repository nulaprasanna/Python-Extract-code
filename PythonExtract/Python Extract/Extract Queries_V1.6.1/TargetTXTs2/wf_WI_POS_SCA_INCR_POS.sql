


Source1 Name : SQ_WI_POS_SCA_INCR_POS


Pre SQL : 
DELETE FROM $$STGDB.WI_POS_SCA_INCR_POS ALL;


SQL Query : 
SELECT 
	COALESCE(POS_SCAAC_KEY,-999) AS POS_SCAAC_KEY,
	POS_TRX.BK_POS_TRX_ID_INT AS PD_BK_POS_TRANSACTION_ID_INT,
	POS_TRX.BASE_LIST_UNIT_PRDT_PRICE_AMT ,
	POS_TRX.DSTRBTR_RPTD_CST_UNT_PRC_AMT  ,
	POS_TRX.VALIDATED_NET_UNT_PRC_USD_AMT ,
	POS_TRX.VALUATION_PRICE_USD_AMT        ,
	COALESCE(PD_SALES_TERRITORY_KEY,-999) AS PD_SALES_TERRITORY_KEY,
	COALESCE(PD_SALES_REP_NUM,'UNKNOWN') AS PD_SALES_REP_NUM ,
	COALESCE(DISTRIBUTOR_OFFSET_FLG,'=') AS DISTRIBUTOR_OFFSET_FLG,
	COALESCE(PD_SALES_COMMISSION_PCT,0)  AS PD_SALES_COMMISSION_PCT,
	COALESCE(SK3_SC_ID_INT,-999) AS SC_ID_INT ,
	COALESCE(SK_TRX_SC_ID_INT,-999) AS SK_TRX_SC_ID_INT ,
	COALESCE(SOURCE_DELETED_FLG,'=') AS SOURCE_DELETED_FLG,
	POS_TRX.EDW_UPDATE_DTM AS LAST_UPDATED_DTM,
	CAST( POS_TRX.EDW_UPDATE_DTM AS DATE ) DV_LAST_UPDATED_DT,
	POS_TRX.EDW_UPDATE_DTM,
	CASE WHEN ( POS_TRX.EDW_UPDATE_DTM > COALESCE(SCA.SALES_CREDIT_START_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))))  
	           AND ( CAST(POS_TRX.EDW_UPDATE_DTM AS DATE) = CAST( COALESCE(SCA.SALES_CREDIT_START_DTM , CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))) AS DATE ))
			THEN COALESCE(SCA.SALES_CREDIT_START_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))  
         WHEN POS_TRX.EDW_UPDATE_DTM > COALESCE(SCA.SALES_CREDIT_START_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))  THEN POS_TRX.EDW_UPDATE_DTM 
		    ELSE COALESCE( SCA.SALES_CREDIT_START_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))
END START_DTM,
	COALESCE(SCA.EXPIRATION_DTM, CAST('3500-01-01 00:00:00' AS TIMESTAMP(0))) AS END_TV_DTM,
	COALESCE(DISTRIBUTOR_BUCKET_FLG,'=') AS DISTRIBUTOR_BUCKET_FLG,
	POS_TRX.POS_TRX_LN_PRDT_QTY   ,
	/*ADDED AS PART OF DSV Q1FY16*/
	POS_LN.DSV_OR_POS_TYPE_CD AS DSV_OR_POS_TYPE_CD,
	POS_LN.POS_RETURN_ROLE AS POS_RETURN_ROLE
	 /*ADDED AS PART OF DSV Q1FY16*/
/* ADDED AS PART OF JUNE 2018 RELEASE AMY-NRT SCOPE*/
,POS_TRX.RU_SERVICE_CONTRACT_START_DTM
,POS_TRX.RU_SERVICE_CONTRACT_END_DTM
,POS_TRX.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
	 QUALIFY RANK() OVER (PARTITION BY SCA.PD_BK_POS_TRANSACTION_ID_INT, SCA.DISTRIBUTOR_OFFSET_FLG ORDER BY END_TV_DTM DESC  )=1
FROM $$SLSORDVWDB.N_POS_TRANSACTION_LN_DELTA_TV POS_TRX
LEFT JOIN $$NRTNCRVWDB.N_POS_SCA_ADJ_CNG_DRCT_NRT_TV SCA /*ADDED AS PART OF DSV Q1FY16*/
ON SCA.PD_BK_POS_TRANSACTION_ID_INT= POS_TRX.BK_POS_TRX_ID_INT 
INNER JOIN $$SLSORDVWDB.N_POS_TRANSACTION_LINE POS_LN /*ADDED AS PART OF DSV Q1FY16*/
ON POS_LN.BK_POS_TRANSACTION_ID_INT= POS_TRX.BK_POS_TRX_ID_INT 
WHERE POS_TRX.EDW_UPDATE_DTM  >'$$LastExtractDate'
AND POS_TRX.EDW_UPDATE_DTM BETWEEN SCA.SALES_CREDIT_START_DTM AND SCA.EXPIRATION_DTM
/* AND START_DTM >'$$LastExtractDate' */


Post SQL : 



Target1 Name : WI_POS_SCA_INCR_POS


Pre SQL : 



Post SQL : 
COLLECT STATS ON $$STGDB.WI_POS_SCA_INCR_POS;


Source2 Name : SQ_WI_POS_SCA_INCR_POS1


Pre SQL : 



SQL Query : 
SELECT 
               COALESCE(POS_SCAAC_KEY,-999) AS POS_SCAAC_KEY,
               NPOS.BK_POS_TRANSACTION_ID_INT AS PD_BK_POS_TRANSACTION_ID_INT,
               POS_TRX.BASE_LIST_UNIT_PROD_PRICE_AMT AS BASE_LIST_UNIT_PRDT_PRICE_AMT  ,
               POS_TRX.DISTI_RPTD_COST_UNIT_PRICE_AMT AS DSTRBTR_RPTD_CST_UNT_PRC_AMT    ,
               POS_TRX.VLDTD_NET_UNIT_PRICE_USD_AMT AS VALIDATED_NET_UNT_PRC_USD_AMT ,
               POS_TRX.VALUATION_PRICE_USD_AMOUNT AS VALUATION_PRICE_USD_AMT        ,
               COALESCE(PD_SALES_TERRITORY_KEY,-999) AS PD_SALES_TERRITORY_KEY,
               COALESCE(PD_SALES_REP_NUM,'UNKNOWN') AS PD_SALES_REP_NUM ,
               COALESCE(DISTRIBUTOR_OFFSET_FLG,'=') AS DISTRIBUTOR_OFFSET_FLG,
               COALESCE(PD_SALES_COMMISSION_PCT,0)  AS PD_SALES_COMMISSION_PCT,
               COALESCE(SK3_SC_ID_INT,-999) AS SC_ID_INT ,
			   COALESCE(SK_TRX_SC_ID_INT,-999) AS SK_TRX_SC_ID_INT ,
               COALESCE(SOURCE_DELETED_FLG,'=') AS SOURCE_DELETED_FLG,
               POS_TRX.EDW_UPDATE_DATETIME AS LAST_UPDATED_DTM,
               CAST( POS_TRX.EDW_UPDATE_DATETIME AS DATE ) DV_LAST_UPDATED_DT,
               POS_TRX.EDW_UPDATE_DATETIME,    
               CASE WHEN ( NPOS.EDW_UPDATE_DTM > COALESCE(SCA.SALES_CREDIT_START_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))))  
                          AND ( CAST(NPOS.EDW_UPDATE_DTM AS DATE) = CAST( COALESCE(SCA.SALES_CREDIT_START_DTM , CAST('1900-01-01 00:00:00' AS TIMESTAMP(0))) AS DATE ))
                                             THEN COALESCE(SCA.SALES_CREDIT_START_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))  
         WHEN NPOS.EDW_UPDATE_DTM > COALESCE(SCA.SALES_CREDIT_START_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))  THEN NPOS.EDW_UPDATE_DTM 
                                  ELSE COALESCE( SCA.SALES_CREDIT_START_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))
END START_DTM,

COALESCE(SCA.EXPIRATION_DTM, CAST('3500-01-01 00:00:00' AS TIMESTAMP(0))) AS END_TV_DTM,
                              COALESCE(DISTRIBUTOR_BUCKET_FLG,'=') AS DISTRIBUTOR_BUCKET_FLG,
               POS_TRX.POS_TRX_LINE_PRODUCT_QUANT ,
			   /*ADDED AS PART OF DSV Q1FY16*/
				POS_TRX.DSV_OR_POS_TYPE_CD AS DSV_OR_POS_TYPE_CD,
				POS_TRX.POS_RETURN_ROLE AS POS_RETURN_ROLE
			   /*ADDED AS PART OF DSV Q1FY16*/	
/* ADDED AS PART OF JUNE 2018 RELEASE AMY-NRT SCOPE*/
,POS_TRX.RU_SERVICE_CONTRACT_START_DTM
,POS_TRX.RU_SERVICE_CONTRACT_END_DTM
,POS_TRX.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
FROM $$SLSORDVWDB.N_POS_TRANSACTION_LINE POS_TRX
INNER JOIN 
               (
              SELECT BK_POS_TRANSACTION_ID_INT,EDW_UPDATE_DTM
              FROM $$SLSORDVWDB.N_POS_TRX_LINE_OFFER_ATRBTN_TV
              WHERE END_TV_DTM='3500-01-01 00:00:00'
               AND  EDW_UPDATE_DTM  >  (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES WHERE JOB_STREAM_ID='wf_WI_POS_SCA_INCR_POS' AND TABLE_NAME='N_POS_TRX_LINE_OFFER_ATRBTN_TV')
              QUALIFY ROW_NUMBER() OVER(PARTITION BY BK_POS_TRANSACTION_ID_INT ORDER BY EDW_UPDATE_DTM DESC)=1
              )  NPOS
ON NPOS.BK_POS_TRANSACTION_ID_INT=POS_TRX.BK_POS_TRANSACTION_ID_INT
INNER JOIN $$NRTNCRVWDB.N_POS_SCA_ADJ_CNG_DRCT_NRT_TV SCA
ON SCA.PD_BK_POS_TRANSACTION_ID_INT= POS_TRX.BK_POS_TRANSACTION_ID_INT 
AND SCA.END_TV_DTM='3500-01-01 00:00:00' 
WHERE NPOS.BK_POS_TRANSACTION_ID_INT NOT IN
(
SELECT PD_BK_POS_TRANSACTION_ID_INT FROM $$STGDB.WI_POS_SCA_INCR_POS
GROUP BY 1
)


Post SQL : 



Target2 Name : WI_POS_SCA_INCR_POS3


Pre SQL : 



Post SQL : 
COLLECT STATS ON $$STGDB.WI_POS_SCA_INCR_POS;

/*Updating the max date column to pull the incremental records-Q2FY15*/

UPDATE  $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES
SET LAST_EXTRACT_DATE=(SEL MAX(EDW_UPDATE_DTM) FROM $$SLSORDDB.N_POS_TRX_LINE_OFFER_ATRBTN_TV) WHERE JOB_STREAM_ID='wf_WI_POS_SCA_INCR_POS' AND TABLE_NAME='N_POS_TRX_LINE_OFFER_ATRBTN_TV';