


Source1 Name : SQ_W_ATTR_PRDT_AS_NEW_OR_RNWL


Pre SQL : 



SQL Query : 
SELECT
 ATTR_PRDT_AS_NEW_OR_RNWL_KEY,
 DEAL_QUOTE_LINE_KEY,
 SK_RTR_ATTRIBUTION_ID,
 SALES_ORDER_LINE_KEY,
 ATTR_PRDT_KEY,
 BK_QUOTE_NUM,
 BK_SRC_EFFECTIVE_START_DT,
 SRC_EFFECTIVE_END_DT,
 COVERED_PRDT_KEY,
 ATTR_PRDT_QTY,
 ATTR_PCT,
 ATTR_NET_PRICE_LOCAL_AMT,
 ATTR_EXTD_PRICE_LOCAL_AMT,
 SALES_MOTION_CD,
 SALES_MOTION_CONTEXT_NAME,
 SRC_CREATED_DTM,
 DV_SRC_CREATED_DT,
 SRC_CREATED_CSCO_WRKR_PRTY_KEY,
 SRC_LAST_UPDATED_DTM,
 DV_SRC_LAST_UPDATED_DT,
 SRC_LST_UPD_CSCO_WRKR_PRTY_KEY,
 ERP_CUST_ACCT_LOC_KEY,
 AS_TS_CD,
 SK_LINE_REF_NUM,
 BK_AS_ARCHITECTURE_NAME,
 BK_TECH_GROUP_ID,
 BK_DV_ATTR_PRDT_OFFER_TYPE_NAME,
 TRANSACTION_CR_PARTY_KEY,
 SK_ERP_BKGS_TRX_ID,
 SK_RENEW_CONTRACT_LINE_ID,
 SK_AS_PARENT_INVENTORY_ITEM_ID,
 ITEM_CATEGORY_NAME,
 ERP_TRX_VERSION_INT,
 SS_CD,
 SK_ATTRIBUTION_ID_INT,
 EDW_CREATE_DTM,
 EDW_CREATE_USER,
 EDW_UPDATE_DTM,
 EDW_UPDATE_USER, 
 START_TV_DTM,
 END_TV_DTM,
 ATTR_PRDT_CLASS_NAME,
 HQ_CR_PRTY_KEY,
 RENEWAL_REF_ID,
 RENEWAL_REF_CD,
 SMR_TAGGING_FAILURE_RSN_CD,
 SALES_MOTION_TIMING_CD,
 MANUAL_OVERRIDE_ROLE,           
 REQUESTING_CSCO_WRKR_PRTY_KEY,                       
 SLS_MTN_CORRECTION_CASE_NUM,                   
 SLS_MTN_CORRECTION_CMNT 
 FROM $$WORKDB.W_ATTR_PRDT_AS_NEW_OR_RNWL WSISN


Post SQL : 



Target1 Name : N_ATTR_PRDT_AS_NEW_OR_RNWL_TV


Pre SQL : 
UPDATE N_ATTR_TV
FROM $$SLSORDVWDB.N_ATTR_PRDT_AS_NEW_OR_RNWL_TV N_ATTR_TV,
     ( SELECT SK_ERP_BKGS_TRX_ID,ERP_TRX_VERSION_INT,MAX(START_TV_DTM) AS START_TV_DTM
        FROM $$STGDB.WI_OPL_XXGCO_RTR_ATTRIBUTION WI
       GROUP BY 1,2
      ) WI        
SET 
	END_TV_DTM  = WI.START_TV_DTM - INTERVAL '1' MINUTE,
	EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0), /* added as part of CR CHG0382388 */
	EDW_UPDATE_USER = CURRENT_USER /* added as part of CR CHG0382388 */
WHERE WI.SK_ERP_BKGS_TRX_ID = N_ATTR_TV.SK_ERP_BKGS_TRX_ID
AND WI.START_TV_DTM <> N_ATTR_TV.START_TV_DTM
AND WI.ERP_TRX_VERSION_INT <>N_ATTR_TV.ERP_TRX_VERSION_INT
  AND N_ATTR_TV.END_TV_DTM = '3500-01-01 00:00:00' ;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$SLSORDDB','N_ATTR_PRDT_AS_NEW_OR_RNWL_TV','D');

DELETE FROM $$STGDB.SMT_RETRO_UPD;

INSERT INTO $$STGDB.SMT_RETRO_UPD
SELECT  SALES_ORDER_LINE_KEY, SMT FROM (
 SELECT  A.*,
 CASE  WHEN  RTRIM( LTRIM(SERVICE_STATUS_CD)) <>'TERMINATED'  THEN  (
 CASE WHEN CNTRCT_LINE_END_QUARTER_ID - CISCO_BOOKED_QUARTER_ID > 0  THEN 'EARLY' 
 WHEN  CNTRCT_LINE_END_QUARTER_ID -  CISCO_BOOKED_QUARTER_ID =0 THEN CASE WHEN (SVC_CNTRCT_LINE_END_DTM > RU_CISCO_BOOKED_DATETIME ) THEN  'ONTIME' ELSE 'LATE IN QUARTER' END 
 WHEN CNTRCT_LINE_END_QUARTER_ID - CISCO_BOOKED_QUARTER_ID < 0 THEN 
                             CASE WHEN ( CASE WHEN(CAST(RU_CISCO_BOOKED_DATETIME  AS DATE)-CAST( SVC_CNTRCT_LINE_END_DTM AS DATE)) <0 THEN ((CAST(RU_CISCO_BOOKED_DATETIME  AS DATE)-CAST( SVC_CNTRCT_LINE_END_DTM AS DATE)) *-1) ELSE ((CAST(RU_CISCO_BOOKED_DATETIME  AS DATE)-CAST( SVC_CNTRCT_LINE_END_DTM AS DATE))) END )  <= 365 THEN 'LATE' ELSE 'RECAPTURE' END 
 END )
 WHEN RTRIM( LTRIM(SERVICE_STATUS_CD)) ='TERMINATED'  THEN  (
 CASE WHEN  TERMINATED_QUARTER_ID - CISCO_BOOKED_QUARTER_ID > 0  THEN 'EARLY' 
 WHEN  TERMINATED_QUARTER_ID -  CISCO_BOOKED_QUARTER_ID =0 THEN CASE WHEN (TERMINATED_DTM > RU_CISCO_BOOKED_DATETIME ) THEN  'ONTIME' ELSE 'LATE IN QUARTER' END 
 WHEN TERMINATED_QUARTER_ID - CISCO_BOOKED_QUARTER_ID < 0 THEN 
                                 CASE WHEN (CASE WHEN (CAST(RU_CISCO_BOOKED_DATETIME  AS DATE)-CAST( TERMINATED_DTM AS DATE))<0  THEN ( (CAST(RU_CISCO_BOOKED_DATETIME  AS DATE)-CAST( TERMINATED_DTM AS DATE))*-1) ELSE ( (CAST(RU_CISCO_BOOKED_DATETIME  AS DATE)-CAST( TERMINATED_DTM AS DATE))) END ) <= 365 THEN 'LATE' ELSE 'RECAPTURE' END 
 END )  ELSE 'UNKNOWN' END  SMT	
 FROM ( SELECT    ITEM_CATEGORY_NAME
 ,ATTR_NET_PRICE_LOCAL_AMT
 ,SK_RENEW_CONTRACT_LINE_ID
 ,RENEWAL_REF_ID
 ,RENEWAL_REF_CD
 ,SCL.BK_SVC_CNTRCT_LINE_START_DTM
 ,SCL.SVC_CNTRCT_LINE_END_DTM
 ,SCL.TERMINATED_DTM           
 ,SCL.SERVICE_STATUS_CD
 ,R.SALES_ORDER_LINE_KEY  
 , B.RU_CISCO_BOOKED_DATETIME
 ,CAST(CASE WHEN EED.DV_FISCAL_QUARTER_ID LIKE '%Q1%' THEN  OREPLACE(EED.DV_FISCAL_QUARTER_ID,'Q1','01')
            WHEN EED.DV_FISCAL_QUARTER_ID LIKE '%Q2%' THEN  OREPLACE(EED.DV_FISCAL_QUARTER_ID,'Q2','02')
            WHEN EED.DV_FISCAL_QUARTER_ID LIKE '%Q3%' THEN  OREPLACE(EED.DV_FISCAL_QUARTER_ID,'Q3','03')
            WHEN EED.DV_FISCAL_QUARTER_ID LIKE '%Q4%' THEN  OREPLACE(EED.DV_FISCAL_QUARTER_ID,'Q4','04')
            END AS INTEGER ) AS  CNTRCT_LINE_END_QUARTER_ID
 ,CAST(CASE WHEN EED1.DV_FISCAL_QUARTER_ID LIKE '%Q1%' THEN  OREPLACE(EED1.DV_FISCAL_QUARTER_ID,'Q1','01')
            WHEN EED1.DV_FISCAL_QUARTER_ID LIKE '%Q2%' THEN  OREPLACE(EED1.DV_FISCAL_QUARTER_ID,'Q2','02')
            WHEN EED1.DV_FISCAL_QUARTER_ID LIKE '%Q3%' THEN  OREPLACE(EED1.DV_FISCAL_QUARTER_ID,'Q3','03')
            WHEN EED1.DV_FISCAL_QUARTER_ID LIKE '%Q4%' THEN  OREPLACE(EED1.DV_FISCAL_QUARTER_ID,'Q4','04')
            END AS INTEGER ) AS  CISCO_BOOKED_QUARTER_ID
 ,CAST(CASE WHEN EED2.DV_FISCAL_QUARTER_ID LIKE '%Q1%' THEN  OREPLACE(EED2.DV_FISCAL_QUARTER_ID,'Q1','01')
 WHEN EED2.DV_FISCAL_QUARTER_ID LIKE '%Q2%' THEN  OREPLACE(EED2.DV_FISCAL_QUARTER_ID,'Q2','02')
 WHEN EED2.DV_FISCAL_QUARTER_ID LIKE '%Q3%' THEN  OREPLACE(EED2.DV_FISCAL_QUARTER_ID,'Q3','03')
 WHEN EED2.DV_FISCAL_QUARTER_ID LIKE '%Q4%' THEN  OREPLACE(EED2.DV_FISCAL_QUARTER_ID,'Q4','04')
 END AS INTEGER ) AS  TERMINATED_QUARTER_ID
 FROM $$SLSORDVWDB.N_ATTR_PRDT_AS_NEW_OR_RNWL_TV  R
 INNER JOIN $$SERVICEVWDB.N_SVC_CNTRCT_LN_TECH_SERVICES SCL 
 ON CAST( REGEXP_REPLACE(RENEWAL_REF_ID, '[A-ZA-Z/.]+', '')   AS  BIGINT) = SCL.SK_ID_LINT 
 INNER  JOIN (SELECT  SO.RU_CISCO_BOOKED_DATETIME , SO.BK_SO_NUMBER_INT, SO.SALES_ORDER_KEY, SOL.SALES_ORDER_LINE_KEY
 FROM  $$SLSORDVWDB.N_SALES_ORDER  SO
 INNER  JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE  SOL
 ON SO.SALES_ORDER_KEY  = SOL.SALES_ORDER_KEY  ) B
 ON B.SALES_ORDER_LINE_KEY = R.SALES_ORDER_LINE_KEY  
 INNER  JOIN  $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR EED
 ON  CAST( SCL.SVC_CNTRCT_LINE_END_DTM  AS DATE ) = EED.CALENDAR_DATE       
 INNER  JOIN  $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR EED1
 ON  CAST(B.RU_CISCO_BOOKED_DATETIME  AS DATE ) = EED1.CALENDAR_DATE       
 LEFT  JOIN  $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR EED2
 ON  CAST(SCL.TERMINATED_DTM  AS DATE ) = EED2.CALENDAR_DATE       
 WHERE   R.SALES_MOTION_CD = 'RENEW' 
AND  R.SS_CD = 'OPL'
AND R.SALES_MOTION_TIMING_CD = 'UNKNOWN'
AND END_TV_DTM = '3500-01-01 00:00:00'
AND CAST(R.START_TV_DTM AS DATE)=CURRENT_DATE-1
-- AND LENGTH(CAST(SK_RTR_ATTRIBUTION_ID AS VARCHAR(10))) < 10 
 AND REGEXP_INSTR(RENEWAL_REF_ID,'^[A-ZA-Z]+')=0
 AND RENEWAL_REF_CD =    'RENEW COVERED LINE ID') A
 )  B   QUALIFY ROW_NUMBER()  OVER  (PARTITION BY  SALES_ORDER_LINE_KEY ORDER BY ATTR_NET_PRICE_LOCAL_AMT DESC, 
  (CASE  WHEN  SMT = 'ONTIME' THEN 6  WHEN SMT= 'LATE IN QUARTER'  THEN 5  WHEN  SMT = 'EARLY'  THEN 4 WHEN SMT = 'LATE' THEN 3 WHEN SMT= 'RECAPTURE'  THEN  2 WHEN SMT= 'UNKNOWN'  THEN  1 END )
  DESC)= 1;

UPDATE NATTR FROM
$$SLSORDVWDB.N_ATTR_PRDT_AS_NEW_OR_RNWL_TV  NATTR
,$$STGDB.SMT_RETRO_UPD SMTR
SET SALES_MOTION_TIMING_CD = SMTR.SALES_MOTION_TIMING_CD,
EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0), /* added as part of CR CHG0382388 */
EDW_UPDATE_USER='CISCO_BOOKED_DATE_SMT_UPD'
WHERE NATTR.SALES_ORDER_LINE_KEY = SMTR.SALES_ORDER_LINE_KEY
AND NATTR.END_TV_DTM = '3500-01-01 00:00:00'
AND NATTR.SALES_MOTION_CD = 'RENEW'
AND RENEWAL_REF_CD =    'RENEW COVERED LINE ID'
AND COALESCE( NATTR.SALES_MOTION_TIMING_CD, 'UNKNOWN')  <> COALESCE(SMTR.SALES_MOTION_TIMING_CD, 'UNKNOWN') ;

COLLECT STATS COLUMN (SALES_ORDER_LINE_KEY ) ON $$STGDB.SMT_RETRO_UPD;


Source2 Name : SQ_N_ATTR_PRDT_AS_NEW_OR_RNWL_TV


Pre SQL : 



SQL Query : 
SELECT
 ATTR_PRDT_AS_NEW_OR_RNWL_KEY,
 DEAL_QUOTE_LINE_KEY,
 SK_RTR_ATTRIBUTION_ID,
 SALES_ORDER_LINE_KEY,
 ATTR_PRDT_KEY,
 BK_QUOTE_NUM,
 BK_SRC_EFFECTIVE_START_DT,
 SRC_EFFECTIVE_END_DT,
 COVERED_PRDT_KEY,
 ATTR_PRDT_QTY,
 ATTR_PCT,
 ATTR_NET_PRICE_LOCAL_AMT,
 ATTR_EXTD_PRICE_LOCAL_AMT,
 SALES_MOTION_CD,
 SALES_MOTION_CONTEXT_NAME,
 SRC_CREATED_DTM,
 DV_SRC_CREATED_DT,
 SRC_CREATED_CSCO_WRKR_PRTY_KEY,
 SRC_LAST_UPDATED_DTM,
 DV_SRC_LAST_UPDATED_DT,
 SRC_LST_UPD_CSCO_WRKR_PRTY_KEY,
 ERP_CUST_ACCT_LOC_KEY,
 AS_TS_CD,
 SK_LINE_REF_NUM,
 BK_AS_ARCHITECTURE_NAME,
 BK_TECH_GROUP_ID,
 BK_DV_ATTR_PRDT_OFFER_TYPE_NAME,
 TRANSACTION_CR_PARTY_KEY,
 SK_ERP_BKGS_TRX_ID,
 SK_RENEW_CONTRACT_LINE_ID,
 SK_AS_PARENT_INVENTORY_ITEM_ID,
 ITEM_CATEGORY_NAME,
 ERP_TRX_VERSION_INT,
 SS_CD,
 SK_ATTRIBUTION_ID_INT,
 EDW_CREATE_DTM,
 EDW_CREATE_USER,
 EDW_UPDATE_DTM,
 EDW_UPDATE_USER,
 ATTR_PRDT_CLASS_NAME,
 HQ_CR_PRTY_KEY,
 RENEWAL_REF_ID,
 RENEWAL_REF_CD,
 SMR_TAGGING_FAILURE_RSN_CD,
 SALES_MOTION_TIMING_CD,
 MANUAL_OVERRIDE_ROLE,           
 REQUESTING_CSCO_WRKR_PRTY_KEY,                       
 SLS_MTN_CORRECTION_CASE_NUM,                   
 SLS_MTN_CORRECTION_CMNT 
 FROM $$SLSORDVWDB.N_ATTR_PRDT_AS_NEW_OR_RNWL_TV NXSSIS
 WHERE NXSSIS.END_TV_DTM=CAST('3500-01-01 00:00:00' AS TIMESTAMP(0))


Post SQL : 



Target2 Name : N_ATTR_PRDT_AS_NEW_OR_RNWL


Pre SQL : 
DELETE FROM $$SLSORDVWDB.N_ATTR_PRDT_AS_NEW_OR_RNWL ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$SLSORDDB','N_ATTR_PRDT_AS_NEW_OR_RNWL','D');


DELETE FROM $$STGDB.WI_TTS_SOWB_SOL_LINES ;

INSERT INTO $$STGDB.WI_TTS_SOWB_SOL_LINES
SELECT 
	NSOL.SALES_ORDER_LINE_KEY ,
	NSOL.SALES_MOTION_CD,
	CASE WHEN NSOL.SALES_MOTION_CD = 'RENEW' THEN NSOL.SALES_MOTION_TIMING_NAME 
	ELSE 'UNKNOWN'
	END SALES_MOTION_TIMING_CD	
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL 
  WHERE NSOL.SS_CODE = 'CG' 
   /*AND NOT EXISTS ( SELECT 1 FROM $$SLSORDVWDB.N_ATTR_PRDT_AS_NEW_OR_RNWL ATT WHERE ATT.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY )*/
   AND ( EXISTS (
    SELECT 1 FROM (SELECT 
       P.ITEM_KEY
       FROM
       $$COMREFVWDB.N_PRODUCT P
       INNER JOIN 
       $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.ITEM_KEY = SFH.ITEM_KEY
       WHERE P.PRDT_SETUP_CLASSIFICATION_CD <> 'SOFTWARE' --EXCLUDE SW
       AND SFH.BK_SERVICE_CATEGORY_ID = 'TECHNICAL SUPPORT SERVICES' 
       AND SFH.BK_ALLOCATED_SERVC_GROUP_ID NOT IN
       ( 'AS CORE' ,  'AS SUBSCRIPTION' , 'FOCUSED TECHNICAL SUPPORT SERVICES' , 'CLOUD MANAGED SERVICES' )--EXCLUDE FTS,CMS,AS
       AND RU_BK_SERVICE_PROD_SUBGROUP_ID NOT IN (SELECT BK_PRDT_SUBGROUP_ID FROM ( SELECT * FROM $$SERVICEVWDB.N_GENERIC_SVC_PRDT_ATTR WHERE BK_GSP_ATTR_NAME = 'SW SERVICE CATEGORY' ) WI ) --EXCLUDE SWSS
       ) WI
     WHERE NSOL.PRODUCT_KEY = WI.ITEM_KEY
   )
   OR (NSOL.BK_SO_SRC_NAME IN ('Manual', 'Copy' ) AND NSOL.PRODUCT_KEY NOT IN ( SELECT P.ITEM_KEY FROM
      $$COMREFVWDB.N_PRODUCT P
      INNER JOIN 
      $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.ITEM_KEY = SFH.ITEM_KEY
      AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  IN ( 'AS FIXED', 'AS TRANSACTION' )
     )
                 )
   )
GROUP BY 1,2,3 ;

COLLECT STATS COLUMN (SALES_ORDER_LINE_KEY ) ON $$STGDB.WI_TTS_SOWB_SOL_LINES ;