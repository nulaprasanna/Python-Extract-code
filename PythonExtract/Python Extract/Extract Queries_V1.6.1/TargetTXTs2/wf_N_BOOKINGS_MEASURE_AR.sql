


Source1 Name : SQ_W_BOOKINGS_MEASURE1


Pre SQL : 
/*COMMENTING CONTRACT AND ANNUITY COLS UPDATE AS PART OF ACV FY21*/

/*UPDATE BM FROM 
 $$WORKDB.W_BOOKINGS_MEASURE BM , 
 $$SLSORDVWDB.N_SALES_ORDER_LINE_TV SOL
 SET 
 RU_SERVICE_CONTRACT_START_DTM = SOL.RU_SERVICE_CONTRACT_START_DTM,
 RU_SERVICE_CONTRACT_END_DTM = SOL.RU_SERVICE_CONTRACT_END_DTM,
 DV_CONTRACT_DURATION = ROUND(CAST((CAST(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )),
 DV_ANNUALIZED_FLG = (CASE  WHEN SOL.RU_SERVICE_CONTRACT_END_DTM IS NULL THEN 'Y' 
                            WHEN SOL.RU_SERVICE_CONTRACT_START_DTM IS NULL THEN 'Y' 
                            WHEN SOL.RU_SERVICE_CONTRACT_END_DTM < SOL.RU_SERVICE_CONTRACT_START_DTM THEN 'Y' 
                            /* Changed as part of FY20 Oct 6th release
          WHEN (CAST (((CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)) ) AS INTEGER) -365) > 0 THEN  'N' 
          */
  /*        WHEN ROUND(CAST((CAST(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )) > 12 THEN 'N' 
 ELSE 'Y' END),
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER = USER                                             
 WHERE BM.SERVICE_FLG = 'Y' 
 AND BM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY 
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR';*/
 
 /* Added as part of ICPM FY16Q1 start */
 /*AR  USING CONTRACT TERM*/
 /*UPDATE BM FROM 
 $$WORKDB.W_BOOKINGS_MEASURE BM , 
 $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV  SOL
 SET 
 DV_CONTRACT_DURATION = ROUND(RU_SRVC_CNTRCT_DRTN_MNTHS_CNT),
 DV_ANNUALIZED_FLG =CASE WHEN ROUND(RU_SRVC_CNTRCT_DRTN_MNTHS_CNT) >12 THEN  'N'  ELSE 'Y' END, /* Changed as part of FY20 Oct 6th release */
 /*EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER=USER
 WHERE BM.SERVICE_FLG = 'Y' 
 AND BM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY 
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 AND DV_CONTRACT_DURATION IS NULL;*/
 
 /* Added as part of ICPM FY16Q1 end  */
 
 /*UPDATE BM FROM 
 $$WORKDB.W_BOOKINGS_MEASURE BM 
 SET 
 DV_ANNUALIZED_US_NET_AMT= (CASE WHEN DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                     WHEN DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                     ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
 DV_MULTIYEAR_US_NET_AMT =   DD_COMP_US_NET_PRICE_AMOUNT -  (CASE  WHEN DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                                                      WHEN DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                                                      ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) ,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER=USER
 WHERE BM.SERVICE_FLG = 'Y'
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL) 
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR';*/
 
 /* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */
 
 UPDATE WBM
 FROM 
  $$WORKDB.W_BOOKINGS_MEASURE WBM,
  (SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.N_SALES_ORDER_LINE 
  WHERE SALES_ORDER_LINE_KEY > 0 -- AND RTNR_ELGIBILITY_FLG <> 'N' SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging
  AND SS_CODE = 'CG'
  GROUP BY 1) SOL,
  ( SELECT SK_SALES_MOTION_ATTRIB_KEY,
   DV_TRANSACTION_ID,
   DV_ENTERPRISE_INV_SKU_ID,
   DV_TRX_TYPE 
   FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION 
   WHERE END_TV_DTM  = '3500-01-01 00:00:00' 
     AND DV_TRX_TYPE = 'AR'
   GROUP BY 1,2,3,4
   ) MT
 SET SK_SALES_MOTION_ATTRIB_KEY = MT.SK_SALES_MOTION_ATTRIB_KEY
 WHERE SOL.SALES_ORDER_LINE_KEY=WBM.DV_SALES_ORDER_LINE_KEY
 AND MT.DV_TRANSACTION_ID = WBM.DV_SALES_ORDER_LINE_KEY
 AND MT.DV_ENTERPRISE_INV_SKU_ID = WBM.DV_PRODUCT_KEY
 AND MT.DV_TRX_TYPE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE  
 AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='AR'
 /*AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY : Commented as part of ACVFY21 Changes*/
 AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE WBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );
 
 /* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */
 
 
 UPDATE WBM
  FROM 
   $$WORKDB.W_BOOKINGS_MEASURE WBM,
   ( SELECT SK_SALES_MOTION_ATTRIB_KEY,
    DV_TRANSACTION_ID,
    DV_ENTERPRISE_INV_SKU_ID,
    DV_TRX_TYPE 
    FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION 
    WHERE END_TV_DTM  = '3500-01-01 00:00:00' 
      AND DV_TRX_TYPE = 'AR_N'
    GROUP BY 1,2,3,4
    ) MT
  SET SK_SALES_MOTION_ATTRIB_KEY = MT.SK_SALES_MOTION_ATTRIB_KEY
  WHERE MT.DV_TRANSACTION_ID = WBM.DV_AR_TRX_LINE_KEY
  AND MT.DV_ENTERPRISE_INV_SKU_ID = WBM.DV_PRODUCT_KEY
  AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='AR'
  /*AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY :Commented as part of ACVFY21 Changes*/
   AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE WBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE )
AND WBM.DV_SALES_ORDER_LINE_KEY < 0; /* AR NAPLD UPDATE CONDITION FOR AR MNL UPLD*/
  
 /*-- UPDATE FOR W_BOOKINGS_MEASURE -- AR- */
 
 UPDATE WBM
  FROM 
   $$WORKDB.W_BOOKINGS_MEASURE WBM,
   ( SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  WHERE SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND SS_CODE = 'CG'
    AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
					WHERE SQ.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY 
					  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' ) /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
  GROUP BY 1) SOL
  SET SK_SALES_MOTION_ATTRIB_KEY = -777,
  EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
   WHERE SOL.SALES_ORDER_LINE_KEY=WBM.DV_SALES_ORDER_LINE_KEY
  AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> -777
 AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR' 
 AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE WBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );


SQL Query : 
SELECT 
  W_BOOKINGS_MEASURE.BOOKINGS_MEASURE_KEY,
  W_BOOKINGS_MEASURE.SALES_ORDER_KEY,
  W_BOOKINGS_MEASURE.SALES_ORDER_LINE_KEY,
  W_BOOKINGS_MEASURE.PRODUCT_KEY,
  W_BOOKINGS_MEASURE.AR_TRX_LINE_KEY,
  W_BOOKINGS_MEASURE.AR_TRX_KEY,
  W_BOOKINGS_MEASURE.END_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.BILL_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.SHIP_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.SOLD_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.DV_END_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.TRANSACTION_DATETIME,
  W_BOOKINGS_MEASURE.SALES_TERRITORY_KEY,
  W_BOOKINGS_MEASURE.SALES_REP_NUMBER,
  W_BOOKINGS_MEASURE.BOOKINGS_PROCESS_DATE,
  W_BOOKINGS_MEASURE.DV_FISCAL_YEAR_MTH_NUMBER_INT,
  W_BOOKINGS_MEASURE.BK_POS_TRANSACTION_ID_INT,
  W_BOOKINGS_MEASURE.BK_SALES_ADJ_LINE_NUMBER_INT,
  W_BOOKINGS_MEASURE.BK_SALES_ADJ_NUMBER_INT,
  W_BOOKINGS_MEASURE.ADJUSTMENT_TYPE_CODE,
  W_BOOKINGS_MEASURE.SALES_CHANNEL_CODE,
  W_BOOKINGS_MEASURE.SALES_CREDIT_TYPE_CODE,
  W_BOOKINGS_MEASURE.IDE_ADJUSTMENT_CODE,
  W_BOOKINGS_MEASURE.ADJUSTMENT_CODE,
  W_BOOKINGS_MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE,
  W_BOOKINGS_MEASURE.CANCELLED_FLG,
  W_BOOKINGS_MEASURE.CANCEL_CODE ,
  W_BOOKINGS_MEASURE.ACQUISITION_FLG,
  W_BOOKINGS_MEASURE.FORWARD_REVERSE_FLG,
  W_BOOKINGS_MEASURE.DISTRIBUTOR_OFFSET_FLG,
  W_BOOKINGS_MEASURE.CORPORATE_BOOKINGS_FLG,
  W_BOOKINGS_MEASURE.OVERLAY_FLG,
  W_BOOKINGS_MEASURE.IC_REVENUE_FLG,
  W_BOOKINGS_MEASURE.CHARGES_FLG,
  W_BOOKINGS_MEASURE.SALESREP_FLG,
  W_BOOKINGS_MEASURE.MISC_FLG,
  W_BOOKINGS_MEASURE.SERVICE_FLG,
  W_BOOKINGS_MEASURE.INTERNATIONAL_DEMO_FLG,
  W_BOOKINGS_MEASURE.REPLACEMENT_DEMO_FLG,
  W_BOOKINGS_MEASURE.REVENUE_FLG,
  W_BOOKINGS_MEASURE.RMA_FLG,
  W_BOOKINGS_MEASURE.TRADE_IN_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_NET_PRICE_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_LIST_PRICE_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DD_EXTENDED_QUANTITY,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_NET_PRICE_AMT,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_LIST_PRICE_AMT,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DD_EXTENDED_HOLD_QUANTITY,
  W_BOOKINGS_MEASURE.DD_COMP_US_STANDARD_PRICE_AMT,
  W_BOOKINGS_MEASURE.WIPS_ORIGINATOR_ID_INT,
  W_BOOKINGS_MEASURE.EDW_CREATE_USER,
  W_BOOKINGS_MEASURE.EDW_UPDATE_USER,
  W_BOOKINGS_MEASURE.EDW_CREATE_DATETIME,
  W_BOOKINGS_MEASURE.EDW_UPDATE_DATETIME,  
  W_BOOKINGS_MEASURE.CONVERSION_RT, 
  W_BOOKINGS_MEASURE.CONVERSION_DT,
  W_BOOKINGS_MEASURE.DD_BK_SO_NUMBER_INT, 
  W_BOOKINGS_MEASURE.DD_CISCO_BOOKED_DTM, 
  W_BOOKINGS_MEASURE.DD_SALES_ORDER_CATEGORY_TYPE,
  W_BOOKINGS_MEASURE.DD_SLS_ORD_OPERATING_UNIT_CD, 
  W_BOOKINGS_MEASURE.DD_TRX_CURRENCY_CD,
  W_BOOKINGS_MEASURE.DV_TRANSACTION_TYPE,
  W_BOOKINGS_MEASURE.ADJUSTMENT_DESCR_KEY,
  W_BOOKINGS_MEASURE.DV_TRANSACTION_NAME,   /**R9**/
  W_BOOKINGS_MEASURE.BOOKINGS_SPLIT_PCT ,    /**R9**/
  W_BOOKINGS_MEASURE.DV_REVENUE_RECOGNITION_FLG,   /* Added as part of true demand bkgs definition*/    
  W_BOOKINGS_MEASURE.DV_NET_SPREAD_FLG ,     /* Added as part of true demand bkgs definition*/  
  W_BOOKINGS_MEASURE.REVENUE_TRANSFER_KEY,  /* vetalla : Added as part of Q3FY14 RTE*/
  /* Added as part of OFFER ATTRIBUTION Q3FY14*/
  W_BOOKINGS_MEASURE.DV_ATTRIBUTION_CD,
  W_BOOKINGS_MEASURE.DV_PRODUCT_KEY,
  W_BOOKINGS_MEASURE.DV_SALES_ORDER_LINE_KEY,
  W_BOOKINGS_MEASURE.SK_OFFER_ATTRIBUTION_ID_INT ,
  W_BOOKINGS_MEASURE.DV_FMV_FLG , /* Q1FY15 FMV */
  W_BOOKINGS_MEASURE.RU_SERVICE_CONTRACT_START_DTM     ,
  W_BOOKINGS_MEASURE.RU_SERVICE_CONTRACT_END_DTM       ,
  W_BOOKINGS_MEASURE.DV_CONTRACT_DURATION AS        DV_CONTRACT_DURATION      ,
  W_BOOKINGS_MEASURE.DV_ANNUALIZED_FLG                 ,
  W_BOOKINGS_MEASURE.DV_ANNUALIZED_US_NET_AMT          ,
  W_BOOKINGS_MEASURE.DV_MULTIYEAR_US_NET_AMT ,
  W_BOOKINGS_MEASURE.SO_SBSCRPTN_ITM_SLS_TRX_KEY, /* Added as part of XAAS-Q3FY15 */
  W_BOOKINGS_MEASURE.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY, /* OA-Q1FY16 */
  W_BOOKINGS_MEASURE.FISCAL_YEAR_QUARTER_NUMBER_INT, /* ADDED AS PART OF sep 27TH CD RELEASE */
  W_BOOKINGS_MEASURE.DV_AR_TRX_LINE_KEY,/*Added as part of Q3FY16-Offer Attribution*/
  W_BOOKINGS_MEASURE.XAAS_OFFER_ATRBTN_REV_LINE_KEY,/*Added as part of Q3FY16-Offer Attribution*/
 W_BOOKINGS_MEASURE.DV_DEAL_ID, /*Added as part of Q4FY16 -XAAS*/
 W_BOOKINGS_MEASURE.TSS_COUNTRY_FACTOR_KEY,
  W_BOOKINGS_MEASURE.DV_BKG_GROSS_MGN_AMOUNT,
  W_BOOKINGS_MEASURE.DV_BGM_FX_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DV_FX_NET_PRICE_AMT /*BGM Changes Q1FY17*/
  /*Added the below columns as part of RO project for Q3FY17 */
  ,W_BOOKINGS_MEASURE.XCAT_FLG
  ,W_BOOKINGS_MEASURE.BK_OFFER_TYPE_NAME
  ,W_BOOKINGS_MEASURE.RECURRING_OFFER_FLG
  ,W_BOOKINGS_MEASURE.ELA_FLG
,W_BOOKINGS_MEASURE.DV_LOCAL_EXTND_LIST_PRICE_AMT 
,W_BOOKINGS_MEASURE.LOCAL_UNIT_LIST_PRICE_AMT     
,W_BOOKINGS_MEASURE.DV_UNIT_LIST_PRICE_USD_AMT
 /*,CAST(0.0 AS DECIMAL(18,6))DV_TOTAL_CNTRCT_VAL_USD_AMT    */
 ,CAST(0.0 AS DECIMAL(18,6))DV_ORDER_VALUE_USD_AMOUNT
,W_BOOKINGS_MEASURE.DV_MTHLY_RCR_REV_TRXL_USD_AMT /* modified as part of Sub Metrics FY19 May2Rel R18396*/
 ,CAST(0.0 AS DECIMAL(18,6))DV_INCRML_MTHY_RCRR_RV_USD_AMT 
,W_BOOKINGS_MEASURE.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT /* modified as part of Sub Metrics FY19 May2Rel R18396*/
 ,CAST(0.0 AS DECIMAL(18,6))DV_INCRML_ANNL_RCRR_RV_USD_AMT 
 ,CAST (TRIM(W_BOOKINGS_MEASURE.PRODUCT_KEY) || '~' || TRIM(COALESCE(W_BOOKINGS_MEASURE.DV_PRODUCT_KEY,-999)) ||  '~' || TRIM(W_BOOKINGS_MEASURE.SALES_ORDER_KEY) ||  '~' || TRIM(COALESCE(W_BOOKINGS_MEASURE.SK_OFFER_ATTRIBUTION_ID_INT,-9999))AS VARCHAR(70)) 
  AS DV_RECURRING_OFFER_CD /*  added as part of June29th2017 */
  ,W_BOOKINGS_MEASURE.DV_PURCHASE_ADJ_DSCNT_USD_AMT/*Q1FY18*/
,W_BOOKINGS_MEASURE.DV_BGM_NON_STANDARD_COST_AMT /*added as part product BGM - Q1FY18 release */
  ,W_BOOKINGS_MEASURE.POB_TYPE_CD /*NRS MPOB Change*/
  ,W_BOOKINGS_MEASURE.NRS_TRANSITION_FLG /*Added as part of NRS PI3 changes*/
  ,W_BOOKINGS_MEASURE.SALES_MOTION_CD /* Added as part of Oct-2017 rel */
  ,W_BOOKINGS_MEASURE.SUMMARY_QUOTE_FLG /* Added as part of Oct-2017 rel */
  ,W_BOOKINGS_MEASURE.DV_BKG_REBATE_AMT
  ,W_BOOKINGS_MEASURE.DV_FX_REBATE_PRICE_AMT
 ,W_BOOKINGS_MEASURE.SK_SALES_MOTION_ATTRIB_KEY /* Added as part of SALES FY18 May12Rel */
 ,W_BOOKINGS_MEASURE.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,W_BOOKINGS_MEASURE.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,W_BOOKINGS_MEASURE.DV_ENRICHED_CONTRACT_DURATION
,W_BOOKINGS_MEASURE.DV_ENRICHMENT_RULE_DESC
/* added as part of 10th March release*/
,W_BOOKINGS_MEASURE.ENRICHED_END_CUSTOMER_KEY
,W_BOOKINGS_MEASURE.DV_ENRICHED_UNK_END_CUST_RULE_DESC
,W_BOOKINGS_MEASURE.ACCRUED_REV_TRX_KEY /*ADDED AS PART OF ACCRUALS_MERAKI MAY19 SCOPE*/
,W_BOOKINGS_MEASURE.MERAKI_REV_TRX_KEY
,W_BOOKINGS_MEASURE.DD_COMP_US_ORIG_LIST_PRICE
,W_BOOKINGS_MEASURE.DD_COMP_US_ORIG_EXT_LIST_PRICE
/*,CAST('UNK' AS VARCHAR(10)) AS BOOKINGS_POLICY_CD*/ /*Added as part of May17FY20 ACV Release*/
,W_BOOKINGS_MEASURE.BOOKINGS_POLICY_CD
,W_BOOKINGS_MEASURE.DV_INV_DTM
,W_BOOKINGS_MEASURE.DV_COMPENSATION_DTM
 FROM
  $$WORKDB.W_BOOKINGS_MEASURE
  WHERE W_BOOKINGS_MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'


Post SQL : 



Target1 Name : N_BOOKINGS_MEASURE


Pre SQL : 
/*ADDED AS PART OF EDW_FY19 NOV08REL CR11701*/
UPDATE WBM
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
(SELECT 
NBM.BOOKINGS_MEASURE_KEY
,NBM.BOOKINGS_PROCESS_DATE
,NBM.BKGS_MEASURE_TRANS_TYPE_CODE
,NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,NBM.DV_ENRICHED_CONTRACT_DURATION
,NBM.DV_ENRICHMENT_RULE_DESC
,NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT
,NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT
,NBM.ENRICHED_END_CUSTOMER_KEY
,NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC
,NBM.DV_END_CUSTOMER_KEY
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
ON (WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
    AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
                AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE)
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='AR'
)NBM
SET
DV_ENRICHED_SERVICE_CONTRACT_START_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=NBM.DV_ENRICHED_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=NBM.DV_ENRICHMENT_RULE_DESC,
DV_MTHLY_RCR_REV_TRXL_USD_AMT=NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT,
DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT ,
ENRICHED_END_CUSTOMER_KEY=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN WBM.DV_END_CUSTOMER_KEY ELSE NBM.ENRICHED_END_CUSTOMER_KEY END,/*Modified as part of PR18952*/
DV_ENRICHED_UNK_END_CUST_RULE_DESC=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN 'Bookings End Customer' ELSE NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC END/*Modified as part of PR18952*/
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
	AND WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
    AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
	AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE;

/* Deleted as part of BKGS CARBT changes Q3FY15 QWN*/;
/* Deleting this part as it is not required for AR */
/*
DELETE FROM $$STGDB.NBM_1_23;

INSERT INTO $$STGDB.NBM_1_23
SELECT NBM.* FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$WORKDB.W_BOOKINGS_MEASURE WBM,
$$STGDB.NBM_EC_RET_DEL_EVR  NBM_EVR
WHERE 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND
NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND
NBM.BOOKINGS_MEASURE_KEY = NBM_EVR.BOOKINGS_MEASURE_KEY
;
DELETE NBM
FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$WORKDB.W_BOOKINGS_MEASURE WBM,
$$STGDB.NBM_EC_RET_DEL_EVR  NBM_EVR
WHERE 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND
NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND
NBM.BOOKINGS_MEASURE_KEY = NBM_EVR.BOOKINGS_MEASURE_KEY
;
*/

DELETE FROM $$STGDB.WI_W_NBM_PROCESS_DATES ALL;

INSERT INTO $$STGDB.WI_W_NBM_PROCESS_DATES
SELECT WBM.BOOKINGS_PROCESS_DATE
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE='AR'
GROUP BY 1;

/*this is to update edw_create_datetime for older transactions*/

UPDATE WBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$WORKDB.W_BOOKINGS_MEASURE WBM,
	$$STGDB.WI_W_NBM_PROCESS_DATES PD
SET     EDW_CREATE_DATETIME=NBM.EDW_CREATE_DATETIME
WHERE 	NBM.BOOKINGS_PROCESS_DATE = PD.PROCESS_DATE  
	AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'  /*Added as part of BKGS CARBT changes Q3FY15 QWN*/;

DELETE NBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$WORKDB.W_BOOKINGS_MEASURE WBM,
	$$STGDB.WI_W_NBM_PROCESS_DATES PD
WHERE 	NBM.BOOKINGS_PROCESS_DATE = PD.PROCESS_DATE  
	AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'  /*Added as part of BKGS CARBT changes Q3FY15 QWN*/;


Post SQL : 
UPDATE NBM
         FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
              $$SLSORDVWDB.N_SALES_ORDER NSO
         SET DD_CISCO_BOOKED_DTM=NSO.RU_CISCO_BOOKED_DATETIME   ,
 EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)   
         WHERE NBM.SALES_ORDER_KEY=NSO.SALES_ORDER_KEY
         AND NBM.DD_CISCO_BOOKED_DTM IS NULL
         AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'   /* MODIFIED AS PART OF BKGS REFRESH CHANGES Q3FY15 QWN*/
   AND NSO.SALES_ORDER_KEY NOT IN (-8888,-9999)
         AND NSO.RU_CISCO_BOOKED_DATETIME      IS NOT NULL;
 
 /* DELETED AS PART OF BKGS CARBT CHANGES Q3FY15 QWN*/
 /* DELETING THIS PART AS IT IS NOT REQUIRED FOR AR */
 /*
 DELETE WI
 FROM    $$STGDB.WI_DRVD_ERP_CURR_CC_NBM WI,
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
 WHERE                
 WI.DRVD_NCR_BKG_TRX_KEY = NBM.BOOKINGS_MEASURE_KEY
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE= 'ERP';
 */
  /*WI.PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE   AND */
 /*
 UPDATE NBM
 FROM
 $$SLSORDVWDB.N_BOOKINGS_MEASURE  NBM,
 $$STGDB.NBM_EC_RET_DEL_EVR  NBM_EVR
 SET 
 BOOKINGS_PROCESS_DATE = NBM_EVR.BOOKINGS_PROCESS_DATE
 WHERE
 NBM.BOOKINGS_MEASURE_KEY = NBM_EVR.BOOKINGS_MEASURE_KEY
 AND
 NBM.BKGS_MEASURE_TRANS_TYPE_CODE = NBM_EVR.BKGS_MEASURE_TRANS_TYPE_CODE 
 AND
 NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP';
 */
 
 /* ICPM  START */
 
 /*DELETE FROM $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_AR;
 
 INSERT INTO $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_AR
 
 SELECT
 BOOKINGS_MEASURE_KEY,
 BKGS_MEASURE_TRANS_TYPE_CODE,
 BOOKINGS_PROCESS_DATE,
 RU_SERVICE_CONTRACT_START_DTM ,
 RU_SERVICE_CONTRACT_END_DTM   ,
 ROUND(DV_CONTRACT_DURATION) AS DV_CONTRACT_DURATION          ,
 DV_ANNUALIZED_FLG             ,
 DV_ANNUALIZED_US_NET_AMT      ,
 DV_MULTIYEAR_US_NET_AMT       
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE BM
 WHERE BM.SERVICE_FLG = 'Y' 
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('AR') 
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL) ; 
 
 COLLECT STATS ON  $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_AR;
 
 
 UPDATE BM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE BM , 
 $$SLSORDVWDB.N_SALES_ORDER_LINE_TV SOL,
 $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_AR WI
 SET 
 RU_SERVICE_CONTRACT_START_DTM = SOL.RU_SERVICE_CONTRACT_START_DTM,
 RU_SERVICE_CONTRACT_END_DTM = SOL.RU_SERVICE_CONTRACT_END_DTM,
 DV_CONTRACT_DURATION = ROUND(CAST((CAST(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )),
 DV_ANNUALIZED_FLG = (CASE  WHEN SOL.RU_SERVICE_CONTRACT_END_DTM IS NULL THEN 'Y' 
                            WHEN SOL.RU_SERVICE_CONTRACT_START_DTM IS NULL THEN 'Y' 
                            WHEN SOL.RU_SERVICE_CONTRACT_END_DTM < SOL.RU_SERVICE_CONTRACT_START_DTM THEN 'Y' 
                            WHEN (CAST (((CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)) ) AS INTEGER) -365) > 0 THEN  'N'   
                                                                                                    ELSE 'Y'  END)  ,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER=USER
 WHERE BM.SERVICE_FLG = 'Y' 
 AND BM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY 
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
 AND ((( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NULL  AND  ( CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NOT  NULL   )
 OR  (( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NOT NULL  AND  ( CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS   NULL   )
 OR (( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ))   <>(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE ) ))
 )
 AND (WI.RU_SERVICE_CONTRACT_START_DTM<>SOL.RU_SERVICE_CONTRACT_START_DTM  OR WI.RU_SERVICE_CONTRACT_END_DTM<>SOL.RU_SERVICE_CONTRACT_END_DTM)
 ;  */
 
 
 /* ADDED AS PART OF ICPM FY16Q1 START */
 /*AR  UPADTE USING CONTRACT TERM*/
 /*UPDATE BM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE BM , 
 $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV  SOL,
 $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_AR WI
 SET 
 DV_CONTRACT_DURATION = ROUND(RU_SRVC_CNTRCT_DRTN_MNTHS_CNT),
 DV_ANNUALIZED_FLG =CASE WHEN RU_SRVC_CNTRCT_DRTN_MNTHS_CNT >12 THEN  'N'  ELSE 'Y' END,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER=USER
 WHERE BM.SERVICE_FLG = 'Y' 
 AND BM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY 
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
 AND (WI.DV_CONTRACT_DURATION<>SOL.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT )
 AND (
 (WI.DV_CONTRACT_DURATION IS NULL AND SOL.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT IS NOT NULL  )
 OR (WI.DV_CONTRACT_DURATION IS NOT NULL AND SOL.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT IS  NULL  )
 OR (WI.DV_CONTRACT_DURATION <>SOL.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT  )
 )
 AND 
 ( CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NULL 
 AND BM.DV_CONTRACT_DURATION IS NULL;*/ 
 
 
 
 /* ADDED AS PART OF ICPM FY16Q1 END  */
 
 /*UPDATE BM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE BM ,
 $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_AR WI
 
 SET 
                                    
 DV_ANNUALIZED_US_NET_AMT = (CASE WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                     WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
                                     ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
 DV_MULTIYEAR_US_NET_AMT =   DD_COMP_US_NET_PRICE_AMOUNT -  (CASE  WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                                                      WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
                                                                      ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) ,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER=USER
 WHERE BM.SERVICE_FLG = 'Y' 
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
 AND (  
 ( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ))  IS NULL  AND  ( CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ))  IS NOT  NULL)
 OR( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ))  IS NOT NULL  AND  ( CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ))  IS   NULL)
 OR( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ))   <>(CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE )))
 )
 
 AND (WI.RU_SERVICE_CONTRACT_START_DTM<>BM.RU_SERVICE_CONTRACT_START_DTM OR   WI.RU_SERVICE_CONTRACT_END_DTM<>BM.RU_SERVICE_CONTRACT_END_DTM)
 AND ( CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NOT  NULL 
 ;*/
 
 /*UPDATE BM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE BM ,
 $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_AR WI
 SET 
                                    
 DV_ANNUALIZED_US_NET_AMT = (CASE WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                     WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
                                     ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
 DV_MULTIYEAR_US_NET_AMT =   DD_COMP_US_NET_PRICE_AMOUNT -  (CASE  WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                                                      WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
                                                                      ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) ,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER=USER
 WHERE BM.SERVICE_FLG = 'Y' 
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
 AND (
 (WI.DV_CONTRACT_DURATION IS NULL AND BM.DV_CONTRACT_DURATION IS NOT NULL  )
 OR (WI.DV_CONTRACT_DURATION IS NOT NULL AND BM.DV_CONTRACT_DURATION IS  NULL  )
 OR (WI.DV_CONTRACT_DURATION <>BM.DV_CONTRACT_DURATION   )
 )
  AND (WI.DV_CONTRACT_DURATION<>BM.DV_CONTRACT_DURATION )
 AND ( CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS   NULL 
 ;*/ 
 
 /*ICPM END*/
 
 
 
 /* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */
 
 UPDATE NBM
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
      $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
     ( SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.N_SALES_ORDER_LINE  
  WHERE SALES_ORDER_LINE_KEY > 0 --AND RTNR_ELGIBILITY_FLG <> 'N' /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
  AND SS_CODE = 'CG')  SOL,     
     ( SELECT SK_SALES_MOTION_ATTRIB_KEY,
    DV_TRANSACTION_ID,
    DV_ENTERPRISE_INV_SKU_ID,
    DV_TRX_TYPE 
    FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION  
    WHERE DV_TRX_TYPE = 'AR'
       AND END_TV_DTM  ='3500-01-01 00:00:00' 
       AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
              WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_AR' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_AR' )
    GROUP BY 1,2,3,4
      ) MT 
 SET SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY,
     EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
  EDW_UPDATE_USER = USER
 WHERE NBM.DV_SALES_ORDER_LINE_KEY=SOL.SALES_ORDER_LINE_KEY
 AND MT.DV_TRANSACTION_ID = NBM.DV_SALES_ORDER_LINE_KEY
 AND MT.DV_ENTERPRISE_INV_SKU_ID = NBM.DV_PRODUCT_KEY
 AND MT.DV_TRX_TYPE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE  
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='AR' 
 AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
 AND FDY.FISCAL_YEAR_NUMBER_INT >= 2016
 /*AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY : Commented as part of ACV FY21*/
 AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );
 
 UPDATE NBM
  FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
       $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,  
      ( SELECT SK_SALES_MOTION_ATTRIB_KEY,
     DV_TRANSACTION_ID,
     DV_ENTERPRISE_INV_SKU_ID,
     DV_TRX_TYPE 
     FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION  
     WHERE DV_TRX_TYPE = 'AR_N'  /* Used for Deal based rebates */
        AND END_TV_DTM  ='3500-01-01 00:00:00' 
        AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
               WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_AR' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_AR' )
     GROUP BY 1,2,3,4
       ) MT 
  SET SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY,
      EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
   EDW_UPDATE_USER = USER
  WHERE MT.DV_TRANSACTION_ID = NBM.DV_AR_TRX_LINE_KEY
  AND MT.DV_ENTERPRISE_INV_SKU_ID = NBM.DV_PRODUCT_KEY
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='AR' 
  AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
  AND FDY.FISCAL_YEAR_NUMBER_INT >= 2016
  /*AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY : Commented as part of ACV FY21*/
   AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE )
AND NBM.DV_SALES_ORDER_LINE_KEY < 0 ; /* AR NAPLD UPDATE CONDITION FOR AR MNL UPLD*/
 
 
 UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
      ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
      FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION 
       ) WI  
 SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
 WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_AR' 
 AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_ar' ;
 
 /* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */
 
 /* UPDATE FOR N_BOOKINGS_MEAUSRE -AR */
 UPDATE NBM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
       $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
   ( SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  WHERE SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND SS_CODE = 'CG'
  AND EDW_UPDATE_DATETIME >= ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES
    WHERE JOB_STREAM_ID ='wf_N_BOOKINGS_MEASURE_AR' AND TABLE_NAME = 'N_SALES_ORDER_LINE')
  AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
					WHERE SQ.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
					  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' ) /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
   GROUP BY 1 ) SOL
   SET  SK_SALES_MOTION_ATTRIB_KEY = -777,
   EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
   WHERE SOL.SALES_ORDER_LINE_KEY=NBM.DV_SALES_ORDER_LINE_KEY
   AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
   AND  FDY.FISCAL_YEAR_NUMBER_INT >= 2016
   AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> -777
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR' 
 AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );
 
 
 UPDATE CTL 
  FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
       ( SELECT MAX(EDW_UPDATE_DATETIME) MAX_UPDATE_DTM 
       FROM $$SLSORDVWDB.N_SALES_ORDER_LINE 
        ) WI  
  SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
  WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_AR' 
  AND TABLE_NAME = 'N_SALES_ORDER_LINE' ;


Source2 Name : SQ2_WI_BOOKINGS_SW_ANNUALISED_AR


Pre SQL : 



SQL Query : 
SELECT 
  NBM1.BOOKINGS_MEASURE_KEY,
  NBM1.BOOKINGS_PROCESS_DATE,
  NBM1.BKGS_MEASURE_TRANS_TYPE_CODE ,
  NBM1.CONTRACT_START_DTM,
  NBM1.CONTRACT_END_DTM,
  NBM1.CONTRACT_DURATION ,
  NBM1.ANNUALIZED_FLG
  FROM 
  (
  SELECT
  NBM.BOOKINGS_MEASURE_KEY,
  NBM.BOOKINGS_PROCESS_DATE,
  NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
  CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE )   CONTRACT_START_DTM,
  CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE )  CONTRACT_END_DTM,
  ROUND(CASE WHEN ( CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE ) - CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE ) )  IS   NOT NULL 
                                                                  THEN  CAST((CAST(CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
                                                  WHEN  NSOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT > 0
                                                                  THEN NSOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT 
   WHEN ( NP.BK_PRODUCT_ID LIKE 'SWOA%' OR  NP.BK_PRODUCT_ID LIKE '%ADJ%' )AND NP.BK_PRODUCT_ID NOT LIKE 'SWOA-MX%'  THEN NULL
     ELSE CASE
      WHEN NP.PRICING_UNIT_NAME = 'YEAR' THEN NP.PRICING_UNIT_DURATION_INT * 12 
      WHEN NP.PRICING_UNIT_NAME = 'MONTHS' THEN NP.PRICING_UNIT_DURATION_INT  
/* Added as part of June-2018 Meraki scope - goponnus */  
  WHEN NP.PRICING_UNIT_NAME = 'DAYS' THEN ((NP.PRICING_UNIT_DURATION_INT *12)/365)
     WHEN EL.BIZ_DEF_TERM IS NOT NULL THEN EL.BIZ_DEF_TERM
     WHEN EL.DURATION IS NOT NULL THEN EL.DURATION
 ELSE NULL
     END 
  END)  CONTRACT_DURATION , /* ROUNDED as part of FY20 Oct 6th Release */
    
  CASE WHEN CONTRACT_DURATION IS NULL THEN 'Y' 
   WHEN CONTRACT_DURATION IS NOT NULL THEN 
   CASE 
     WHEN NP.MONETIZATION_TYPE_CD ='PERPETUAL' AND NP.ELA_FLG = 'Y' THEN 'Y'
     WHEN COALESCE ( EX.EXCLUDE_FLAG,'N' ) = 'Y' THEN 'Y' 
     WHEN EX.EXCLUDE_FLAG IS NOT NULL AND EX.EXCLUDE_FLAG = 'N'  
     THEN     CASE  WHEN   CONTRACT_DURATION >12   AND NP.MONETIZATION_TYPE_CD <>'USAGE'  THEN 'N' ELSE 'Y' END
WHEN NBM.XCAT_FLG ='Y' 
 AND(NSO.BK_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649') 
OR NBM.DV_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649'))  AND NP.RU_BK_PRODUCT_FAMILY_ID='WBXEE'  THEN 'Y'
     WHEN CONTRACT_DURATION >12 AND NP.MONETIZATION_TYPE_CD <>'USAGE'  /*AND NBM.XCAT_FLG <>'Y'*/ AND FDM.BK_DEAL_ID IS NULL THEN 'N' ELSE 'Y'
   END
  END ANNUALIZED_FLG
  
  FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  INNER  JOIN (SELECT 
      DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD,BK_PRDT_ALLCTN_CLSFCTN_CD,ALLOCATION_PCT
      FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN  WHERE  BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS','UNKNOWN')
      GROUP BY 1,2,3,4,5
      QUALIFY RANK()  OVER (PARTITION BY DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD  
       ORDER BY  BK_PRDT_ALLCTN_CLSFCTN_CD DESC  ) = 1
     ) ALCTN
  ON NBM.PRODUCT_KEY= ALCTN.PRODUCT_KEY AND NBM.FISCAL_YEAR_QUARTER_NUMBER_INT=ALCTN.DV_FISCAL_YEAR_QUARTER_NUM_INT
  
  INNER JOIN 
    $$COMREFVWDB.N_PRODUCT NP
      ON NBM.PRODUCT_KEY=NP.ITEM_KEY 
LEFT OUTER JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF ON NP.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID
LEFT OUTER JOIN 
(SELECT SKU,INVENTORY_ITEM_ID,DURATION,BIZ_DEF_TERM FROM $$ETLVWDB.EL_CG1_XXCFIR_PROD_SUBSCR_SKU WHERE END_DATE IS NULL)EL 
	ON NP.BK_PRODUCT_ID=EL.SKU
 INNER JOIN
      $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
             ON NBM.DV_SALES_ORDER_LINE_KEY   =NSOL.SALES_ORDER_LINE_KEY 
  INNER JOIN   
     $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV  NSOLV1
           ON NBM.DV_SALES_ORDER_LINE_KEY   =NSOLV1.SALES_ORDER_LINE_KEY 
  INNER JOIN
     $$SLSORDVWDB.N_SALES_ORDER_TV NSO
	 ON NBM.SALES_ORDER_KEY = NSO.SALES_ORDER_KEY/*ICPM Annualization-svakulab*/		   		   
  LEFT OUTER JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING  FDM
  ON NBM.DV_DEAL_ID = FDM.BK_DEAL_ID
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = FDM.BK_DV_FISCAL_YEAR_MTH_NUM_INT
  
  LEFT OUTER JOIN $$STGDB.WI_ATCCV_EXCLUDE_TRX EX 
  ON EX.EXCLUDE_VALUE =  ( 
       CASE WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN NP.RU_BK_PRODUCT_FAMILY_ID 
                         WHEN EXCLUDE_REF_COLUMN_1 = 'ADJUSTMENT_CODE'  THEN NBM.ADJUSTMENT_CODE
                         WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN NP.BK_PRODUCT_ID 
						  WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
       END ) 
 WHERE NBM.SERVICE_FLG  ='N'
 /*AND NBM.CORPORATE_BOOKINGS_FLG='Y' */
 AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
 /*AND ALCTN.BK_PRDT_ALLCTN_CLSFCTN_CD       IN  ( 'Software'  )*/
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 
 GROUP BY 1,2,3,4,5,6,7
 ) NBM1
 
 INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE MEASURE
 ON NBM1.BOOKINGS_MEASURE_KEY= MEASURE.BOOKINGS_MEASURE_KEY
 AND NBM1.BOOKINGS_PROCESS_DATE= MEASURE.BOOKINGS_PROCESS_DATE
 AND NBM1.BKGS_MEASURE_TRANS_TYPE_CODE= MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE      
 AND MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 
 WHERE 
 (
 COALESCE(CAST(NBM1.CONTRACT_START_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST( '3500-01-01' AS DATE FORMAT 'YYYY-MM-DD') )<> COALESCE(CAST(MEASURE.RU_SERVICE_CONTRACT_START_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST ('3500-01-01' AS DATE FORMAT 'YYYY-MM-DD'))
 OR COALESCE(CAST(NBM1.CONTRACT_END_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST( '3500-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <> COALESCE(CAST(MEASURE.RU_SERVICE_CONTRACT_END_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST ('3500-01-01' AS DATE FORMAT 'YYYY-MM-DD'))
 OR COALESCE(NBM1.CONTRACT_DURATION,-1)  <>COALESCE(MEASURE.DV_CONTRACT_DURATION,-1)
 OR COALESCE(NBM1.ANNUALIZED_FLG,'=' )  <> COALESCE(MEASURE.DV_ANNUALIZED_FLG,'=' ) 
 )
 AND 1=2


Post SQL : 



Target2 Name : WI_BOOKINGS_SW_ANNUALISED_AR1


Pre SQL : 
DELETE FROM $$STGDB.WI_BOOKINGS_SW_ANNUALISED_AR ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP  ('$$STGDB','WI_BOOKINGS_SW_ANNUALISED_AR','D');      
  
/*  UPDATE NBM FROM 
  $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
  $$STGDB.WI_BOOKINGS_SW_ANNUALISED_AR WI
  SET
  RU_SERVICE_CONTRACT_START_DTM = WI.CONTRACT_START_DTM,
  RU_SERVICE_CONTRACT_END_DTM = WI.CONTRACT_END_DTM,
  DV_CONTRACT_DURATION = WI.CONTRACT_DURATION,
  DV_ANNUALIZED_FLG = WI.ANNUALIZED_FLG,
  DV_ANNUALIZED_US_NET_AMT= (CASE WHEN ANNUALIZED_FLG = 'Y' THEN NBM.DD_COMP_US_NET_PRICE_AMOUNT
                                      WHEN ANNUALIZED_FLG = 'N' THEN ( NBM.DD_COMP_US_NET_PRICE_AMOUNT / CONTRACT_DURATION ) * 12
                                      ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
  DV_MULTIYEAR_US_NET_AMT = DD_COMP_US_NET_PRICE_AMOUNT - (CASE WHEN ANNUALIZED_FLG = 'Y' THEN NBM.DD_COMP_US_NET_PRICE_AMOUNT
                                      WHEN ANNUALIZED_FLG = 'N' THEN ( NBM.DD_COMP_US_NET_PRICE_AMOUNT / CONTRACT_DURATION ) * 12
                                      ELSE DD_COMP_US_NET_PRICE_AMOUNT END ),
  EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
  EDW_UPDATE_USER = USER         
  WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
  AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='AR';*/
  
  
 
 ----------------------------------------------------------------------------------------
 /*ADDED THE BELOW STATEMENTS AS PART OF ACV Q3FY18 ELA ENRICHMENT*/
 ----------------------------------------------------------------------------------------
 
  ---------------------------------SELECTING CURRENT MONTHS PERPETUAL,ELA FLAG DATA WITH NULL AS CONTRACT DURATION------------------------------------------------
  
 
 DELETE FROM $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_AR;
 
 
 INSERT INTO $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_AR
 SELECT BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE ,BKGS_MEASURE_TRANS_TYPE_CODE,SALES_ORDER_KEY, NBM.PRODUCT_KEY FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY = NP.ITEM_KEY
 WHERE  NP.MONETIZATION_TYPE_CD='perpetual'
 AND NP.ELA_FLG ='Y'
 AND  BKGS_MEASURE_TRANS_TYPE_CODE in ('AR')
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)  
  AND DV_CONTRACT_DURATION IS NULL
  AND NBM.SERVICE_FLG = 'N';
  
  COLLECT STATS ON $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_AR INDEX UPI_ST_PERPETUAL_ELA_TERM_ENRICHMENT_AR;
  
 
 --------------------------------SELECTING  MAX CONTRACT DURATION FOR EACH SALES ORDER LINE KEY BY LOOKING UP THE PAST ONE YEAR ERP DATA WITH TERM AS MONETIZATION----------------------------------------------------------------
 
 
 
 DELETE FROM $$STGDB.ST_SOL_DURATION_AR;
 
 
 INSERT INTO $$STGDB.ST_SOL_DURATION_AR
   SELECT SALES_ORDER_KEY, ROUND(MAX(DV_CONTRACT_DURATION)) AS DV_CONTRACT_DURATION
    FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY = NP.ITEM_KEY
 WHERE  NP.MONETIZATION_TYPE_CD='TERM'
 AND  BKGS_MEASURE_TRANS_TYPE_CODE in ('ERP')
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT >= ( SELECT FISCAL_YEAR_MTH_NUMBER_INT-100 FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)  
  AND NBM.SALES_ORDER_KEY IN (SELECT DISTINCT SALES_ORDER_KEY FROM $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_AR WHERE SALES_ORDER_KEY > 0 )
   AND DV_CONTRACT_DURATION IS NOT NULL
   AND NBM.SERVICE_FLG = 'N'
   GROUP BY 1;
   
 COLLECT STATS ON $$STGDB.ST_SOL_DURATION_AR INDEX (SALES_ORDER_KEY) ;
 
   ---------------------------------------------------------------------
   
   UPDATE NBM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
 $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_AR WI 
 ,$$STGDB.ST_SOL_DURATION_AR  SOL
 
    SET
    RU_SERVICE_CONTRACT_START_DTM = NULL,
    RU_SERVICE_CONTRACT_END_DTM = NULL,
    DV_CONTRACT_DURATION = ROUND(SOL.DV_CONTRACT_DURATION),
    EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
    EDW_UPDATE_USER = USER         
  WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
  AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
  AND WI.SALES_ORDER_KEY=SOL.SALES_ORDER_KEY
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='AR';
 
 
 
 ------------------------------------------------------------------------------------------------
 /*ADDED AS PART OF EDW_FY19 DEC09REL CR11731*/
 ------------------------------------------------------------------------------------------------
 
 DELETE FROM $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP;
 
 INSERT INTO  $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP
 SELECT
 NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
 NBM.BOOKINGS_MEASURE_KEY,
 NBM.BOOKINGS_PROCESS_DATE,
 'SOFTWARE' AS DV_SERVICE_PRODUCT_FLAG
 FROM
 $$WORKDB.W_BOOKINGS_MEASURE NBM
 INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
 WHERE 1=1
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('AR')
 AND NBM.SERVICE_FLG = 'N'
 AND P.MONETIZATION_TYPE_CD = 'TERM'
 AND 
 EXISTS
 (SELECT 1 FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN PC 
 WHERE PC.PRODUCT_KEY = NBM.PRODUCT_KEY 
 AND PC.DV_FISCAL_YEAR_QUARTER_NUM_INT = NBM.FISCAL_YEAR_QUARTER_NUMBER_INT
 AND PC.BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS', 'UNKNOWN')
 AND PC.BK_PRDT_ALLCTN_CLSFCTN_CD = 'SOFTWARE') 
 UNION ALL
 SELECT
 NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
 NBM.BOOKINGS_MEASURE_KEY,
 NBM.BOOKINGS_PROCESS_DATE,
 'SERVICE' AS DV_SERVICE_PRODUCT_FLAG
 FROM
 $$WORKDB.W_BOOKINGS_MEASURE NBM
 INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
 WHERE 1=1
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('AR')
 AND NBM.SERVICE_FLG = 'Y'
 AND
 EXISTS 
 ( SELECT 1 FROM 
     $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH 
     WHERE 
      SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN'
     AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
     AND (  (SFH.BK_SERVICE_CATEGORY_ID   =  'TECHNICAL SUPPORT SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  NOT IN  ( 'TRAINING'  ))
   OR 
   (SFH.BK_SERVICE_CATEGORY_ID   =  'ADVANCED SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  IN  ( 'AS SUBSCRIPTION'  )) )
   AND  SFH.BK_PRODUCT_SUBGROUP_ID = P.RU_BK_SERVICE_PROD_SUBGROUP_ID ); 
 
 
 -------------------------------------------------------------------------
 
 UPDATE  NBM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, 
 $$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
  (
  SELECT
 NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
 NBM.BOOKINGS_MEASURE_KEY,
 NBM.BOOKINGS_PROCESS_DATE,
 
 -- ACV Policy Flg
 CASE 
 WHEN NBM.SERVICE_FLG = 'N' AND EX.SERVICE_FLG='N' AND  COALESCE (EX.EXCLUDE_FLAG,'N') = 'Y' THEN 'Y'
 WHEN NBM.SERVICE_FLG = 'Y' AND  COALESCE (EX.EXCLUDE_FLAG,'N') = 'Y' THEN 'Y'
 WHEN NBM.XCAT_FLG ='Y' AND P.RU_BK_PRODUCT_FAMILY_ID = 'WBXEE'
 AND(NSO.BK_DEAL_ID IN ('16621975','16922373','6922383','16897335','16901905','17684649') 
 OR NBM.DV_DEAL_ID IN ('16621975','16922373','6922383','16897335','16901905','17684649')) THEN 'Y'
 WHEN FDM.BK_DEAL_ID IS NOT NULL THEN 'Y'
 ELSE 'N'
 END
 AS ACV_POLICY_FLG,
 
 -- PID to Term
 CASE WHEN DV_SERVICE_PRODUCT_FLAG = 'SOFTWARE' THEN 
 (CASE          
 WHEN P.PRICING_UNIT_NAME = 'YEAR'   THEN P.PRICING_UNIT_DURATION_INT * 12
 WHEN P.PRICING_UNIT_NAME = 'MONTHS' THEN P.PRICING_UNIT_DURATION_INT
 WHEN P.PRICING_UNIT_NAME = 'DAYS'   THEN (CAST(P.PRICING_UNIT_DURATION_INT AS DECIMAL(15,6)) * 12)/365
 END)
 WHEN DV_SERVICE_PRODUCT_FLAG = 'SERVICE' THEN NULL
 ELSE NULL
 END AS PID_TO_TERM_1,
 
 CASE WHEN PID_TO_TERM_1 IS NULL AND P.BK_PRODUCT_ID = 'XCAT-ELA-5Y-ENG' THEN  60
 ELSE PID_TO_TERM_1
 END AS PID_TO_TERM,
 
 -- SOL look up
 CASE
 WHEN SOL.RU_SERVICE_CONTRACT_START_DTM NOT IN ( '3500-01-01 00:00:00') 
 AND SOL.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL
 AND SOL.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
 THEN CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)
 END 
 AS SOL_CONTRACT_START_DT,
 
 CASE
 WHEN SOL.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
 AND SOL.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL
 AND SOL.RU_SERVICE_CONTRACT_END_DTM > SOL.RU_SERVICE_CONTRACT_START_DTM
 AND CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
 THEN CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE)
 END 
 AS SOL_CONTRACT_END_DT,
 
 CAST((SOL_CONTRACT_END_DT - SOL_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12 / 365
 AS DV_SOL_CONTRACT_DURATION,
 
 CASE WHEN SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <> 0 AND SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <= 240 THEN SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT  END 
 AS SOLV1_CONTRACT_DURATION,
 
 -- SVC look up
 CASE 
 WHEN SVC.SERVICE_CONTRACT_START_DTM NOT IN ( '3500-01-01 00:00:00')
 AND SVC.SERVICE_CONTRACT_START_DTM IS NOT NULL 
 AND SVC.SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
 THEN CAST(SVC.SERVICE_CONTRACT_START_DTM AS DATE)
 END
 AS SVC_CONTRACT_START_DT,
 CASE 
 WHEN SVC.SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
 AND SVC.SERVICE_CONTRACT_END_DTM IS NOT NULL
 AND SVC.SERVICE_CONTRACT_END_DTM > SVC.SERVICE_CONTRACT_START_DTM
 AND CAST(SVC.SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
 THEN CAST(SVC.SERVICE_CONTRACT_END_DTM AS DATE)
 END
 AS SVC_CONTRACT_END_DT,
 CAST((SVC_CONTRACT_END_DT - SVC_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12 /365
 AS DV_SVC_CONTRACT_DURATION,
 
 -- BKGS look up
 CASE 
 WHEN NBM.RU_SERVICE_CONTRACT_START_DTM NOT IN ( '3500-01-01 00:00:00') 
 AND NBM.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL  
 AND NBM.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00' 
 THEN CAST(NBM.RU_SERVICE_CONTRACT_START_DTM AS DATE)
 END
 AS BKGS_CONTRACT_START_DT,
 
 CASE 
 WHEN NBM.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') 
 AND NBM.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL  
 AND NBM.RU_SERVICE_CONTRACT_END_DTM > NBM.RU_SERVICE_CONTRACT_START_DTM 
 AND CAST(NBM.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
 THEN CAST(NBM.RU_SERVICE_CONTRACT_END_DTM AS DATE)
 END
 AS BKGS_CONTRACT_END_DT,
 CASE WHEN BKGS_CONTRACT_START_DT IS NOT NULL AND BKGS_CONTRACT_END_DT IS NOT NULL THEN 
        CAST((BKGS_CONTRACT_END_DT - BKGS_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12/365
      WHEN NBM.DV_CONTRACT_DURATION IS NOT NULL AND  NBM.DV_CONTRACT_DURATION > 0  AND NBM.DV_CONTRACT_DURATION <= 240  THEN NBM.DV_CONTRACT_DURATION
 END 
 AS DV_BKGS_CONTRACT_DURATION,
 -- BKGS_CISCO_BOOKED_DT
 CASE 
 WHEN NBM.DD_CISCO_BOOKED_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
 THEN CAST(NBM.DD_CISCO_BOOKED_DTM AS DATE)
 END 
 AS BKGS_CISCO_BOOKED_DT,
 -- Look Up Duration
 CASE
 WHEN (DV_SOL_CONTRACT_DURATION IS NOT NULL AND DV_SOL_CONTRACT_DURATION > 0) THEN DV_SOL_CONTRACT_DURATION 
 WHEN (SOLV1_CONTRACT_DURATION IS NOT NULL AND SOLV1_CONTRACT_DURATION > 0) THEN SOLV1_CONTRACT_DURATION 
 WHEN (DV_SVC_CONTRACT_DURATION IS NOT NULL AND DV_SVC_CONTRACT_DURATION > 0) THEN DV_SVC_CONTRACT_DURATION
 WHEN (DV_BKGS_CONTRACT_DURATION IS NOT NULL AND DV_BKGS_CONTRACT_DURATION > 0) THEN DV_BKGS_CONTRACT_DURATION
 WHEN COALESCE(PID_TO_TERM,0) > 0 THEN PID_TO_TERM
 ELSE  12
 END
 AS LKP_CONTRACT_DURATION,
 
 -- NEW_CONTRACT_DURATION
 CASE WHEN ACV_POLICY_FLG = 'Y' THEN 12 
 ELSE CASE WHEN LKP_CONTRACT_DURATION > 0 AND LKP_CONTRACT_DURATION <=1 THEN 1 
   ELSE LKP_CONTRACT_DURATION 
   END
 END
 AS NEW_CONTRACT_DURATION,
 
 -- NEW_SERVICE_CONTRACT_START_DTM
 CASE
 WHEN (DV_SOL_CONTRACT_DURATION IS NOT NULL AND DV_SOL_CONTRACT_DURATION > 0) THEN SOL_CONTRACT_START_DT
 WHEN (SOLV1_CONTRACT_DURATION IS NOT NULL AND SOLV1_CONTRACT_DURATION > 0) THEN COALESCE(SOL_CONTRACT_START_DT,BKGS_CISCO_BOOKED_DT,NBM.BOOKINGS_PROCESS_DATE)
 WHEN (DV_SVC_CONTRACT_DURATION IS NOT NULL AND DV_SVC_CONTRACT_DURATION > 0) THEN SVC_CONTRACT_START_DT
 WHEN (BKGS_CONTRACT_START_DT IS NOT NULL AND BKGS_CONTRACT_END_DT IS NOT NULL) THEN BKGS_CONTRACT_START_DT
 ELSE COALESCE(BKGS_CISCO_BOOKED_DT,NBM.BOOKINGS_PROCESS_DATE)
 END
 AS NEW_SERVICE_CONTRACT_START_DTM,
 
 -- NEW_SERVICE_CONTRACT_END_DTM
 CASE 
 WHEN FLOOR(NEW_CONTRACT_DURATION) = CEIL(NEW_CONTRACT_DURATION)
 THEN ADD_MONTHS(NEW_SERVICE_CONTRACT_START_DTM, CAST(NEW_CONTRACT_DURATION AS INTEGER)) - 1
 ELSE NEW_SERVICE_CONTRACT_START_DTM + (ROUND((NEW_CONTRACT_DURATION / 12.000000) * 365))
 END
 AS NEW_SERVICE_CONTRACT_END_DTM,
 
 CASE WHEN ACV_POLICY_FLG = 'Y'  THEN 'ACV Policy'
    WHEN (DV_SOL_CONTRACT_DURATION IS NOT NULL AND DV_SOL_CONTRACT_DURATION > 0) THEN 'SOL Dates to Term' 
    WHEN (SOLV1_CONTRACT_DURATION IS NOT NULL AND SOLV1_CONTRACT_DURATION > 0) THEN 'SOL Term'
    WHEN (DV_SVC_CONTRACT_DURATION IS NOT NULL AND DV_SVC_CONTRACT_DURATION > 0) THEN 'SRVC CNTRCT Dates to Term'
    WHEN BKGS_CONTRACT_START_DT IS NOT NULL AND BKGS_CONTRACT_END_DT IS NOT NULL THEN 'BKGS MSR Dates to Term'
             WHEN NBM.DV_CONTRACT_DURATION IS NOT NULL AND  NBM.DV_CONTRACT_DURATION > 0  THEN 'BKGS MSR Term'
    WHEN COALESCE(PID_TO_TERM,0) > 0 THEN 'PID to Term'
    ELSE 'Default Term'
 END
 AS DV_ENRICHMENT_RULE_DESC,
 
 -- NEW_MTHLY_RCR_REV_TRXL_USD_AMT
 NBM.DD_COMP_US_NET_PRICE_AMOUNT / NEW_CONTRACT_DURATION
 AS NEW_MTHLY_RCR_REV_TRXL_USD_AMT,
 
 -- NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT
 NEW_MTHLY_RCR_REV_TRXL_USD_AMT * 12.000000
 AS NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT
 
 FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
 INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC ON (WBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
 AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
 AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE)
 INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM 
 ON (
  WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY 
  AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE 
  AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
 ) 
 INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY)
 LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_TV NSO ON NBM.SALES_ORDER_KEY = NSO.SALES_ORDER_KEY 
 LEFT JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF ON P.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID 
 LEFT  JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV SOL ON ( SOL.SALES_ORDER_LINE_KEY = NBM.DV_SALES_ORDER_LINE_KEY AND SOL.END_TV_DATETIME = '3500-01-01 00:00:00' )
 LEFT  JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV SOLV1 ON ( NBM.DV_SALES_ORDER_LINE_KEY = SOLV1.SALES_ORDER_LINE_KEY AND SOLV1.END_TV_DTM = '3500-01-01 00:00:00' )
 LEFT  JOIN (SELECT
 BK_SERVICE_CONTRACT_NUM
 ,SALES_ORDER_LINE_KEY
 ,MIN(BK_SVC_CNTRCT_LINE_START_DTM) AS SERVICE_CONTRACT_START_DTM
 ,MAX(SVC_CNTRCT_LINE_END_DTM) AS SERVICE_CONTRACT_END_DTM
 FROM 
 $$SERVICEVWDB.N_SVC_CNTRCT_LN_TECH_SERVICES
 WHERE SALES_ORDER_LINE_KEY > 0
 GROUP BY BK_SERVICE_CONTRACT_NUM,SALES_ORDER_LINE_KEY ) SVC
 ON (SVC.BK_SERVICE_CONTRACT_NUM = SOL.RU_SERVICE_CONTRACT_NUMBER
 AND SVC.SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY)
 LEFT JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING FDM 
 ON (NBM.DV_DEAL_ID = FDM.BK_DEAL_ID
 AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = FDM.BK_DV_FISCAL_YEAR_MTH_NUM_INT)
 LEFT JOIN $$STGDB.WI_SUBMET_ATCCV_EXCLUDE_CNFG EX 
 ON EX.EXCLUDE_VALUE =  ( 
        CASE WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN P.RU_BK_PRODUCT_FAMILY_ID 
             WHEN EXCLUDE_REF_COLUMN_1 = 'ADJUSTMENT_CODE'  THEN NBM.ADJUSTMENT_CODE
             WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN P.BK_PRODUCT_ID 
    WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
        END 
     )
     
 WHERE 1=1
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR'
 
 )WBM
  SET 
 DV_ENRICHED_SERVICE_CONTRACT_START_DT=WBM.NEW_SERVICE_CONTRACT_START_DTM,
 DV_ENRICHED_SERVICE_CONTRACT_END_DT=WBM.NEW_SERVICE_CONTRACT_END_DTM,
 DV_ENRICHED_CONTRACT_DURATION=WBM.NEW_CONTRACT_DURATION,
 DV_ENRICHMENT_RULE_DESC=WBM.DV_ENRICHMENT_RULE_DESC,
 DV_MTHLY_RCR_REV_TRXL_USD_AMT= COALESCE(WBM.NEW_MTHLY_RCR_REV_TRXL_USD_AMT,0),
 DV_ANNLZD_MTHY_RCRR_RV_USD_AMT= COALESCE(WBM.NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT,0)
 WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE='AR'
 AND  NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
 AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
 AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT;
 
 /* Update for enriched end customer key columns*/
 
 UPDATE NBM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
 $$WORKDB.W_BOOKINGS_MEASURE WBM,
 $$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL
 SET ENRICHED_END_CUSTOMER_KEY=NBM.DV_END_CUSTOMER_KEY,
 DV_ENRICHED_UNK_END_CUST_RULE_DESC='Bookings End Customer',
EDW_UPDATE_DATETIME= CURRENT_TIMESTAMP(0) /* added as part of CR CHG0454670 */
 WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('AR')
 AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL
 AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
 AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
 AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT;
 
 
 /* Added as part of the ACV PILOT Sep 26th Release */  /*commenting as part of acv FY2020*/
 /* UPDATE NBM 
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM  
 SET  RU_SERVICE_CONTRACT_END_DTM = NULL ,
 EDW_UPDATE_DATETIME= CURRENT_TIMESTAMP(0) /* added as part of CR CHG0454670 */
/*  WHERE NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL) 
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE  = 'AR' 
 AND NBM.RU_SERVICE_CONTRACT_END_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00') ;   */
 
 
 /*UPDATE NBM 
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM 
 SET  RU_SERVICE_CONTRACT_START_DTM = NULL ,
EDW_UPDATE_DATETIME= CURRENT_TIMESTAMP(0) /* added as part of CR CHG0454670 */
 /*WHERE NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL) 
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'AR' 
 AND  NBM.RU_SERVICE_CONTRACT_START_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00')  ; */