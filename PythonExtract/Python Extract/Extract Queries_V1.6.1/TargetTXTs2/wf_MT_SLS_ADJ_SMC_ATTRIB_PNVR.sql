


Source1 Name : SQ_N_POS_TRX_LN_AS_NEW_OR_RNWL_TV


Pre SQL : 



SQL Query : 
SELECT 
    NPOS.MANUAL_TRX_KEY,
    NPOS.SALES_ORDER_LINE_KEY,
    NPOS.ENTERPRISE_OR_INVOICE_SKU AS DV_ENTERPRISE_INV_SKU_ID,    
       NPOS.SALES_MOTION_CD,
    NPOS.ALLOCATION_PCT,
    NPOS.DV_SERVICE_CATEGORY_CD,
    NPOS.OA_FLG AS DV_OA_FLG,
    NPOS.START_DATE AS START_TV_DTM,
    NPOS.END_DATE AS END_TV_DTM,
    NPOS.SOURCE AS DV_SOURCE_TYPE,
    CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM , 
    USER AS EDW_CREATE_USER ,
    CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM , 
    USER AS EDW_UPDATE_USER
	,AR_TRX_LINE_KEY
	,NPOS.SALES_MOTION_TIMING_CD
   FROM 
   (
    SELECT
      NSLSADJ.MANUAL_TRX_KEY
     ,POS.SALES_ORDER_LINE_KEY AS SALES_ORDER_LINE_KEY
     ,NSLSADJ.RU_PRODUCT_KEY AS ENTERPRISE_OR_INVOICE_SKU         
     ,COALESCE( POS.SALES_MOTION_CD, 'UNKNOWN') AS SALES_MOTION_CD 
     ,COALESCE(POS.SPLIT_PCT,1.00 )  AS ALLOCATION_PCT
     ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_SERVICE_CATEGORY_CD 
        ELSE 'TS' 
       END AS DV_SERVICE_CATEGORY_CD
     ,'N'  AS OA_FLG
     , CURRENT_TIMESTAMP(0) AS START_DATE
     , POS.END_TV_DTM AS END_DATE                    
     ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_SOURCE_TYPE  /* DV SOURCE TYPE derivation change to accommodate SQ */
        ELSE 'UNKNOWN' 
       END AS SOURCE 
     ,CAST(-7777 AS BIGINT) AR_TRX_LINE_KEY  /* For identifiying AR Rebates before loading into MT */
	 ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.SALES_MOTION_TIMING_CD
         ELSE COALESCE( NSOL.SALES_MOTION_TIMING_CD, 'UNKNOWN' )
        END AS SALES_MOTION_TIMING_CD     
    FROM ( SELECT * FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
WHERE END_TV_DTM = '3500-01-01 00:00:00'
AND  BK_POS_TRANSACTION_ID_INT IN (
SEL BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
WHERE EDW_UPDATE_DTM > '$$LastExtractDate'
	   /*To get SALES_MOTION_CD and SPLIT_PCT from POS directly*/
--       QUALIFY ROW_NUMBER() OVER(PARTITION BY BK_POS_TRANSACTION_ID_INT ORDER BY SALES_ORDER_LINE_KEY DESC) = 1
	   ) )POS  
   INNER JOIN $$SLSORDVWDB.N_SALES_ADJ_REBOK_MNL_TRX_TV NSLSADJ
   ON POS.BK_POS_TRANSACTION_ID_INT = NSLSADJ.RU_BK_NEW_RENEW_POS_TRX_ID_INT
   AND NSLSADJ.END_TV_DTM = '3500-01-01 00:00:00'
     AND NSLSADJ.RU_BK_NEW_RENEW_POS_TRX_ID_INT > 0
    LEFT JOIN (SEL * FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION SMC_ALLOC
	WHERE SMC_ALLOC.END_TV_DTM = '3500-01-01 00:00:00' 
AND SALES_MOTION_CD='RENEW'
	QUALIFY ROW_NUMBER() OVER(PARTITION BY SALES_ORDER_LINE_KEY ORDER BY EDW_UPDATE_DTM DESC ) = 1)SMC_ALLOC/* To	avoid data explosion in MT_RTNR_SMC_ALLOCATION*/
       ON POS.SALES_ORDER_LINE_KEY = SMC_ALLOC.SALES_ORDER_LINE_KEY      
 LEFT JOIN $$STGDB.WI_TTS_SOWB_SOL_LINES NSOL
           ON POS.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
  /*    LEFT JOIN ( SELECT NSOL.* FROM $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
     /*INNER JOIN $$SLSORDVWDB.N_SALES_ORDER NSO
         ON NSO.SALES_ORDER_KEY = NSOL.SALES_ORDER_KEY
       WHERE NSOL.SS_CODE = 'CG'
       AND NSOL.END_TV_DATETIME = '3500-01-01 00:00:00'
    AND (EXISTS (
    SELECT 1 FROM ( SELECT 
    P.ITEM_KEY
    FROM
    $$COMREFVWDB.N_PRODUCT P
    INNER JOIN 
    $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.RU_BK_SERVICE_PROD_SUBGROUP_ID = SFH.BK_PRODUCT_SUBGROUP_ID
    WHERE P.PRDT_SETUP_CLASSIFICATION_CD <> 'SOFTWARE' --EXCLUDE SW
    AND SFH.BK_SERVICE_CATEGORY_ID = 'TECHNICAL SUPPORT SERVICES' 
    AND SFH.BK_ALLOCATED_SERVC_GROUP_ID NOT IN
    ( 'AS CORE' ,  'AS SUBSCRIPTION' , 'FOCUSED TECHNICAL SUPPORT SERVICES' , 'CLOUD MANAGED SERVICES' )--EXCLUDE FTS,CMS,AS
    AND RU_BK_SERVICE_PROD_SUBGROUP_ID NOT IN (SELECT BK_PRDT_SUBGROUP_ID FROM ( SELECT * FROM $$SERVICEVWDB.N_GENERIC_SVC_PRDT_ATTR WHERE BK_GSP_ATTR_NAME = 'SW SERVICE CATEGORY' ) WI ) --EXCLUDE SWSS
    ) WI
     WHERE NSOL.PRODUCT_KEY = WI.ITEM_KEY
         )
     OR ( NSOL.BK_SO_SRC_NAME IN ('Manual', 'Copy' ) AND NSOL.PRODUCT_KEY NOT IN ( SELECT P.ITEM_KEY FROM
      $$COMREFVWDB.N_PRODUCT P
      INNER JOIN 
      $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.RU_BK_SERVICE_PROD_SUBGROUP_ID = SFH.BK_PRODUCT_SUBGROUP_ID
      AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  IN ( 'AS FIXED', 'AS TRANSACTION', 'CLOUD MANAGED SERVICES' ) --EXCLUDE CMS IN SOWB
     )
                 )
     )
         ) NSOL
  ON NSOL.SALES_ORDER_LINE_KEY = POS.SALES_ORDER_LINE_KEY*/
  --  WHERE POS.EDW_UPDATE_DTM >  '$$LastExtractDate'  
	
UNION ALL

SELECT
      NSLSADJ.MANUAL_TRX_KEY
     ,POS.SALES_ORDER_LINE_KEY AS SALES_ORDER_LINE_KEY
     --,NSLSADJ.RU_PRODUCT_KEY AS ENTERPRISE_OR_INVOICE_SKU   
     ,NSLSADJ.ATTRIBUTED_PRODUCT_KEY AS ENTERPRISE_OR_INVOICE_SKU	 
     ,COALESCE(POS.SALES_MOTION_CD,'UNKNOWN' ) AS SALES_MOTION_CD 
     ,COALESCE(POS.SPLIT_PCT, 1.00) AS ALLOCATION_PCT
     ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_SERVICE_CATEGORY_CD 
        ELSE 'TS' 
       END AS DV_SERVICE_CATEGORY_CD
     ,'N'  AS OA_FLG
     , CURRENT_TIMESTAMP(0) AS START_DATE
     , POS.END_TV_DTM AS END_DATE                    
     ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_SOURCE_TYPE /* DV SOURCE TYPE derivation change to accommodate SQ */
        ELSE 'UNKNOWN' 
       END AS SOURCE 
	 ,AR_TRX_LINE_KEY  /* For identifiying AR Rebates before loading into MT */
	 ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.SALES_MOTION_TIMING_CD
         ELSE COALESCE( NSOL.SALES_MOTION_TIMING_CD, 'UNKNOWN' )
        END AS SALES_MOTION_TIMING_CD     
    FROM ( SELECT * FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
WHERE END_TV_DTM = '3500-01-01 00:00:00'
AND  BK_POS_TRANSACTION_ID_INT IN (
SEL BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
WHERE EDW_UPDATE_DTM > '$$LastExtractDate'    /*To get SALES_MOTION_CD and SPLIT_PCT from POS directly*/
       --QUALIFY ROW_NUMBER() OVER(PARTITION BY BK_POS_TRANSACTION_ID_INT ORDER BY SALES_ORDER_LINE_KEY DESC) = 1
	   ) )POS  
   INNER JOIN (SELECT BK_RBT_ADJ_LINE_NUMBER_INT
				,RU_NEW_RENEW_SOL_KEY
				,MANUAL_TRX_KEY
				,RU_BK_NEW_RENEW_POS_TRX_ID_INT
				,ATTRIBUTED_PRODUCT_KEY
				,REBATE_ADJUSTMENT_DATETIME
				,EDW_UPDATE_DATETIME
				,SALES_MOTION_CD
				,AR_TRX_LINE_KEY
			FROM  $$NRTNCRVWDB.N_REBATE_ADJUSTMENT_LINE_NRT
		QUALIFY ROW_NUMBER() OVER (PARTITION BY MANUAL_TRX_KEY,RU_BK_NEW_RENEW_POS_TRX_ID_INT,ATTRIBUTED_PRODUCT_KEY,RU_NEW_RENEW_SOL_KEY          
		ORDER BY BK_RBT_ADJ_LINE_NUMBER_INT DESC)=1)NSLSADJ
   ON POS.BK_POS_TRANSACTION_ID_INT = NSLSADJ.RU_BK_NEW_RENEW_POS_TRX_ID_INT
  -- AND NSLSADJ.END_TV_DTM = '3500-01-01 00:00:00'
     
    LEFT JOIN (SEL * FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION SMC_ALLOC
	WHERE SMC_ALLOC.END_TV_DTM = '3500-01-01 00:00:00' 
AND SALES_MOTION_CD='RENEW'
	QUALIFY ROW_NUMBER() OVER(PARTITION BY SALES_ORDER_LINE_KEY ORDER BY EDW_UPDATE_DTM DESC ) = 1)SMC_ALLOC/* To	avoid data explosion in MT_RTNR_SMC_ALLOCATION*/
       ON POS.SALES_ORDER_LINE_KEY = SMC_ALLOC.SALES_ORDER_LINE_KEY
      	  LEFT JOIN $$STGDB.WI_TTS_SOWB_SOL_LINES NSOL
           ON POS.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
/*    LEFT JOIN ( SELECT NSOL.* FROM $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
     /*INNER JOIN $$SLSORDVWDB.N_SALES_ORDER NSO
         ON NSO.SALES_ORDER_KEY = NSOL.SALES_ORDER_KEY
       WHERE NSOL.SS_CODE = 'CG'
       AND NSOL.END_TV_DATETIME = '3500-01-01 00:00:00'
    AND (EXISTS (
    SELECT 1 FROM ( SELECT 
    P.ITEM_KEY
    FROM
    $$COMREFVWDB.N_PRODUCT P
    INNER JOIN 
    $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.RU_BK_SERVICE_PROD_SUBGROUP_ID = SFH.BK_PRODUCT_SUBGROUP_ID
    WHERE P.PRDT_SETUP_CLASSIFICATION_CD <> 'SOFTWARE' --EXCLUDE SW
    AND SFH.BK_SERVICE_CATEGORY_ID = 'TECHNICAL SUPPORT SERVICES' 
    AND SFH.BK_ALLOCATED_SERVC_GROUP_ID NOT IN
    ( 'AS CORE' ,  'AS SUBSCRIPTION' , 'FOCUSED TECHNICAL SUPPORT SERVICES' , 'CLOUD MANAGED SERVICES' )--EXCLUDE FTS,CMS,AS
    AND RU_BK_SERVICE_PROD_SUBGROUP_ID NOT IN (SELECT BK_PRDT_SUBGROUP_ID FROM ( SELECT * FROM $$SERVICEVWDB.N_GENERIC_SVC_PRDT_ATTR WHERE BK_GSP_ATTR_NAME = 'SW SERVICE CATEGORY' ) WI ) --EXCLUDE SWSS
    ) WI
     WHERE NSOL.PRODUCT_KEY = WI.ITEM_KEY
         )
     OR ( NSOL.BK_SO_SRC_NAME IN ('Manual', 'Copy' ) AND NSOL.PRODUCT_KEY NOT IN ( SELECT P.ITEM_KEY FROM
      $$COMREFVWDB.N_PRODUCT P
      INNER JOIN 
      $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.RU_BK_SERVICE_PROD_SUBGROUP_ID = SFH.BK_PRODUCT_SUBGROUP_ID
      AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  IN ( 'AS FIXED', 'AS TRANSACTION', 'CLOUD MANAGED SERVICES' ) --EXCLUDE CMS IN SOWB
     )
                 )
     )
         ) NSOL
  ON NSOL.SALES_ORDER_LINE_KEY = POS.SALES_ORDER_LINE_KEY*/
    WHERE --POS.EDW_UPDATE_DTM >  '$$LastExtractDate' 	  AND
	NSLSADJ.RU_BK_NEW_RENEW_POS_TRX_ID_INT > 0
	
) NPOS
     WHERE NOT EXISTS ( SELECT 1 FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_RTR WI WHERE WI.MANUAL_TRX_KEY = NPOS.MANUAL_TRX_KEY )


Post SQL : 



Target1 Name : WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR1


Pre SQL : 
DELETE FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR','D');


Source2 Name : SQ_WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR


Pre SQL : 



SQL Query : 
SELECT     
   MANUAL_TRX_KEY
     ,SALES_ORDER_LINE_KEY
     ,DV_ENTERPRISE_INV_SKU_ID
     ,SALES_MOTION_CD
     ,DV_ALLOCATION_PCT
     ,DV_SERVICE_CATEGORY_CD
     ,DV_OA_FLG                                         
     ,START_TV_DTM
     ,END_TV_DTM
     ,DV_SOURCE_TYPE
     ,EDW_CREATE_DTM
     ,EDW_CREATE_USER
     ,EDW_UPDATE_DTM
     ,EDW_UPDATE_USER
--     ,SALES_MOTION_TIMING_CD
,CASE WHEN SALES_MOTION_CD = 'RENEW' THEN
      SALES_MOTION_TIMING_CD
ELSE 'UNKNOWN'
END AS SALES_MOTION_TIMING_CD
  FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR WI
   WHERE WI.AR_TRX_LINE_KEY < 0 /* Added condition to process AR rebates separately in next pipeline*/
   AND NOT EXISTS ( SELECT 1
                      FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT
         WHERE WI.MANUAL_TRX_KEY = MT.MANUAL_TRX_KEY
           AND WI.DV_ENTERPRISE_INV_SKU_ID = MT.DV_ENTERPRISE_INV_SKU_ID
           AND WI.START_TV_DTM = MT.START_TV_DTM
        )


Post SQL : 



Target2 Name : MT_SLS_ADJ_SLS_MOTION_ATTRIB


Pre SQL : 
/* START: SMR Aug 16th changes - To prevent unnecessary changes going into MT table */
	DELETE FROM $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK ;

	INSERT INTO $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK
	SELECT
		MANUAL_TRX_KEY
		 ,SALES_ORDER_LINE_KEY
		 ,DV_ENTERPRISE_INV_SKU_ID
		 ,SALES_MOTION_CD
		 ,DV_ALLOCATION_PCT
		 ,DV_SERVICE_CATEGORY_CD
		 ,DV_OA_FLG                                         
		 ,START_TV_DTM
		 ,END_TV_DTM
		 ,DV_SOURCE_TYPE
		 ,SALES_MOTION_TIMING_CD
		 ,AR_TRX_LINE_KEY
	 FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR WI
	WHERE EXISTS ( SEL 1 
					FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT_ADJ
					WHERE MT_ADJ.END_TV_DTM = '3500-01-01 00:00:00'
					  AND WI.MANUAL_TRX_KEY = MT_ADJ.MANUAL_TRX_KEY
					  AND WI.SALES_ORDER_LINE_KEY = MT_ADJ.SALES_ORDER_LINE_KEY
					  AND WI.DV_ENTERPRISE_INV_SKU_ID = MT_ADJ.DV_ENTERPRISE_INV_SKU_ID
					  AND WI.SALES_MOTION_CD = MT_ADJ.SALES_MOTION_CD
					  AND WI.DV_ALLOCATION_PCT = MT_ADJ.DV_ALLOCATION_PCT
					  AND WI.DV_SERVICE_CATEGORY_CD = MT_ADJ.DV_SERVICE_CATEGORY_CD
					  AND WI.DV_SOURCE_TYPE = MT_ADJ.DV_SOURCE_TYPE ) ;

	COLLECT STATS ON $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK;

	DELETE FROM $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK
	WHERE ( MANUAL_TRX_KEY, DV_ENTERPRISE_INV_SKU_ID ) IN
			( SEL MANUAL_TRX_KEY, DV_ENTERPRISE_INV_SKU_ID
				FROM $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK
				 WHERE AR_TRX_LINE_KEY < 0
				GROUP BY 1,2 HAVING ROUND(SUM(DV_ALLOCATION_PCT),4) <> 1.0000		
			) ;

	DELETE FROM $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK
	WHERE ( MANUAL_TRX_KEY, DV_ENTERPRISE_INV_SKU_ID, SALES_ORDER_LINE_KEY ) IN
			( SEL MANUAL_TRX_KEY, DV_ENTERPRISE_INV_SKU_ID, SALES_ORDER_LINE_KEY
				FROM $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK
				 WHERE AR_TRX_LINE_KEY > 0
				GROUP BY 1,2,3 HAVING ROUND(SUM(DV_ALLOCATION_PCT),4) <> 1.0000		
			) ;

	DELETE FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR WI
	WHERE EXISTS ( SEL 1 
					FROM $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK NO_CHNG
					WHERE NO_CHNG.AR_TRX_LINE_KEY < 0
					  AND WI.MANUAL_TRX_KEY = NO_CHNG.MANUAL_TRX_KEY
					  AND WI.DV_ENTERPRISE_INV_SKU_ID = NO_CHNG.DV_ENTERPRISE_INV_SKU_ID
				  ) ;
				  
	DELETE FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR WI
	WHERE EXISTS ( SEL 1 
					FROM $$STGDB.WI_ADJ_SMC_ATTRIB_PNVR_CHNG_CHK NO_CHNG
					WHERE NO_CHNG.AR_TRX_LINE_KEY > 0
					  AND WI.MANUAL_TRX_KEY = NO_CHNG.MANUAL_TRX_KEY
					  AND WI.DV_ENTERPRISE_INV_SKU_ID = NO_CHNG.DV_ENTERPRISE_INV_SKU_ID
					  AND WI.SALES_ORDER_LINE_KEY = NO_CHNG.SALES_ORDER_LINE_KEY
				  ) ;

/* END: SMR Aug 16th changes - To prevent unnecessary changes going into MT table */

UPDATE MT
    FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT , 
         ( SELECT MANUAL_TRX_KEY, DV_ENTERPRISE_INV_SKU_ID, MAX(START_TV_DTM) MAX_START_DTM
             FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR
			 WHERE AR_TRX_LINE_KEY < 0 /* Added condition to process AR rebates separately in next pipeline*/
                                  GROUP BY 1,2
                     ) WI
    SET END_TV_DTM = MAX_START_DTM - INTERVAL '1' SECOND,
        EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0)
  WHERE MT.MANUAL_TRX_KEY = WI.MANUAL_TRX_KEY
  AND MT.DV_ENTERPRISE_INV_SKU_ID = WI.DV_ENTERPRISE_INV_SKU_ID
  AND MT.START_TV_DTM <> WI.MAX_START_DTM 
  AND MT.END_TV_DTM = '3500-01-01 00:00:00';


Post SQL : 
CALL COLLECT_STATS_WRAP('$$SLSORDDB','MT_SLS_ADJ_SLS_MOTION_ATTRIB','D');


Source3 Name : SQ_MT_SLS_ADJ_SLS_MOTION_ATTRIB_PNVR_RB


Pre SQL : 



SQL Query : 
SELECT     
   MANUAL_TRX_KEY
     ,SALES_ORDER_LINE_KEY
     ,DV_ENTERPRISE_INV_SKU_ID
     ,SALES_MOTION_CD
     ,DV_ALLOCATION_PCT
     ,DV_SERVICE_CATEGORY_CD
     ,DV_OA_FLG                                         
     ,START_TV_DTM
     ,END_TV_DTM
     ,DV_SOURCE_TYPE
     ,EDW_CREATE_DTM
     ,EDW_CREATE_USER
     ,EDW_UPDATE_DTM
     ,EDW_UPDATE_USER
     /*,SALES_MOTION_TIMING_CD*/
,CASE WHEN SALES_MOTION_CD = 'RENEW' THEN
      SALES_MOTION_TIMING_CD
ELSE 'UNKNOWN'
END AS SALES_MOTION_TIMING_CD
  FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR WI
  WHERE WI.AR_TRX_LINE_KEY > 0 /* Added condition to process AR rebates separately here */
  AND NOT EXISTS ( SELECT 1
                      FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT
         WHERE WI.MANUAL_TRX_KEY = MT.MANUAL_TRX_KEY
           AND WI.DV_ENTERPRISE_INV_SKU_ID = MT.DV_ENTERPRISE_INV_SKU_ID
		   AND WI.SALES_ORDER_LINE_KEY = MT.SALES_ORDER_LINE_KEY /* Added condition to process AR rebates separately here */
           AND WI.START_TV_DTM = MT.START_TV_DTM
        )


Post SQL : 



Target3 Name : MT_SLS_ADJ_SLS_MOTION_ATTRIB3


Pre SQL : 
UPDATE MT
    FROM $$SLSORDVWDB.MT_SLS_ADJ_SLS_MOTION_ATTRIB MT , 
         ( SELECT MANUAL_TRX_KEY, SALES_ORDER_LINE_KEY, DV_ENTERPRISE_INV_SKU_ID, MAX(START_TV_DTM) MAX_START_DTM
             FROM $$STGDB.WI_MT_SLS_ADJ_SMC_ATTRIB_PNVR
			 WHERE AR_TRX_LINE_KEY > 0 /* Added condition to process AR rebates separately here */
                                  GROUP BY 1,2,3
                     ) WI
    SET END_TV_DTM = MAX_START_DTM - INTERVAL '1' SECOND,
        EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0)
  WHERE MT.MANUAL_TRX_KEY = WI.MANUAL_TRX_KEY
  AND MT.SALES_ORDER_LINE_KEY = WI.SALES_ORDER_LINE_KEY /* Added condition to process AR rebates separately here */
  AND MT.DV_ENTERPRISE_INV_SKU_ID = WI.DV_ENTERPRISE_INV_SKU_ID
  AND MT.START_TV_DTM <> WI.MAX_START_DTM 
  AND MT.END_TV_DTM = '3500-01-01 00:00:00';


Post SQL : 
CALL COLLECT_STATS_WRAP('$$SLSORDDB','MT_SLS_ADJ_SLS_MOTION_ATTRIB','D');