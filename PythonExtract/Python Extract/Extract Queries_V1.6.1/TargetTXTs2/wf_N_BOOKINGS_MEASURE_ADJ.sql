


Source1 Name : SQ_W_BOOKINGS_MEASURE1


Pre SQL : 
/* contract start/end date upd for sales adjustment data */
/*UPDATE BM 
FROM $$WORKDB.W_BOOKINGS_MEASURE BM , 
 	 $$NRTNCRVWDB.N_SLS_ADJ_REBOK_MNL_TRX_NRT_TV  TRX ,
     $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE LINE             
SET RU_SERVICE_CONTRACT_START_DTM = TRX.CONTRACT_START_DT,
	     RU_SERVICE_CONTRACT_END_DTM = TRX.CONTRACT_END_DT,
	     DV_CONTRACT_DURATION = CAST((CAST((TRX.CONTRACT_END_DT -  TRX.CONTRACT_START_DT) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) ),
         DV_ANNUALIZED_FLG = ( CASE  WHEN TRX.CONTRACT_END_DT= '3500-01-01' THEN 'Y' 
								     WHEN TRX.CONTRACT_START_DT = '3500-01-01' THEN 'Y' 
								     WHEN TRX.CONTRACT_END_DT < TRX.CONTRACT_START_DT THEN 'Y' 
								     WHEN (CAST((TRX.CONTRACT_END_DT - TRX.CONTRACT_START_DT)  AS INTEGER) -365) > 0 THEN  'N'  
								     ELSE 'Y' 
					            END ),
    	 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
		 EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
   AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ') 
   AND BM.BOOKINGS_MEASURE_KEY = LINE.BK_SALES_ADJ_LINE_NUMBER_INT
   AND TRX.MANUAL_TRX_KEY = LINE.MANUAL_TRX_KEY 
   AND TRX.END_TV_DTM = '3500-01-01 00:00:00' 
   AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL ) ;   */
  
/*  
UPDATE BM 
FROM $$WORKDB.W_BOOKINGS_MEASURE BM  
SET DV_ANNUALIZED_US_NET_AMT = ( CASE WHEN DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                      WHEN DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                      ELSE DD_COMP_US_NET_PRICE_AMOUNT 
								  END ) , 
	DV_MULTIYEAR_US_NET_AMT = DD_COMP_US_NET_PRICE_AMOUNT -  (CASE  WHEN DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
		           													       WHEN DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / DV_CONTRACT_DURATION ) * 12
													   					   ELSE DD_COMP_US_NET_PRICE_AMOUNT 
																      END ) ,
		EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
		EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
      AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ') 
      AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL) ;
	*/  
	  
/* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */

UPDATE WBM
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
   $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE SLS_ADJ ,
      ( SELECT SK_SALES_MOTION_ATTRIB_KEY,
           DV_TRANSACTION_ID,
     DV_ENTERPRISE_INV_SKU_ID,
     DV_TRX_TYPE,
NSOL.RTNR_ELGIBILITY_FLG RTNR_ELGIBILITY_FLG 
      FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
  INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  ON CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END = NSOL.SALES_ORDER_LINE_KEY
  WHERE END_TV_DTM  = '3500-01-01 00:00:00' 
     AND DV_TRX_TYPE = 'SLS_ADJ'
AND NSOL.SS_CODE = 'CG'
--AND NSOL.RTNR_ELGIBILITY_FLG <> 'N' /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
   GROUP BY 1,2,3,4,5
   ) MT
SET SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY 
WHERE SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = WBM.BK_SALES_ADJ_LINE_NUMBER_INT
AND SLS_ADJ.PROCESS_DATE = WBM.BOOKINGS_PROCESS_DATE  
AND MT.DV_TRANSACTION_ID = SLS_ADJ.MANUAL_TRX_KEY
AND MT.DV_ENTERPRISE_INV_SKU_ID = WBM.DV_PRODUCT_KEY
AND MT.DV_TRX_TYPE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE  
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='SLS_ADJ' 
AND COALESCE( SLS_ADJ.IDE_IFC_ADJ_INITIATOR_NAME, 'UNK' )  <> 'ppp@cisco.com' /*To handle rebates tagging separately in next update */
--AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY  /* Commented as part of ACV FY21 AUG 16 rel to allow incr updates even if SMA key is same */
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE WBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );

/* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */


/* Q1FY20 REBATES INTRODUCTION FROM RTR */

UPDATE WBM
 FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
    $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE SLS_ADJ ,
    $$NRTNCRVWDB.N_REBATE_ADJUSTMENT_LINE_NRT RBT_ADJ,
       ( SELECT SK_SALES_MOTION_ATTRIB_KEY,
            DV_TRANSACTION_ID,
            CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END SALES_ORDER_LINE_KEY,
      DV_ENTERPRISE_INV_SKU_ID,
      DV_TRX_TYPE,
 NSOL.RTNR_ELGIBILITY_FLG RTNR_ELGIBILITY_FLG 
       FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
   INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
   ON CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END = NSOL.SALES_ORDER_LINE_KEY
   WHERE END_TV_DTM  = '3500-01-01 00:00:00' 
      AND DV_TRX_TYPE = 'SLS_ADJ'
 AND NSOL.SS_CODE = 'CG'
 --AND NSOL.RTNR_ELGIBILITY_FLG <> 'N' /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
    GROUP BY 1,2,3,4,5,6
    ) MT
 SET SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY 
 WHERE SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = WBM.BK_SALES_ADJ_LINE_NUMBER_INT
 AND SLS_ADJ.PROCESS_DATE = WBM.BOOKINGS_PROCESS_DATE  
 AND RBT_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT
 AND MT.DV_TRANSACTION_ID = SLS_ADJ.MANUAL_TRX_KEY
 AND MT.DV_ENTERPRISE_INV_SKU_ID = WBM.ATTRIBUTED_PRODUCT_KEY
 AND MT.DV_TRX_TYPE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE  
 AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='SLS_ADJ' 
 AND CASE WHEN RBT_ADJ.AR_TRX_LINE_KEY > 0 THEN RBT_ADJ.RU_NEW_RENEW_SOL_KEY ELSE -7777 END = CASE WHEN RBT_ADJ.AR_TRX_LINE_KEY > 0 THEN MT.SALES_ORDER_LINE_KEY ELSE -7777 END
 -- AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY  /* Commented as part of ACV FY21 AUG 16 rel to allow incr updates even if SMA key is same */
 AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE WBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );

/* Q1FY20 REBATES INTRODUCTION FROM RTR */



/*WBM SLS ADJ*/
 
 UPDATE WBM 
  FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
 (SELECT BK_SALES_ADJ_LINE_NUMBER_INT FROM $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE
WHERE RU_NEW_RENEW_SOL_KEY IN 
 (SELECT SALES_ORDER_LINE_KEY  FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  WHERE SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND NSOL.SS_CODE = 'CG'
     AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
						WHERE SQ.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
					      AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' )  /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
	 )
	 GROUP BY 1 )  SOL
SET SK_SALES_MOTION_ATTRIB_KEY = -777,		
    EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE WBM.BOOKINGS_MEASURE_KEY=SOL.BK_SALES_ADJ_LINE_NUMBER_INT
 AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='SLS_ADJ'
 AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> -777 ;
 
 UPDATE WBM 
  FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
 (SELECT BK_SALES_ADJ_LINE_NUMBER_INT 
	     FROM $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE
         WHERE RU_BK_NEW_RENEW_POS_TRX_ID_INT IN
			(SELECT BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
				WHERE SALES_ORDER_LINE_KEY IN ( SELECT SALES_ORDER_LINE_KEY  FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
												WHERE  SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND NSOL.SS_CODE = 'CG'
												 AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
																		WHERE SQ.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
																		  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' )  /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
												)
				  AND END_TV_DTM = '3500-01-01 00:00:00' )
	 GROUP BY 1 )  SOL
SET SK_SALES_MOTION_ATTRIB_KEY = -777,		
    EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE WBM.BOOKINGS_MEASURE_KEY=SOL.BK_SALES_ADJ_LINE_NUMBER_INT
 AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='SLS_ADJ'
 AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> -777 
  AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE WBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );


SQL Query : 
SELECT 
 W_BOOKINGS_MEASURE.BOOKINGS_MEASURE_KEY,
 W_BOOKINGS_MEASURE.SALES_ORDER_KEY,
 W_BOOKINGS_MEASURE.SALES_ORDER_LINE_KEY,
 W_BOOKINGS_MEASURE.PRODUCT_KEY,
 W_BOOKINGS_MEASURE.AR_TRX_LINE_KEY,
 W_BOOKINGS_MEASURE.AR_TRX_KEY,
 W_BOOKINGS_MEASURE.END_CUSTOMER_KEY,
 W_BOOKINGS_MEASURE.BILL_TO_CUSTOMER_KEY,
 W_BOOKINGS_MEASURE.SHIP_TO_CUSTOMER_KEY,
 W_BOOKINGS_MEASURE.SOLD_TO_CUSTOMER_KEY,
 W_BOOKINGS_MEASURE.DV_END_CUSTOMER_KEY,
 W_BOOKINGS_MEASURE.TRANSACTION_DATETIME,
 W_BOOKINGS_MEASURE.SALES_TERRITORY_KEY,
 W_BOOKINGS_MEASURE.SALES_REP_NUMBER,
 W_BOOKINGS_MEASURE.BOOKINGS_PROCESS_DATE,
 W_BOOKINGS_MEASURE.DV_FISCAL_YEAR_MTH_NUMBER_INT,
 W_BOOKINGS_MEASURE.BK_POS_TRANSACTION_ID_INT,
 W_BOOKINGS_MEASURE.BK_SALES_ADJ_LINE_NUMBER_INT,
 W_BOOKINGS_MEASURE.BK_SALES_ADJ_NUMBER_INT,
 W_BOOKINGS_MEASURE.ADJUSTMENT_TYPE_CODE,
 W_BOOKINGS_MEASURE.SALES_CHANNEL_CODE,
 W_BOOKINGS_MEASURE.SALES_CREDIT_TYPE_CODE,
 W_BOOKINGS_MEASURE.IDE_ADJUSTMENT_CODE,
 W_BOOKINGS_MEASURE.ADJUSTMENT_CODE,
 W_BOOKINGS_MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE,
 W_BOOKINGS_MEASURE.CANCELLED_FLG,
 W_BOOKINGS_MEASURE.CANCEL_CODE ,
 W_BOOKINGS_MEASURE.ACQUISITION_FLG,
 W_BOOKINGS_MEASURE.FORWARD_REVERSE_FLG,
 W_BOOKINGS_MEASURE.DISTRIBUTOR_OFFSET_FLG,
 W_BOOKINGS_MEASURE.CORPORATE_BOOKINGS_FLG,
 W_BOOKINGS_MEASURE.OVERLAY_FLG,
 W_BOOKINGS_MEASURE.IC_REVENUE_FLG,
 W_BOOKINGS_MEASURE.CHARGES_FLG,
 W_BOOKINGS_MEASURE.SALESREP_FLG,
 W_BOOKINGS_MEASURE.MISC_FLG,
 W_BOOKINGS_MEASURE.SERVICE_FLG,
 W_BOOKINGS_MEASURE.INTERNATIONAL_DEMO_FLG,
 W_BOOKINGS_MEASURE.REPLACEMENT_DEMO_FLG,
 W_BOOKINGS_MEASURE.REVENUE_FLG,
 W_BOOKINGS_MEASURE.RMA_FLG,
 W_BOOKINGS_MEASURE.TRADE_IN_AMOUNT,
 W_BOOKINGS_MEASURE.DD_COMP_US_NET_PRICE_AMOUNT,
 W_BOOKINGS_MEASURE.DD_COMP_US_LIST_PRICE_AMOUNT,
 W_BOOKINGS_MEASURE.DD_COMP_US_COST_AMOUNT,
 W_BOOKINGS_MEASURE.DD_EXTENDED_QUANTITY,
 W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_NET_PRICE_AMT,
 W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_LIST_PRICE_AMT,
 W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_COST_AMOUNT,
 W_BOOKINGS_MEASURE.DD_EXTENDED_HOLD_QUANTITY,
 W_BOOKINGS_MEASURE.DD_COMP_US_STANDARD_PRICE_AMT,
 W_BOOKINGS_MEASURE.WIPS_ORIGINATOR_ID_INT,
 W_BOOKINGS_MEASURE.EDW_CREATE_USER,
 W_BOOKINGS_MEASURE.EDW_UPDATE_USER,
 W_BOOKINGS_MEASURE.EDW_CREATE_DATETIME,
 W_BOOKINGS_MEASURE.EDW_UPDATE_DATETIME,  
 W_BOOKINGS_MEASURE.CONVERSION_RT, 
 W_BOOKINGS_MEASURE.CONVERSION_DT,
 W_BOOKINGS_MEASURE.DD_BK_SO_NUMBER_INT, 
 W_BOOKINGS_MEASURE.DD_CISCO_BOOKED_DTM, 
 W_BOOKINGS_MEASURE.DD_SALES_ORDER_CATEGORY_TYPE,
 W_BOOKINGS_MEASURE.DD_SLS_ORD_OPERATING_UNIT_CD, 
 W_BOOKINGS_MEASURE.DD_TRX_CURRENCY_CD,
 W_BOOKINGS_MEASURE.DV_TRANSACTION_TYPE,
 W_BOOKINGS_MEASURE.ADJUSTMENT_DESCR_KEY,
 W_BOOKINGS_MEASURE.DV_TRANSACTION_NAME,   /**R9**/
 W_BOOKINGS_MEASURE.BOOKINGS_SPLIT_PCT ,    /**R9**/
 W_BOOKINGS_MEASURE.DV_REVENUE_RECOGNITION_FLG,   /* Added as part of true demand bkgs definition*/    
 W_BOOKINGS_MEASURE.DV_NET_SPREAD_FLG ,     /* Added as part of true demand bkgs definition*/  
 W_BOOKINGS_MEASURE.REVENUE_TRANSFER_KEY,  /* vetalla : Added as part of Q3FY14 RTE*/
 /* Added as part of OFFER ATTRIBUTION Q3FY14*/
 W_BOOKINGS_MEASURE.DV_ATTRIBUTION_CD,
 W_BOOKINGS_MEASURE.DV_PRODUCT_KEY,
 W_BOOKINGS_MEASURE.DV_SALES_ORDER_LINE_KEY,
 W_BOOKINGS_MEASURE.SK_OFFER_ATTRIBUTION_ID_INT ,
 W_BOOKINGS_MEASURE.DV_FMV_FLG , /* Q1FY15 FMV */
 W_BOOKINGS_MEASURE.RU_SERVICE_CONTRACT_START_DTM     ,
 W_BOOKINGS_MEASURE.RU_SERVICE_CONTRACT_END_DTM       ,
W_BOOKINGS_MEASURE.DV_CONTRACT_DURATION           ,
 W_BOOKINGS_MEASURE.DV_ANNUALIZED_FLG                 ,
 W_BOOKINGS_MEASURE.DV_ANNUALIZED_US_NET_AMT          ,
 W_BOOKINGS_MEASURE.DV_MULTIYEAR_US_NET_AMT ,
 W_BOOKINGS_MEASURE.SO_SBSCRPTN_ITM_SLS_TRX_KEY, /* Added as part of XAAS-Q3FY15 */
 W_BOOKINGS_MEASURE.DV_SOURCE_ORDER_NUM_INT, /* Added as part of FY18 May Release*/
 W_BOOKINGS_MEASURE.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY, /* Added as part of OA-Q1FY16 */
 W_BOOKINGS_MEASURE.FISCAL_YEAR_QUARTER_NUMBER_INT, /* ADDED AS PART OF sep 27TH CD RELEASE */
 W_BOOKINGS_MEASURE.DV_AR_TRX_LINE_KEY,/*Added as part of Q3FY16-Offer Attribution*/
 W_BOOKINGS_MEASURE.XAAS_OFFER_ATRBTN_REV_LINE_KEY, /*Added as part of Q3FY16-Offer Attribution*/
 W_BOOKINGS_MEASURE.DV_DEAL_ID, /*Added as part of Q4FY16-XAAS*/
 W_BOOKINGS_MEASURE.TSS_COUNTRY_FACTOR_KEY,
 W_BOOKINGS_MEASURE.DV_BKG_GROSS_MGN_AMOUNT,
 W_BOOKINGS_MEASURE.DV_BGM_FX_COST_AMOUNT,
 W_BOOKINGS_MEASURE.DV_FX_NET_PRICE_AMT /*BGM Changes Q1FY17*/
 /*Added the below columns as part of RO project for Q3FY17 */
 ,W_BOOKINGS_MEASURE.XCAT_FLG
 ,W_BOOKINGS_MEASURE.BK_OFFER_TYPE_NAME
 ,W_BOOKINGS_MEASURE.RECURRING_OFFER_FLG
 ,W_BOOKINGS_MEASURE.ELA_FLG
,W_BOOKINGS_MEASURE.DV_LOCAL_EXTND_LIST_PRICE_AMT 
,W_BOOKINGS_MEASURE.LOCAL_UNIT_LIST_PRICE_AMT     
,W_BOOKINGS_MEASURE.DV_UNIT_LIST_PRICE_USD_AMT
,CAST(0.0 AS DECIMAL(18,6))DV_ORDER_VALUE_USD_AMOUNT      
,W_BOOKINGS_MEASURE.DV_MTHLY_RCR_REV_TRXL_USD_AMT /* modified as part of Sub Metrics FY19 May2Rel R18396*/
,CAST(0.0 AS DECIMAL(18,6))DV_INCRML_MTHY_RCRR_RV_USD_AMT 
,W_BOOKINGS_MEASURE.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT /* modified as part of Sub Metrics FY19 May2Rel R18396*/
,CAST(0.0 AS DECIMAL(18,6))DV_INCRML_ANNL_RCRR_RV_USD_AMT 
,CAST (TRIM(W_BOOKINGS_MEASURE.PRODUCT_KEY) || '~' || TRIM(COALESCE(W_BOOKINGS_MEASURE.DV_PRODUCT_KEY,-999)) ||  '~' || TRIM(W_BOOKINGS_MEASURE.SALES_ORDER_KEY) ||  '~' || TRIM(COALESCE(W_BOOKINGS_MEASURE.SK_OFFER_ATTRIBUTION_ID_INT,-9999))AS VARCHAR(70)) 
 AS DV_RECURRING_OFFER_CD /*  added as part of June29th2017 */
 ,W_BOOKINGS_MEASURE.DV_PURCHASE_ADJ_DSCNT_USD_AMT /*Q1FY18*/
 ,W_BOOKINGS_MEASURE.DV_BGM_NON_STANDARD_COST_AMT
 ,W_BOOKINGS_MEASURE.SALES_MOTION_CD
 ,W_BOOKINGS_MEASURE.DV_BKG_REBATE_AMT
,W_BOOKINGS_MEASURE.DV_FX_REBATE_PRICE_AMT
,W_BOOKINGS_MEASURE.SK_SALES_MOTION_ATTRIB_KEY /* Added as part of SALES FY18 May12Rel */
,W_BOOKINGS_MEASURE.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,W_BOOKINGS_MEASURE.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,W_BOOKINGS_MEASURE.DV_ENRICHED_CONTRACT_DURATION
,W_BOOKINGS_MEASURE.DV_ENRICHMENT_RULE_DESC
/* added as part of 10th March release*/
,W_BOOKINGS_MEASURE.ENRICHED_END_CUSTOMER_KEY
,W_BOOKINGS_MEASURE.DV_ENRICHED_UNK_END_CUST_RULE_DESC
,ATTRIBUTED_PRODUCT_KEY
,SALES_ADJUSTMENT_SOURCE_CODE
/* ADDED AS A PART OF Q1FY21 ACV SCALE*/
,W_BOOKINGS_MEASURE.BOOKINGS_POLICY_CD 
,W_BOOKINGS_MEASURE.DV_INV_DTM
,W_BOOKINGS_MEASURE.SOURCE_REP_ANNUAL_USD_AMT /* ADDED AS A PART OF Q1FY21 ACV SCALE*/
,W_BOOKINGS_MEASURE.DV_COMPENSATION_DTM
/* END OF Q1FY21 ACV SCALE*/ 
FROM
 $$WORKDB.W_BOOKINGS_MEASURE 
 WHERE W_BOOKINGS_MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ', 'SLS_ADJ' ) /* Added as part of BKGS CARBT changes Q4FY15 CR */


Post SQL : 



Target1 Name : N_BOOKINGS_MEASURE


Pre SQL : 
/*ADDED AS PART OF EDW_FY19 NOV08REL CR11701*/
UPDATE WBM
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
(SELECT 
NBM.BOOKINGS_MEASURE_KEY
,NBM.BOOKINGS_PROCESS_DATE
,NBM.BKGS_MEASURE_TRANS_TYPE_CODE
,NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,NBM.DV_ENRICHED_CONTRACT_DURATION
,NBM.DV_ENRICHMENT_RULE_DESC
,NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT
,NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT
,NBM.ENRICHED_END_CUSTOMER_KEY
,NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC
,NBM.DV_END_CUSTOMER_KEY
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
ON (WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
    AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
                AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE)
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ')
)NBM
SET
DV_ENRICHED_SERVICE_CONTRACT_START_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=NBM.DV_ENRICHED_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=NBM.DV_ENRICHMENT_RULE_DESC,
DV_MTHLY_RCR_REV_TRXL_USD_AMT=NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT,
DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT ,
ENRICHED_END_CUSTOMER_KEY=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN WBM.DV_END_CUSTOMER_KEY ELSE NBM.ENRICHED_END_CUSTOMER_KEY END,/* Modified as part of PR18952*/
DV_ENRICHED_UNK_END_CUST_RULE_DESC=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN 'Bookings End Customer' ELSE NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC END/* Modified as part of PR18952*/
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ')
	AND WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
    AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
	AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE;

 
DELETE FROM $$STGDB.WI_W_NBM_PROCESS_DATES ALL ;

INSERT INTO $$STGDB.WI_W_NBM_PROCESS_DATES
SELECT WBM.BOOKINGS_PROCESS_DATE
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ', 'POS_ADJ')
GROUP BY 1;

/*this is to update edw_create_datetime for older transactions*/

UPDATE WBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$WORKDB.W_BOOKINGS_MEASURE WBM,
	$$STGDB.WI_W_NBM_PROCESS_DATES PD
SET     EDW_CREATE_DATETIME=NBM.EDW_CREATE_DATETIME
WHERE 	NBM.BOOKINGS_PROCESS_DATE = PD.PROCESS_DATE  
	AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ', 'POS_ADJ')  /*Added as part of BKGS CARBT changes Q4FY15 CR*/;

DELETE NBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$WORKDB.W_BOOKINGS_MEASURE WBM,
	$$STGDB.WI_W_NBM_PROCESS_DATES PD
WHERE 	NBM.BOOKINGS_PROCESS_DATE = PD.PROCESS_DATE  
	AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ', 'POS_ADJ')  /*Added as part of BKGS CARBT changes Q4FY15 CR*/;


Post SQL : 
/*COMMENTED BELOW PART AS PART OF ICPM PARTNER REBATES edwdev-qa-acv@cisco.com*/
/* LOGIC CHANGES (WI_OPN_MTH_SRVC_ANNUALIZED_ADJ) AS PART OF ICPM SEPT 08 CR  SRVC A/MY */
/*DELETE FROM $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ADJ;

INSERT INTO $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ADJ

SELECT
BOOKINGS_MEASURE_KEY,
BKGS_MEASURE_TRANS_TYPE_CODE,
BOOKINGS_PROCESS_DATE,
RU_SERVICE_CONTRACT_START_DTM ,
RU_SERVICE_CONTRACT_END_DTM   ,
DV_CONTRACT_DURATION          ,
DV_ANNUALIZED_FLG             ,
DV_ANNUALIZED_US_NET_AMT      ,
DV_MULTIYEAR_US_NET_AMT       
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE BM
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ') 
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL); 

COLLECT STATS ON $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ADJ;

UPDATE BM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE BM , 
	 $$NRTNCRVWDB.N_SLS_ADJ_REBOK_MNL_TRX_NRT_TV TRX ,
	 $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE LINE ,
     $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ADJ WI	 

SET 
		RU_SERVICE_CONTRACT_START_DTM = TRX.CONTRACT_START_DT,
		RU_SERVICE_CONTRACT_END_DTM = TRX.CONTRACT_END_DT,
		DV_CONTRACT_DURATION = CAST((CAST((TRX.CONTRACT_END_DT -  TRX.CONTRACT_START_DT ) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) ),
		DV_ANNUALIZED_FLG = ( CASE  WHEN TRX.CONTRACT_END_DT = '3500-01-01' THEN 'Y' 
   								    WHEN TRX.CONTRACT_START_DT = '3500-01-01' THEN 'Y' 
									WHEN TRX.CONTRACT_END_DT < TRX.CONTRACT_START_DT THEN 'Y' 
									WHEN ( CAST((TRX.CONTRACT_END_DT  - TRX.CONTRACT_START_DT) AS INTEGER) -365) > 0 THEN  'N'   
									ELSE 'Y'  
						      END )  ,
		EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
		EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ') 
AND BM.BOOKINGS_MEASURE_KEY = LINE.BK_SALES_ADJ_LINE_NUMBER_INT
AND TRX.MANUAL_TRX_KEY = LINE.MANUAL_TRX_KEY 
AND TRX.END_TV_DTM = '3500-01-01 00:00:00' 
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
AND ( 
(( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NULL  AND  ( CAST(TRX.CONTRACT_END_DT AS DATE ) - CAST(TRX.CONTRACT_START_DT AS DATE ) )  IS NOT  NULL   )
OR(( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NOT NULL  AND  ( CAST(TRX.CONTRACT_END_DT AS DATE ) - CAST(TRX.CONTRACT_START_DT AS DATE ) )  IS   NULL   )
OR(( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ))   <>(CAST(TRX.CONTRACT_END_DT AS DATE )- CAST(TRX.CONTRACT_START_DT AS DATE ) ))
)
--AND (WI.RU_SERVICE_CONTRACT_START_DTM<> TRX.CONTRACT_START_DT OR WI.RU_SERVICE_CONTRACT_END_DTM<> TRX.CONTRACT_END_DT)
; */



/*COMMENTED BELOW PART AS PART OF ICPM PARTNER REBATES edwdev-qa-acv@cisco.com*/
/*UPDATE BM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE BM , 
     $$NRTNCRVWDB.N_SLS_ADJ_REBOK_MNL_TRX_NRT_TV  TRX ,
	 $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE LINE,
     $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ADJ WI	
SET 
       DV_ANNUALIZED_US_NET_AMT = ( CASE WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
										 WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
                                         ELSE DD_COMP_US_NET_PRICE_AMOUNT 
                                    END ) , 
	   DV_MULTIYEAR_US_NET_AMT =   DD_COMP_US_NET_PRICE_AMOUNT -  ( CASE  WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                                                          WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
                                                                     	  ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) ,
 	   EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
	   EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ') 
AND BM.BOOKINGS_MEASURE_KEY = LINE.BK_SALES_ADJ_LINE_NUMBER_INT
AND TRX.MANUAL_TRX_KEY = LINE.MANUAL_TRX_KEY 
AND TRX.END_TV_DTM = '3500-01-01 00:00:00' 
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL) 
AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
AND (  ( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NULL  AND  ( CAST(TRX.CONTRACT_END_DT AS DATE ) - CAST(TRX.CONTRACT_START_DT AS DATE ) )  IS NOT  NULL   )
OR    ( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NOT NULL  AND  ( CAST(TRX.CONTRACT_END_DT AS DATE ) - CAST(TRX.CONTRACT_START_DT AS DATE ) )  IS   NULL   )
OR    ( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ))   <>(CAST(TRX.CONTRACT_END_DT AS DATE )- CAST(TRX.CONTRACT_START_DT AS DATE )))
)
--AND (WI.RU_SERVICE_CONTRACT_START_DTM<> TRX.CONTRACT_START_DT OR WI.RU_SERVICE_CONTRACT_END_DTM<> TRX.CONTRACT_END_DT)
;*/


/* Retro update for customer attricutes added as part Q3FY16 */

DEL FROM $$STGDB.ST_BOOKINGS_MSR_ADJ_RETRO ; 

INSERT INTO $$STGDB.ST_BOOKINGS_MSR_ADJ_RETRO 
SEL  
BOOKINGS_MEASURE_KEY          ,
BOOKINGS_PROCESS_DATE         ,
BKGS_MEASURE_TRANS_TYPE_CODE  ,
END_CUSTOMER_KEY              ,
BILL_TO_CUSTOMER_KEY          ,
SHIP_TO_CUSTOMER_KEY          ,
SOLD_TO_CUSTOMER_KEY          ,
DV_END_CUSTOMER_KEY           , 
NULL AS UPDATE_USER           , 
USER AS EDW_CREATE_USER       ,
USER AS EDW_UPDATE_USER       ,
CURRENT_TIMESTAMP(0) AS EDW_CREATE_DATETIME , 
CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DATETIME 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, 
     $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR RFD 
WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'SLS_ADJ' 
AND BOOKINGS_PROCESS_DATE = RFD.CALENDAR_DATE 
AND RFD.FISCAL_YEAR_NUMBER_INT > 2012 
AND ( END_CUSTOMER_KEY = -999 OR BILL_TO_CUSTOMER_KEY = -999 OR SHIP_TO_CUSTOMER_KEY = -999 OR SOLD_TO_CUSTOMER_KEY = -999 ) ; 

UPD ST 
FROM $$STGDB.ST_BOOKINGS_MSR_ADJ_RETRO ST , 
     $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE NSA 
SET END_CUSTOMER_KEY = NSA.END_CUST_REBOK_CUST_KEY,
    BILL_TO_CUSTOMER_KEY = NSA.BILL_TO_REBOK_CUST_KEY,
    SHIP_TO_CUSTOMER_KEY = NSA.SHIP_TO_REBOK_CUST_KEY,
	SOLD_TO_CUSTOMER_KEY = NSA.SOLD_TO_REBOK_CUST_KEY,
	DV_END_CUSTOMER_KEY = CASE WHEN ST.DV_END_CUSTOMER_KEY = -999 
	  						   THEN NSA.END_CUST_REBOK_CUST_KEY 
							   ELSE ST.DV_END_CUSTOMER_KEY
						  END,
    UPDATE_USER = 'RETRO_UPDATE' ,
    EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE ST.BOOKINGS_MEASURE_KEY = NSA.BK_SALES_ADJ_LINE_NUMBER_INT
AND ST.BOOKINGS_PROCESS_DATE = NSA.PROCESS_DATE 
AND ( ST.END_CUSTOMER_KEY <> NSA.END_CUST_REBOK_CUST_KEY OR 
      ST.BILL_TO_CUSTOMER_KEY <> NSA.BILL_TO_REBOK_CUST_KEY OR 
      ST.SHIP_TO_CUSTOMER_KEY <> NSA.SHIP_TO_REBOK_CUST_KEY OR
      ST.SOLD_TO_CUSTOMER_KEY <> NSA.SOLD_TO_REBOK_CUST_KEY ) ;                       

COLLECT STATS ON $$STGDB.ST_BOOKINGS_MSR_ADJ_RETRO ; 

UPD NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, 
     $$STGDB.ST_BOOKINGS_MSR_ADJ_RETRO ST  
SET END_CUSTOMER_KEY = ST.END_CUSTOMER_KEY,
         BILL_TO_CUSTOMER_KEY = ST.BILL_TO_CUSTOMER_KEY ,
         SHIP_TO_CUSTOMER_KEY = ST.SHIP_TO_CUSTOMER_KEY ,
         SOLD_TO_CUSTOMER_KEY = ST.SOLD_TO_CUSTOMER_KEY,
         DV_END_CUSTOMER_KEY = ST.DV_END_CUSTOMER_KEY,
         EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) 
WHERE NBM.BOOKINGS_MEASURE_KEY = ST.BOOKINGS_MEASURE_KEY 
AND NBM.BOOKINGS_PROCESS_DATE = ST.BOOKINGS_PROCESS_DATE                      
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = ST.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'SLS_ADJ' 
AND ST.UPDATE_USER = 'RETRO_UPDATE' ;

/* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */

UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
     $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE SLS_ADJ,
	 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
	(SELECT SK_SALES_MOTION_ATTRIB_KEY,
			DV_TRANSACTION_ID,
			DV_ENTERPRISE_INV_SKU_ID,
			DV_TRX_TYPE,
			NSOL.RTNR_ELGIBILITY_FLG RTNR_ELGIBILITY_FLG 
			FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
			INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  ON CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END = NSOL.SALES_ORDER_LINE_KEY
			WHERE END_TV_DTM  ='3500-01-01 00:00:00' 
			  AND DV_TRX_TYPE = 'SLS_ADJ'
			  AND NSOL.SS_CODE = 'CG'
			  --AND NSOL.RTNR_ELGIBILITY_FLG <> 'N' /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
              AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
                                                WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_ADJ' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_adj' ) 
			GROUP BY 1,2,3,4,5
     ) MT
SET SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY,
    EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)  ,
	EDW_UPDATE_USER = USER
WHERE 
SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = NBM.BK_SALES_ADJ_LINE_NUMBER_INT
AND SLS_ADJ.PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE  
AND MT.DV_TRANSACTION_ID = SLS_ADJ.MANUAL_TRX_KEY
AND MT.DV_ENTERPRISE_INV_SKU_ID = NBM.DV_PRODUCT_KEY
AND MT.DV_TRX_TYPE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE  
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='SLS_ADJ'
AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
AND COALESCE( SLS_ADJ.IDE_IFC_ADJ_INITIATOR_NAME, 'UNK' )  <> 'ppp@cisco.com' /*To handle rebates tagging separately in next update */
AND FDY.FISCAL_YEAR_NUMBER_INT >= 2016
--AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY /* Commented as part of ACV FY21 AUG 16 rel to allow incr updates even if SMA key is same */
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );

/* Q1FY20 REBATES INTRODUCTION FROM RTR */

UPDATE NBM
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
      $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE SLS_ADJ,
      $$NRTNCRVWDB.N_REBATE_ADJUSTMENT_LINE_NRT RBT_ADJ,
   $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
  (SELECT SK_SALES_MOTION_ATTRIB_KEY,
    DV_TRANSACTION_ID,
    CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END SALES_ORDER_LINE_KEY,
    DV_ENTERPRISE_INV_SKU_ID,
    DV_TRX_TYPE,
    NSOL.RTNR_ELGIBILITY_FLG RTNR_ELGIBILITY_FLG 
    FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
    INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
   ON CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END = NSOL.SALES_ORDER_LINE_KEY
    WHERE END_TV_DTM  ='3500-01-01 00:00:00' 
      AND DV_TRX_TYPE = 'SLS_ADJ'
      AND NSOL.SS_CODE = 'CG'
      --AND NSOL.RTNR_ELGIBILITY_FLG <> 'N' /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
               AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
                                                 WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_ADJ' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_adj' ) 
    GROUP BY 1,2,3,4,5,6
      ) MT
 SET SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY,
     EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)  ,
  EDW_UPDATE_USER = USER
 WHERE 
 SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = NBM.BK_SALES_ADJ_LINE_NUMBER_INT
 AND SLS_ADJ.PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE  
 AND MT.DV_TRANSACTION_ID = SLS_ADJ.MANUAL_TRX_KEY
 AND MT.DV_ENTERPRISE_INV_SKU_ID = NBM.ATTRIBUTED_PRODUCT_KEY 
 AND MT.DV_TRX_TYPE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE  
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='SLS_ADJ'
 AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
 AND RBT_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT
 AND CASE WHEN RBT_ADJ.AR_TRX_LINE_KEY > 0 THEN RBT_ADJ.RU_NEW_RENEW_SOL_KEY ELSE -7777 END = CASE WHEN RBT_ADJ.AR_TRX_LINE_KEY > 0 THEN MT.SALES_ORDER_LINE_KEY ELSE -7777 END
 AND FDY.FISCAL_YEAR_NUMBER_INT >= 2016
-- AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY /* Commented as part of ACV FY21 AUG 16 rel to allow incr updates even if SMA key is same */
  AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );


/* Q1FY20 REBATES INTRODUCTION FROM RTR */


/* Commenting below updates as the same is taken care in existing above SMA KEY update statements */
/* EDW_SMC_UPDATE as part of ACV SCALE SLS_ADJ */
/*
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
     $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE SLS_ADJ,
	(SELECT SK_SALES_MOTION_ATTRIB_KEY,
			DV_TRANSACTION_ID,
			DV_ENTERPRISE_INV_SKU_ID,
			DV_TRX_TYPE,
			NSOL.RTNR_ELGIBILITY_FLG RTNR_ELGIBILITY_FLG 
			FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
			INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  ON CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END = NSOL.SALES_ORDER_LINE_KEY
			WHERE END_TV_DTM  ='3500-01-01 00:00:00' 
			  AND DV_TRX_TYPE = 'SLS_ADJ'
			  AND NSOL.SS_CODE = 'CG'
			  AND NSOL.RTNR_ELGIBILITY_FLG <> 'N'
              AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
                                                 WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_ADJ' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_adj' )
			GROUP BY 1,2,3,4,5
     ) MT
SET EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) 
,EDW_UPDATE_USER = 'EDW_SMC_UPDATE'
WHERE 
SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = NBM.BK_SALES_ADJ_LINE_NUMBER_INT
AND NBM.SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY
AND SLS_ADJ.PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE  
AND MT.DV_TRANSACTION_ID = SLS_ADJ.MANUAL_TRX_KEY
AND MT.DV_ENTERPRISE_INV_SKU_ID = NBM.DV_PRODUCT_KEY
AND MT.DV_TRX_TYPE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE  
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='SLS_ADJ'
AND COALESCE( SLS_ADJ.IDE_IFC_ADJ_INITIATOR_NAME, 'UNK' )  <> 'ppp@cisco.com' /*To handle rebates tagging separately in next update 
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );







UPDATE NBM
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
      $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE SLS_ADJ,
      $$NRTNCRVWDB.N_REBATE_ADJUSTMENT_LINE_NRT RBT_ADJ,
  (SELECT SK_SALES_MOTION_ATTRIB_KEY,
    DV_TRANSACTION_ID,
    CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END SALES_ORDER_LINE_KEY,
    DV_ENTERPRISE_INV_SKU_ID,
    DV_TRX_TYPE,
    NSOL.RTNR_ELGIBILITY_FLG RTNR_ELGIBILITY_FLG 
    FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
    INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
   ON CASE WHEN MT.SALES_ORDER_LINE_KEY<0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END = NSOL.SALES_ORDER_LINE_KEY
    WHERE END_TV_DTM  ='3500-01-01 00:00:00' 
      AND DV_TRX_TYPE = 'SLS_ADJ'
      AND NSOL.SS_CODE = 'CG'
      AND NSOL.RTNR_ELGIBILITY_FLG <> 'N'
               AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
                                                 WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_ADJ' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_adj' )
    GROUP BY 1,2,3,4,5,6
      ) MT
SET EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) 
,EDW_UPDATE_USER = 'EDW_SMC_UPDATE'
 WHERE 
 SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = NBM.BK_SALES_ADJ_LINE_NUMBER_INT
 AND NBM.SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY
 AND SLS_ADJ.PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE  
 AND MT.DV_TRANSACTION_ID = SLS_ADJ.MANUAL_TRX_KEY
 AND MT.DV_ENTERPRISE_INV_SKU_ID = NBM.ATTRIBUTED_PRODUCT_KEY 
 AND MT.DV_TRX_TYPE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE  
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='SLS_ADJ'
 AND RBT_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT = SLS_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT
 AND CASE WHEN RBT_ADJ.AR_TRX_LINE_KEY > 0 THEN RBT_ADJ.RU_NEW_RENEW_SOL_KEY ELSE -7777 END = CASE WHEN RBT_ADJ.AR_TRX_LINE_KEY > 0 THEN MT.SALES_ORDER_LINE_KEY ELSE -7777 END
  AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE ); 
/* EDW_SMC_UPDATE as part of ACV SCALE SLS_ADJ */




UPDATE CTL 
FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
     ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
	    FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION 
      ) WI  
SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_ADJ' 
AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_adj' ;

/* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */


 /*SLS ADJ UPDATES */
 
UPDATE NBM 
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
      $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
      (SELECT BK_SALES_ADJ_LINE_NUMBER_INT 
	     FROM $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE
         WHERE RU_BK_NEW_RENEW_POS_TRX_ID_INT IN
			(SELECT BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
				WHERE SALES_ORDER_LINE_KEY IN ( SELECT SALES_ORDER_LINE_KEY  FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
												WHERE  SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND NSOL.SS_CODE = 'CG'	
												  AND EDW_UPDATE_DATETIME >= ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES
																					WHERE JOB_STREAM_ID ='wf_N_BOOKINGS_MEASURE_ADJ'
																					  AND TABLE_NAME = 'N_SALES_ORDER_LINE')
												  AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
																	WHERE SQ.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
																	  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' ) /*SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */								
											  )
				  AND END_TV_DTM = '3500-01-01 00:00:00'
	        )
	    GROUP BY 1) SOL
	 SET SK_SALES_MOTION_ATTRIB_KEY = -777,		
		EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
	 WHERE NBM.BOOKINGS_MEASURE_KEY = SOL.BK_SALES_ADJ_LINE_NUMBER_INT
	  AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
	 AND  FDY.FISCAL_YEAR_NUMBER_INT >= 2016
	 AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> -777
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'SLS_ADJ'
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );



UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
(SELECT BK_SALES_ADJ_LINE_NUMBER_INT FROM $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE
WHERE RU_NEW_RENEW_SOL_KEY IN 
 (SELECT SALES_ORDER_LINE_KEY  FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  WHERE SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND NSOL.SS_CODE = 'CG'	
	AND EDW_UPDATE_DATETIME >= ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES
	 WHERE JOB_STREAM_ID ='wf_N_BOOKINGS_MEASURE_ADJ'
	 AND TABLE_NAME = 'N_SALES_ORDER_LINE')
	 AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
																	WHERE SQ.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
																	  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' ) /*SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */		
	 )
GROUP BY 1) SOL
	 SET SK_SALES_MOTION_ATTRIB_KEY = -777,		
		EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
	 WHERE SOL.BK_SALES_ADJ_LINE_NUMBER_INT=NBM.BOOKINGS_MEASURE_KEY
	 AND  NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
	 AND  FDY.FISCAL_YEAR_NUMBER_INT >= 2016
	 AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> -777
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'SLS_ADJ'
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );


UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
      ( SELECT MAX(EDW_UPDATE_DATETIME) MAX_UPDATE_DTM 
      FROM $$SLSORDVWDB.N_SALES_ORDER_LINE 
       ) WI  
 SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
 WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_ADJ' 
 AND TABLE_NAME = 'N_SALES_ORDER_LINE' ;

UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM ,
( SELECT ITEM_KEY
FROM $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY
WHERE BK_ALLOCATED_SERVC_GROUP_ID IN ('AS TRANSACTION','TRAINING','AS FIXED')
GROUP BY 1
) SFH
SET SK_SALES_MOTION_ATTRIB_KEY = 193004064 ,
EDW_CREATE_USER = 'AS-F-AS-T-DEFAULT-NEW',
EDW_UPDATE_USER = 'AS-F-AS-T-DEFAULT-NEW',
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE NBM.PRODUCT_KEY = SFH.ITEM_KEY
AND NBM.BOOKINGS_PROCESS_DATE > '2019-07-27'
AND NBM.DV_ATTRIBUTION_CD IN ('STANDALONE','ATTRIBUTED')
AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION RTR
WHERE RTR.SK_SALES_MOTION_ATTRIB_KEY = NBM.SK_SALES_MOTION_ATTRIB_KEY
AND RTR.SALES_MOTION_CD = 'NEW'
AND RTR.END_TV_DTM > CURRENT_TIMESTAMP(0) ) ;


Source2 Name : SQ_WI_BOOKINGS_MSR_INTRAD_DEL


Pre SQL : 
DELETE FROM $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL WHERE BKGS_MEASURE_TRANS_TYPE_CODE  IN ('SLS_ADJ', 'POS_ADJ') ;


SQL Query : 
SELECT      
  MDSPD.BK_SALES_ADJ_LINE_NUMBER_INT AS BOOKINGS_MEASURE_KEY ,  
  MDSPD.PROCESS_DATE AS PROCESS_DATE ,  
  'SLS_ADJ' AS BKGS_MEASURE_TRANS_TYPE_CODE,   
  MDSPD.EDW_UPDATE_DTM AS EDW_UPDATE_DATETIME  
  FROM    
  $$NRTNCRVWDB.MT_SALES_ADJUSTMENT_LINE_DEL MDSPD  
   INNER JOIN $$SLSORDVWDB.N_SALES_ADJUSTMENT SALES_ADJ
	ON MDSPD.BK_SALES_ADJ_NUMBER_INT = SALES_ADJ.BK_SALES_ADJ_NUMBER_INT
	AND SALES_ADJ.BK_SALES_ADJ_TYPE_CODE <> 'POS'
	AND MDSPD.IDE_IFC_ADJ_REPORTING_TYPE_CD <>'M'
  WHERE MDSPD.EDW_UPDATE_DTM > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES   WHERE JOB_STREAM_ID='wf_N_BOOKINGS_MEASURE_ADJ' AND TABLE_NAME='MT_SALES_ADJUSTMENT_LINE_DEL')
  UNION ALL
  SELECT      
  MDSPD.BK_SALES_ADJ_LINE_NUMBER_INT AS BOOKINGS_MEASURE_KEY ,  
  MDSPD.PROCESS_DATE AS PROCESS_DATE ,  
  'POS_ADJ' AS BKGS_MEASURE_TRANS_TYPE_CODE,   
  MDSPD.EDW_UPDATE_DTM AS EDW_UPDATE_DATETIME  
  FROM    
  $$NRTNCRVWDB.MT_SALES_ADJUSTMENT_LINE_DEL MDSPD
  INNER JOIN $$SLSORDVWDB.N_SALES_ADJUSTMENT SALES_ADJ
	ON  MDSPD.BK_SALES_ADJ_NUMBER_INT = SALES_ADJ.BK_SALES_ADJ_NUMBER_INT
	AND SALES_ADJ.BK_SALES_ADJ_TYPE_CODE = 'POS'
	AND SALES_ADJ.BK_SALES_ADJ_CODE<>'POS-OA'
  WHERE MDSPD.EDW_UPDATE_DTM > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES WHERE JOB_STREAM_ID='wf_N_BOOKINGS_MEASURE_ADJ' AND TABLE_NAME='MT_SALES_ADJUSTMENT_LINE_DEL')


Post SQL : 



Target2 Name : WI_BOOKINGS_MSR_INTRAD_DEL1


Pre SQL : 



Post SQL : 
COLLECT STATS ON $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL ;

/* To delete the data from Measure table for both POS, SLS_ADJ and POS_ADJ*/
DELETE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE  NBM,
	 $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL WBM
WHERE NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY           
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ');
	
DELETE MT
FROM $$SLSORDVWDB.MT_NAMD_ACNT_BKGS_MEASURE MT,
	 $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL WBM
WHERE 	
	MT.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND MT.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND MT.BKGS_MEASURE_TRANS_TYPE_CODE IN  ('SLS_ADJ','POS_ADJ');

/* To update the last extract  date in control table for SLS_ADJ data */

UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES  CTL , 
     ( SEL MAX(EDW_UPDATE_DATETIME) AS EDW_UPDATE_DATETIME FROM $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL WHERE BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ')  ) WI
SET LAST_EXTRACT_DATE = COALESCE(WI.EDW_UPDATE_DATETIME,CTL.LAST_EXTRACT_DATE)
WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_ADJ' AND TABLE_NAME='MT_SALES_ADJUSTMENT_LINE_DEL';


Source3 Name : SQ3_WI_BOOKINGS_SW_ANNUALISED_ADJ


Pre SQL : 



SQL Query : 
SELECT 
NBM1.BOOKINGS_MEASURE_KEY,
NBM1.BOOKINGS_PROCESS_DATE,
NBM1.BKGS_MEASURE_TRANS_TYPE_CODE ,
NBM1.CONTRACT_START_DTM,
NBM1.CONTRACT_END_DTM,
NBM1.CONTRACT_DURATION AS CONTRACT_DURATION ,
NBM1.ANNUALIZED_FLG
FROM
(
SELECT
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
CAST(TRX.CONTRACT_START_DT AS DATE )  CONTRACT_START_DTM ,
CAST(TRX.CONTRACT_END_DT AS DATE )  CONTRACT_END_DTM,    
ROUND(CASE WHEN SERVICE_FLG='N'			  
		THEN   
		CASE /*CONTRACT DURTN DERIVATION FOR PRODUCTS START*/
		WHEN TRX.CONTRACT_END_DT <> '3500-01-01' AND ( CAST(TRX.CONTRACT_END_DT  AS DATE ) - CAST(TRX.CONTRACT_START_DT AS DATE ) )  > 0
			 THEN CAST((CAST(CAST(TRX.CONTRACT_END_DT AS DATE) -  CAST(TRX.CONTRACT_START_DT AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) ) 
		WHEN TRX.SUBSCRIPTON_TERM_MTHS_CNT > 0
		THEN TRX.SUBSCRIPTON_TERM_MTHS_CNT
		WHEN ( NP.BK_PRODUCT_ID LIKE 'SWOA%' OR  NP.BK_PRODUCT_ID LIKE '%ADJ%' ) AND NP.BK_PRODUCT_ID NOT LIKE 'SWOA-MX%' THEN NULL
		ELSE CASE
			WHEN NP.PRICING_UNIT_NAME = 'YEAR' THEN NP.PRICING_UNIT_DURATION_INT * 12 
			WHEN NP.PRICING_UNIT_NAME = 'MONTHS' THEN NP.PRICING_UNIT_DURATION_INT  
			/* Added as part of June-2018 Meraki scope - goponnus */  
			WHEN NP.PRICING_UNIT_NAME = 'DAYS' THEN ((NP.PRICING_UNIT_DURATION_INT *12)/365)
			WHEN EL.BIZ_DEF_TERM IS NOT NULL THEN EL.BIZ_DEF_TERM
			WHEN EL.DURATION IS NOT NULL THEN EL.DURATION
			ELSE NULL
			END 
		END  /*CONTRACT DURTN DERIVATION FOR PRODUCTS END*/
	ELSE
	/*CONTRACT DURTN DERIVATION FOR SERVICES START*/
	CASE
	 WHEN ( CAST(TRX.CONTRACT_END_DT AS DATE ) - CAST(TRX.CONTRACT_START_DT AS DATE ) )  >0 AND TRX.CONTRACT_END_DT <> '3500-01-01'
	 THEN CAST((CAST((TRX.CONTRACT_END_DT -  TRX.CONTRACT_START_DT ) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
	 WHEN TRX.SUBSCRIPTON_TERM_MTHS_CNT > 0
		THEN TRX.SUBSCRIPTON_TERM_MTHS_CNT
		ELSE NULL
END /*CONTRACT DURTN DERIVATION FOR SERVICES END*/
END		)	  CONTRACT_DURATION , /* Rounded as part of FY20 Oct 6th Release */			
CASE WHEN SERVICE_FLG='N' THEN  /*ANNUALIZED FLAG DERIVATION FOR PRODUCTS START*/
		CASE WHEN CONTRACT_DURATION IS NULL THEN 'Y' 
			WHEN CONTRACT_DURATION IS NOT NULL THEN
			CASE
					WHEN NP.MONETIZATION_TYPE_CD ='PERPETUAL' AND NP.ELA_FLG = 'Y' THEN 'Y'  
					WHEN	COALESCE ( EX.EXCLUDE_FLAG,'N' ) = 'Y' THEN 'Y' 
					WHEN	EX.EXCLUDE_FLAG IS NOT NULL AND	EX.EXCLUDE_FLAG = 'N'  
					THEN     CASE 	WHEN	  CONTRACT_DURATION >12  	AND	NP.MONETIZATION_TYPE_CD <>'USAGE' 	THEN 'N' ELSE	'Y' END
						 WHEN NBM.XCAT_FLG ='Y' 
	 AND(NSO.BK_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649') 
OR NBM.DV_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649'))  AND NP.RU_BK_PRODUCT_FAMILY_ID='WBXEE'  THEN 'Y'
					WHEN	CONTRACT_DURATION >12 AND	NP.MONETIZATION_TYPE_CD <>'USAGE'  /*AND	NBM.XCAT_FLG <>'Y'*//*SVAKULAB*/ AND FDM.BK_DEAL_ID IS NULL THEN 'N' ELSE	'Y'
			END
		END	/*ANNUALIZED FLAG DERIVATION FOR PRODUCTS END*/
ELSE	/*ANNUALIZED FLAG DERIVATION FOR SERVICES START*/
		 CASE  WHEN CONTRACT_DURATION >12 THEN 'N'
		 ELSE 'Y'  
		END/*ANNUALIZED FLAG DERIVATION FOR SERVICES END*/
		
END		ANNUALIZED_FLG  
  
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM

/*INNER  JOIN (SELECT 
				DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD,BK_PRDT_ALLCTN_CLSFCTN_CD,ALLOCATION_PCT
				FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN  WHERE  BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS','UNKNOWN')
				GROUP BY 1,2,3,4,5 QUALIFY RANK()  OVER (PARTITION BY DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD  
					ORDER BY  BK_PRDT_ALLCTN_CLSFCTN_CD DESC  ) = 1
			) ALCTN
ON NBM.PRODUCT_KEY= ALCTN.PRODUCT_KEY AND NBM.FISCAL_YEAR_QUARTER_NUMBER_INT=ALCTN.DV_FISCAL_YEAR_QUARTER_NUM_INT*/
INNER JOIN 
		$$COMREFVWDB.N_PRODUCT NP
				ON NBM.PRODUCT_KEY=NP.ITEM_KEY
				AND NBM.SALES_ADJUSTMENT_SOURCE_CODE <> 'PPP' /*Added as part of PR18374-VIP_CSPP_Line_Level_Posting_to_EDW_Aug*/
LEFT OUTER JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF ON NP.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID
LEFT OUTER JOIN (SELECT 
					SKU,INVENTORY_ITEM_ID,DURATION,END_DATE,BIZ_DEF_TERM,VERSION_NUMBER FROM $$ETLVWDB.EL_CG1_XXCFIR_PROD_SUBSCR_SKU 
					GROUP BY 1,2,3,4,5,6
					QUALIFY RANK() OVER (PARTITION BY SKU,INVENTORY_ITEM_ID ORDER BY END_DATE,VERSION_NUMBER DESC)=1
				)EL
ON NP.BK_PRODUCT_ID=EL.SKU
INNER  JOIN $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE  NADJ
				ON     NBM.BOOKINGS_MEASURE_KEY      = NADJ.BK_SALES_ADJ_LINE_NUMBER_INT 
  INNER JOIN
     $$SLSORDVWDB.N_SALES_ORDER_TV NSO
	 ON NBM.SALES_ORDER_KEY = NSO.SALES_ORDER_KEY/*ICPM Annualization-svakulab*/		   				
LEFT OUTER JOIN $$NRTNCRVWDB.N_SLS_ADJ_REBOK_MNL_TRX_NRT_TV  TRX 
				ON  NADJ.MANUAL_TRX_KEY = TRX.MANUAL_TRX_KEY 
					AND TRX.END_TV_DTM ='3500-01-01 00:00:00'

LEFT OUTER JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING  FDM
ON NBM.DV_DEAL_ID = FDM.BK_DEAL_ID
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = FDM.BK_DV_FISCAL_YEAR_MTH_NUM_INT
				
LEFT OUTER JOIN $$STGDB.WI_ATCCV_EXCLUDE_TRX EX 
ON	EX.EXCLUDE_VALUE =  ( 
					CASE	WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN NP.RU_BK_PRODUCT_FAMILY_ID 
			                    WHEN EXCLUDE_REF_COLUMN_1 = 'ADJUSTMENT_CODE'  THEN NBM.ADJUSTMENT_CODE
                   				WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN NP.BK_PRODUCT_ID 
								WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
					END	) 
WHERE 1=1/*NBM.SERVICE_FLG  ='N'*/
/*AND NBM.CORPORATE_BOOKINGS_FLG='Y'*/
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
/*AND ALCTN.BK_PRDT_ALLCTN_CLSFCTN_CD       IN  ( 'Software'  )*/
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE  = 'SLS_ADJ'
GROUP BY 1,2,3,4,5,6,7
) NBM1

INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE MEASURE
ON NBM1.BOOKINGS_MEASURE_KEY= MEASURE.BOOKINGS_MEASURE_KEY
AND NBM1.BOOKINGS_PROCESS_DATE= MEASURE.BOOKINGS_PROCESS_DATE
AND NBM1.BKGS_MEASURE_TRANS_TYPE_CODE= MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE      
AND MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE = 'SLS_ADJ'

WHERE 
   (
   COALESCE(CAST(NBM1.CONTRACT_START_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST( '3500-01-01' AS DATE FORMAT 'YYYY-MM-DD') )<> COALESCE(CAST(MEASURE.RU_SERVICE_CONTRACT_START_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST ('3500-01-01' AS DATE FORMAT 'YYYY-MM-DD'))
   OR COALESCE(CAST(NBM1.CONTRACT_END_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST( '3500-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <> COALESCE(CAST(MEASURE.RU_SERVICE_CONTRACT_END_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST ('3500-01-01' AS DATE FORMAT 'YYYY-MM-DD'))
   OR COALESCE(NBM1.CONTRACT_DURATION,-1)  <>COALESCE(MEASURE.DV_CONTRACT_DURATION,-1)
  OR COALESCE(NBM1.ANNUALIZED_FLG,'=' )  <> COALESCE(MEASURE.DV_ANNUALIZED_FLG,'=' ) 
   )
 AND 1=2


Post SQL : 



Target3 Name : WI_BOOKINGS_SW_ANNUALISED_ADJ1


Pre SQL : 
DELETE FROM $$STGDB.WI_BOOKINGS_SW_ANNUALISED_ADJ ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP ('$$STGDB','WI_BOOKINGS_SW_ANNUALISED_ADJ','D'); 
/*UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
,$$STGDB.WI_BOOKINGS_SW_ANNUALISED_ADJ WI
SET RU_SERVICE_CONTRACT_START_DTM=(CASE WHEN WI.CONTRACT_START_DTM IN ('1900-01-01','3500-01-01') 
THEN NULL ELSE WI.CONTRACT_START_DTM  END),									
RU_SERVICE_CONTRACT_END_DTM=(CASE WHEN WI.CONTRACT_END_DTM IN ('1900-01-01','3500-01-01') 
THEN NULL ELSE WI.CONTRACT_END_DTM  END),
DV_CONTRACT_DURATION=WI.CONTRACT_DURATION,
DV_ANNUALIZED_FLG=WI.ANNUALIZED_FLG,
DV_ANNUALIZED_US_NET_AMT=(CASE WHEN ANNUALIZED_FLG ='Y' THEN NBM.DD_COMP_US_NET_PRICE_AMOUNT
WHEN ANNUALIZED_FLG='N' THEN (NBM.DD_COMP_US_NET_PRICE_AMOUNT/CONTRACT_DURATION)*12
ELSE DD_COMP_US_NET_PRICE_AMOUNT END), 
DV_MULTIYEAR_US_NET_AMT=DD_COMP_US_NET_PRICE_AMOUNT - (CASE WHEN ANNUALIZED_FLG='Y' THEN NBM.DD_COMP_US_NET_PRICE_AMOUNT
WHEN ANNUALIZED_FLG='N' THEN (NBM.DD_COMP_US_NET_PRICE_AMOUNT/CONTRACT_DURATION)*12
ELSE DD_COMP_US_NET_PRICE_AMOUNT END), 
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0),
EDW_UPDATE_USER=USER         
WHERE NBM.BOOKINGS_MEASURE_KEY=WI.BOOKINGS_MEASURE_KEY
AND NBM.BOOKINGS_PROCESS_DATE=WI.BOOKINGS_PROCESS_DATE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WI.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='SLS_ADJ'; COMMENTED AS PART OF ACV SCALE*/ 
/*Added the below update for Rebates data as part of PR18374 
UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
,$$NRTNCRVWDB.N_REBATE_ADJUSTMENT_LINE_NRT_TV NRAL
SET RU_SERVICE_CONTRACT_START_DTM=(CASE WHEN NRAL.RU_SERVICE_CONTRACT_START_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00') 
THEN NULL ELSE NRAL.RU_SERVICE_CONTRACT_START_DTM  END),
RU_SERVICE_CONTRACT_END_DTM=(CASE WHEN NRAL.RU_SERVICE_CONTRACT_END_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00') 
THEN NULL ELSE NRAL.RU_SERVICE_CONTRACT_END_DTM  END),
DV_CONTRACT_DURATION=NRAL.DV_CONTRACT_DURATION,
DV_ANNUALIZED_FLG=NRAL.DV_ANNUALIZED_FLG,
DV_ANNUALIZED_US_NET_AMT=NRAL.DV_ANNUALIZED_US_NET_AMT, 
DV_MULTIYEAR_US_NET_AMT=NRAL.DV_MULTI_YEAR_US_NET_AMT, 
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0),
EDW_UPDATE_USER=USER 
WHERE NBM.BOOKINGS_MEASURE_KEY=NRAL.BK_SALES_ADJ_LINE_NUMBER_INT
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='SLS_ADJ'
AND NBM.SALES_ADJUSTMENT_SOURCE_CODE='PPP'
AND NRAL.END_TV_DTM ='3500-01-01 00:00:00';
*/
/*Corrected update 12/13/2019 PR18374 */
/*UPDATE NBM FROM
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
,$$NRTNCRVWDB.N_REBATE_ADJUSTMENT_LINE_NRT_TV NRAL
SET RU_SERVICE_CONTRACT_START_DTM=(CASE WHEN NRAL.RU_SERVICE_CONTRACT_START_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00')
THEN NULL ELSE NRAL.RU_SERVICE_CONTRACT_START_DTM END),
RU_SERVICE_CONTRACT_END_DTM=(CASE WHEN NRAL.RU_SERVICE_CONTRACT_END_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00')
THEN NULL ELSE NRAL.RU_SERVICE_CONTRACT_END_DTM END),
DV_CONTRACT_DURATION=NRAL.DV_CONTRACT_DURATION,
DV_ANNUALIZED_FLG=NRAL.DV_ANNUALIZED_FLG,
DV_ANNUALIZED_US_NET_AMT=NRAL.DV_ANNUALIZED_US_NET_AMT,
DV_MULTIYEAR_US_NET_AMT=NRAL.DV_MULTI_YEAR_US_NET_AMT,
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0),
EDW_UPDATE_USER=USER
WHERE NBM.BOOKINGS_MEASURE_KEY=NRAL.BK_SALES_ADJ_LINE_NUMBER_INT
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='SLS_ADJ'
AND NBM.SALES_ADJUSTMENT_SOURCE_CODE='PPP'
AND NRAL.END_TV_DTM ='3500-01-01 00:00:00'
AND EXISTS
(
SELECT 1 FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
WHERE 1=1
AND WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE = NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE='SLS_ADJ'
AND WBM.SALES_ADJUSTMENT_SOURCE_CODE='PPP'
); COMMENTED AS PART OF ACV SCALE */
/*ADDED THE BELOW STATEMENTS AS PART OF ACV Q3FY18 ELA ENRICHMENT*/ /*SELECTING CURRENT MONTHS PERPETUAL,ELA FLAG DATA WITH NULL AS CONTRACT DURATION*/
DELETE FROM $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ADJ;
INSERT INTO $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ADJ
SELECT BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE,BKGS_MEASURE_TRANS_TYPE_CODE,SALES_ORDER_KEY, NBM.PRODUCT_KEY FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY=NP.ITEM_KEY
WHERE NP.MONETIZATION_TYPE_CD='perpetual'
AND NP.ELA_FLG ='Y'
AND BKGS_MEASURE_TRANS_TYPE_CODE in ('SLS_ADJ')
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=(SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)  
AND DV_CONTRACT_DURATION IS NULL
AND NBM.SERVICE_FLG='N';
COLLECT STATS ON $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ADJ INDEX UPI_ST_PERPETUAL_ELA_TERM_ENRICHMENT_ADJ; 
/*SELECTING  MAX CONTRACT DURATION FOR EACH SALES ORDER LINE KEY BY LOOKING UP THE PAST ONE YEAR ERP DATA WITH TERM AS MONETIZATION*/
DELETE FROM $$STGDB.ST_SOL_DURATION_ADJ;
INSERT INTO $$STGDB.ST_SOL_DURATION_ADJ
SELECT SALES_ORDER_KEY, ROUND(MAX(DV_CONTRACT_DURATION)) AS DV_CONTRACT_DURATION
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY=NP.ITEM_KEY
WHERE  NP.MONETIZATION_TYPE_CD='TERM'
AND BKGS_MEASURE_TRANS_TYPE_CODE in ('ERP')
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT >= (SELECT FISCAL_YEAR_MTH_NUMBER_INT-100 FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)  
AND NBM.SALES_ORDER_KEY IN (SELECT DISTINCT SALES_ORDER_KEY FROM $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ADJ WHERE SALES_ORDER_KEY > 0 )
AND DV_CONTRACT_DURATION IS NOT NULL
AND NBM.SERVICE_FLG = 'N'
GROUP BY 1;
COLLECT STATS ON $$STGDB.ST_SOL_DURATION_ADJ INDEX (SALES_ORDER_KEY) ;
--
UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ADJ WI 
,$$STGDB.ST_SOL_DURATION_ADJ  SOL
SET RU_SERVICE_CONTRACT_START_DTM = NULL,
RU_SERVICE_CONTRACT_END_DTM = NULL,
DV_CONTRACT_DURATION = ROUND(SOL.DV_CONTRACT_DURATION),
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER = USER         
WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
AND WI.SALES_ORDER_KEY=SOL.SALES_ORDER_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='SLS_ADJ';
/*ADDED AS PART OF EDW_FY19 DEC09REL CR11731*/
DELETE FROM $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP;
INSERT INTO $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,NBM.BOOKINGS_MEASURE_KEY,NBM.BOOKINGS_PROCESS_DATE,'SOFTWARE' AS DV_SERVICE_PRODUCT_FLAG
FROM $$WORKDB.W_BOOKINGS_MEASURE NBM
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY)  
WHERE 1=1 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND NBM.SERVICE_FLG = 'N'
AND P.MONETIZATION_TYPE_CD = 'TERM'
AND 
EXISTS
(SELECT 1 FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN PC 
WHERE PC.PRODUCT_KEY = NBM.PRODUCT_KEY 
AND PC.DV_FISCAL_YEAR_QUARTER_NUM_INT = NBM.FISCAL_YEAR_QUARTER_NUMBER_INT
AND PC.BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS', 'UNKNOWN')
AND PC.BK_PRDT_ALLCTN_CLSFCTN_CD = 'SOFTWARE')
UNION ALL
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,NBM.BOOKINGS_MEASURE_KEY,NBM.BOOKINGS_PROCESS_DATE,'SERVICE' AS DV_SERVICE_PRODUCT_FLAG
FROM $$WORKDB.W_BOOKINGS_MEASURE NBM
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
WHERE 1=1 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND NBM.SERVICE_FLG = 'Y'
AND
EXISTS 
(SELECT 1 FROM 
$$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH 
WHERE 
SFH.BK_ALLOCATED_SERVC_GROUP_ID<>'UNKNOWN'
AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD='SPA'
AND ((SFH.BK_SERVICE_CATEGORY_ID='TECHNICAL SUPPORT SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  NOT IN ('TRAINING'))
OR (SFH.BK_SERVICE_CATEGORY_ID='ADVANCED SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID IN ('AS SUBSCRIPTION')) )
AND SFH.ITEM_KEY = P.ITEM_KEY); 
--
UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
-- ACV Policy Flg
CASE 
WHEN NBM.SERVICE_FLG = 'N' AND EX.SERVICE_FLG='N' AND  COALESCE (EX.EXCLUDE_FLAG,'N') = 'Y' THEN 'Y'
WHEN NBM.SERVICE_FLG = 'Y' AND  COALESCE (EX.EXCLUDE_FLAG,'N') = 'Y' THEN 'Y'
WHEN NBM.XCAT_FLG ='Y' AND P.RU_BK_PRODUCT_FAMILY_ID = 'WBXEE'
AND(NSO.BK_DEAL_ID IN ('16621975','16922373','6922383','16897335','16901905','17684649') 
OR NBM.DV_DEAL_ID IN ('16621975','16922373','6922383','16897335','16901905','17684649')) THEN 'Y'
WHEN  FDM.BK_DEAL_ID IS NOT NULL THEN 'Y'
ELSE 'N'
END AS ACV_POLICY_FLG,
-- PID to Term
CASE WHEN DV_SERVICE_PRODUCT_FLAG = 'SOFTWARE' THEN 
(CASE          
WHEN P.PRICING_UNIT_NAME='YEAR' THEN P.PRICING_UNIT_DURATION_INT * 12
WHEN P.PRICING_UNIT_NAME='MONTHS' THEN P.PRICING_UNIT_DURATION_INT
WHEN P.PRICING_UNIT_NAME='DAYS' THEN (CAST(P.PRICING_UNIT_DURATION_INT AS DECIMAL(15,6))*12)/365
END)
WHEN DV_SERVICE_PRODUCT_FLAG='SERVICE' THEN NULL
ELSE NULL
END AS PID_TO_TERM_1,
CASE WHEN PID_TO_TERM_1 IS NULL AND P.BK_PRODUCT_ID='XCAT-ELA-5Y-ENG' THEN 60
ELSE PID_TO_TERM_1
END AS PID_TO_TERM,
-- BKGS dates
CASE WHEN NBM.RU_SERVICE_CONTRACT_START_DTM NOT IN ('3500-01-01 00:00:00')
AND NBM.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL
AND NBM.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
THEN CAST(NBM.RU_SERVICE_CONTRACT_START_DTM AS DATE)
END AS BKGS_CONTRACT_START_DT,
CASE WHEN NBM.RU_SERVICE_CONTRACT_END_DTM NOT IN ('3500-01-01 00:00:00','1900-01-01 00:00:00')
AND NBM.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL
AND NBM.RU_SERVICE_CONTRACT_END_DTM > NBM.RU_SERVICE_CONTRACT_START_DTM
AND CAST(NBM.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
THEN CAST(NBM.RU_SERVICE_CONTRACT_END_DTM AS DATE)
END AS BKGS_CONTRACT_END_DT,
CAST((BKGS_CONTRACT_END_DT - BKGS_CONTRACT_START_DT) AS DECIMAL(15,6))*12/365 AS DV_BKGS_CONTRACT_DURATION,
-- Lookup Contract Duration
CASE
WHEN DV_BKGS_CONTRACT_DURATION IS NOT NULL AND DV_BKGS_CONTRACT_DURATION > 0 THEN DV_BKGS_CONTRACT_DURATION
WHEN NBM.DV_CONTRACT_DURATION IS NOT NULL AND NBM.DV_CONTRACT_DURATION > 0 AND NBM.DV_CONTRACT_DURATION <= 240 THEN NBM.DV_CONTRACT_DURATION 
WHEN COALESCE(PID_TO_TERM,0) > 0 THEN PID_TO_TERM 
ELSE 12
END AS LKP_CONTRACT_DURATION,
-- NEW_CONTRACT_DURATION
CASE WHEN ACV_POLICY_FLG='Y' THEN 12 
ELSE CASE WHEN LKP_CONTRACT_DURATION > 0 AND LKP_CONTRACT_DURATION <=1 THEN 1 
ELSE LKP_CONTRACT_DURATION 
END END AS NEW_CONTRACT_DURATION,
-- NEW_SERVICE_CONTRACT_START_DTM
CASE WHEN ACV_POLICY_FLG = 'Y' THEN CAST(GREATEST(CAST(COALESCE(BKGS_CONTRACT_START_DT,DATE '1900-01-01') AS INT),CAST(NBM.BOOKINGS_PROCESS_DATE AS INT)) AS DATE)
ELSE COALESCE(BKGS_CONTRACT_START_DT,NBM.BOOKINGS_PROCESS_DATE)
END AS NEW_SERVICE_CONTRACT_START_DTM,
-- NEW_SERVICE_CONTRACT_END_DTM
CASE 
WHEN FLOOR(NEW_CONTRACT_DURATION)=CEIL(NEW_CONTRACT_DURATION)
THEN ADD_MONTHS(NEW_SERVICE_CONTRACT_START_DTM,CAST(NEW_CONTRACT_DURATION AS INTEGER)) - 1
ELSE NEW_SERVICE_CONTRACT_START_DTM + (ROUND((NEW_CONTRACT_DURATION/12.000000)*365))
END AS NEW_SERVICE_CONTRACT_END_DTM,
CASE WHEN ACV_POLICY_FLG = 'Y'  THEN 'ACV Policy'
WHEN DV_BKGS_CONTRACT_DURATION IS NOT NULL AND DV_BKGS_CONTRACT_DURATION > 0 THEN 'BKGS MSR Dates to Term'
WHEN NBM.DV_CONTRACT_DURATION IS NOT NULL AND NBM.DV_CONTRACT_DURATION > 0 THEN 'BKGS MSR Term'
WHEN COALESCE(PID_TO_TERM,0) > 0 THEN 'PID to Term'
ELSE 'Default Term'
END AS DV_ENRICHMENT_RULE_DESC,
-- NEW_MTHLY_RCR_REV_TRXL_USD_AMT
NBM.DD_COMP_US_NET_PRICE_AMOUNT/NEW_CONTRACT_DURATION AS NEW_MTHLY_RCR_REV_TRXL_USD_AMT,
-- NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT
NEW_MTHLY_RCR_REV_TRXL_USD_AMT * 12.000000 AS NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM 
INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC ON (WBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM 
ON (WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE)
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY)
LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_TV NSO ON NBM.SALES_ORDER_KEY=NSO.SALES_ORDER_KEY 
LEFT JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF ON P.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID				 
LEFT JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING FDM  ON (NBM.DV_DEAL_ID = FDM.BK_DEAL_ID AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = FDM.BK_DV_FISCAL_YEAR_MTH_NUM_INT)
LEFT JOIN $$STGDB.WI_SUBMET_ATCCV_EXCLUDE_CNFG EX 
ON EX.EXCLUDE_VALUE=(CASE WHEN EX.EXCLUDE_REF_COLUMN_1='RU_BK_PRODUCT_FAMILY_ID' THEN P.RU_BK_PRODUCT_FAMILY_ID 
WHEN EXCLUDE_REF_COLUMN_1='ADJUSTMENT_CODE' THEN NBM.ADJUSTMENT_CODE
WHEN EXCLUDE_REF_COLUMN_1='BK_PRODUCT_ID' THEN P.BK_PRODUCT_ID
WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID END)
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP' /*Modified as part of PR18374 */) WBM
SET DV_ENRICHED_SERVICE_CONTRACT_START_DT=WBM.NEW_SERVICE_CONTRACT_START_DTM,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=WBM.NEW_SERVICE_CONTRACT_END_DTM,
DV_ENRICHED_CONTRACT_DURATION=WBM.NEW_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=WBM.DV_ENRICHMENT_RULE_DESC,
DV_MTHLY_RCR_REV_TRXL_USD_AMT=COALESCE(WBM.NEW_MTHLY_RCR_REV_TRXL_USD_AMT,0),
DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=COALESCE(WBM.NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT,0),
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP' /*Modified as part of PR18374 */
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND (NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT <> WBM.NEW_SERVICE_CONTRACT_START_DTM
or
NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT <> WBM.NEW_SERVICE_CONTRACT_END_DTM
or 
NBM.DV_ENRICHED_CONTRACT_DURATION <> WBM.NEW_CONTRACT_DURATION
OR 
NBM.DV_ENRICHMENT_RULE_DESC <> WBM.DV_ENRICHMENT_RULE_DESC
or 
NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT <> COALESCE(WBM.NEW_MTHLY_RCR_REV_TRXL_USD_AMT,0)
or
NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=COALESCE(WBM.NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT,0));
/* Update for enriched end customer key columns - START (Modifed as part of PR19156) */
/* Insert into temp table : Dedicated Node */
DELETE FROM $$STGDB.WI_SALES_NODE_UNK_CUST_D;
INSERT INTO $$STGDB.WI_SALES_NODE_UNK_CUST_D 
SELECT
SALE_NODE_LEVEL,
SH1.L4_SALES_TERRITORY_DESCR AS L4_SALES_TERRITORY_DESCR,
SH1.L5_SALES_TERRITORY_DESCR AS L5_SALES_TERRITORY_DESCR,
SH1.L6_SALES_TERRITORY_DESCR AS L6_SALES_TERRITORY_DESCR,
NBM1.DV_END_CUSTOMER_KEY AS ENRICHED_END_CUSTOMER_KEY,
EC1.GU_PRIMARY_NAME AS GU_PRIMARY_NAME
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM1
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER EC1 ON (NBM1.DV_END_CUSTOMER_KEY = EC1.END_CUSTOMER_KEY)
INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY SH1 ON (NBM1.SALES_TERRITORY_KEY = SH1.SALES_TERRITORY_KEY AND SH1.SALES_TERRITORY_TYPE_CODE IN ('CORP. REVENUE','UNKNOWN'))
INNER JOIN $$STGDB.ST_SN_LEVEL4_UNK_CUST_CNFG CTRL
ON (CTRL.GU_PRIMARY_NAME = EC1.GU_PRIMARY_NAME 
AND ((SALE_NODE_LEVEL='L4' AND CTRL.SALES_NODE_DESC = SH1.L4_SALES_TERRITORY_DESCR)
OR (SALE_NODE_LEVEL='L5' AND CTRL.SALES_NODE_DESC = SH1.L5_SALES_TERRITORY_DESCR) 
OR (SALE_NODE_LEVEL='L6' AND CTRL.SALES_NODE_DESC = SH1.L6_SALES_TERRITORY_DESCR)) AND CTRL.SALES_NODE_DESC NOT LIKE ALL ('%MY%','%MULTI%'))
INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR PM1 ON (PM1.CALENDAR_DATE = NBM1.BOOKINGS_PROCESS_DATE)
WHERE 1=1 AND NBM1.CORPORATE_BOOKINGS_FLG = 'Y'
AND NBM1.DV_ATTRIBUTION_CD IN ('STANDALONE', 'ATTRIBUTED')
AND EC1.GU_PARTY_SSOT_PARTY_ID_INT > 0 AND EC1.GU_PRIMARY_NAME NOT IN ('UNKNOWN','DISTRIBUTOR OFFSET','DISTI STOCK')
AND NBM1.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP')
AND PM1.FISCAL_YEAR_AGE BETWEEN 0 AND 3
GROUP BY 1,2,3,4,5,6
QUALIFY ROW_NUMBER() OVER (PARTITION BY SH1.L6_SALES_TERRITORY_DESCR ORDER BY SUM(NBM1.DD_COMP_US_NET_PRICE_AMOUNT) DESC) = 1;
COLLECT STATS ON $$STGDB.WI_SALES_NODE_UNK_CUST_D INDEX NUPI_WI_SALES_NODE_UNK_CUST_D;
COLLECT STATS ON $$STGDB.WI_SALES_NODE_UNK_CUST_D COLUMN SALE_NODE_LEVEL;
COLLECT STATS ON $$STGDB.WI_SALES_NODE_UNK_CUST_D COLUMN GU_PRIMARY_NAME;
/*Insert into temp table : Multi year Node*/
DELETE FROM $$STGDB.WI_SALES_NODE_UNK_CUST_MY;
INSERT INTO $$STGDB.WI_SALES_NODE_UNK_CUST_MY 
SELECT
NBM1.DV_END_CUSTOMER_KEY AS ENRICHED_END_CUSTOMER_KEY,
CTRL.GU_PRIMARY_NAME AS GU_PRIMARY_NAME
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM1
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER EC1 ON (NBM1.DV_END_CUSTOMER_KEY = EC1.END_CUSTOMER_KEY)
INNER JOIN (SELECT DISTINCT GU_PRIMARY_NAME FROM $$STGDB.ST_SN_LEVEL4_UNK_CUST_CNFG WHERE SALES_NODE_DESC LIKE ANY ('%MY%','%MULTI%')) CTRL
ON CTRL.GU_PRIMARY_NAME = EC1.GU_PRIMARY_NAME
INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR PM1 ON (PM1.CALENDAR_DATE = NBM1.BOOKINGS_PROCESS_DATE)
WHERE 1=1 AND NBM1.CORPORATE_BOOKINGS_FLG = 'Y'
AND NBM1.DV_ATTRIBUTION_CD IN ('STANDALONE', 'ATTRIBUTED')
AND EC1.GU_PARTY_SSOT_PARTY_ID_INT > 0 AND EC1.GU_PRIMARY_NAME NOT IN ('UNKNOWN','DISTRIBUTOR OFFSET','DISTI STOCK')
AND NBM1.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP','XAAS')
AND PM1.FISCAL_YEAR_AGE BETWEEN 0 AND 3
GROUP BY 1,2
QUALIFY ROW_NUMBER() OVER (PARTITION BY CTRL.GU_PRIMARY_NAME ORDER BY SUM(NBM1.DD_COMP_US_NET_PRICE_AMOUNT) DESC) = 1;
COLLECT STATS ON $$STGDB.WI_SALES_NODE_UNK_CUST_MY INDEX NUPI_WI_SALES_NODE_UNK_CUST_MY;
/*Node to customer enrichment : Dedicated Node*/
UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(SELECT 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
EEC.ENRICHED_END_CUSTOMER_KEY AS ENRICHED_END_CUSTOMER_KEY,
CASE WHEN EEC.SALE_NODE_LEVEL='L4' THEN 'L4 Node To Customer'
WHEN EEC.SALE_NODE_LEVEL='L5' THEN 'L5 Node To Customer'
WHEN EEC.SALE_NODE_LEVEL='L6' THEN 'L6 Node To Customer'
ELSE NULL END AS ENRICHED_UNK_END_CUST_RULE_DESC
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM 
INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC ON (WBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM ON (WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE)
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER EC ON (WBM.DV_END_CUSTOMER_KEY = EC.END_CUSTOMER_KEY)
INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY SH ON (WBM.SALES_TERRITORY_KEY = SH.SALES_TERRITORY_KEY AND SH.SALES_TERRITORY_TYPE_CODE IN ('CORP. REVENUE','UNKNOWN'))
INNER JOIN $$STGDB.WI_SALES_NODE_UNK_CUST_D EEC 
ON (SH.L6_SALES_TERRITORY_DESCR = EEC.L6_SALES_TERRITORY_DESCR 
AND SH.L5_SALES_TERRITORY_DESCR = EEC.L5_SALES_TERRITORY_DESCR 
AND SH.L4_SALES_TERRITORY_DESCR = EEC.L4_SALES_TERRITORY_DESCR )
WHERE 1=1 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND EC.GU_PRIMARY_NAME IN ('UNKNOWN','DISTRIBUTOR OFFSET','DISTI STOCK')
AND EEC.GU_PRIMARY_NAME NOT IN ('UNKNOWN','DISTRIBUTOR OFFSET','DISTI STOCK')) WBM 
SET ENRICHED_END_CUSTOMER_KEY=WBM.ENRICHED_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC=WBM.ENRICHED_UNK_END_CUST_RULE_DESC,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL
AND NBM.BOOKINGS_MEASURE_KEY=WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND (NBM.ENRICHED_END_CUSTOMER_KEY <> WBM.ENRICHED_END_CUSTOMER_KEY
OR
NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC <> WBM.ENRICHED_UNK_END_CUST_RULE_DESC);
------------ Node to customer enrichment : Multi year Node --------------
UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(SELECT 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
MY_MAX.ENRICHED_END_CUSTOMER_KEY AS ENRICHED_END_CUSTOMER_KEY,
CASE WHEN CTRL.SALE_NODE_LEVEL='L4' THEN 'L4-MY Node To Customer'
WHEN CTRL.SALE_NODE_LEVEL='L5' THEN 'L5-MY Node To Customer'
WHEN CTRL.SALE_NODE_LEVEL='L6' THEN 'L6-MY Node To Customer'
ELSE NULL END AS ENRICHED_UNK_END_CUST_RULE_DESC
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM 
INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC ON (WBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM ON (WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE)
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER EC ON (WBM.DV_END_CUSTOMER_KEY = EC.END_CUSTOMER_KEY)
INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY SH ON (WBM.SALES_TERRITORY_KEY = SH.SALES_TERRITORY_KEY AND SH.SALES_TERRITORY_TYPE_CODE IN ('CORP. REVENUE','UNKNOWN'))
INNER JOIN $$STGDB.ST_SN_LEVEL4_UNK_CUST_CNFG CTRL ON (((SH.L4_SALES_TERRITORY_DESCR = CTRL.SALES_NODE_DESC AND CTRL.SALE_NODE_LEVEL = 'L4')
OR (SH.L5_SALES_TERRITORY_DESCR = CTRL.SALES_NODE_DESC AND CTRL.SALE_NODE_LEVEL = 'L5')
OR (SH.L6_SALES_TERRITORY_DESCR = CTRL.SALES_NODE_DESC AND CTRL.SALE_NODE_LEVEL = 'L6')) 
AND CTRL.ACTIVE_FLG='Y' AND CTRL.SALES_NODE_DESC LIKE ANY ('%MY%','%MULTI%'))
INNER JOIN $$STGDB.WI_SALES_NODE_UNK_CUST_MY MY_MAX ON CTRL.GU_PRIMARY_NAME = MY_MAX.GU_PRIMARY_NAME
WHERE 1=1 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND EC.GU_PRIMARY_NAME IN ('UNKNOWN','DISTRIBUTOR OFFSET','DISTI STOCK')
AND COALESCE(NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC,'UNKNOWN') NOT IN ('L4 Node To Customer','L5 Node To Customer','L6 Node To Customer')) WBM 
SET ENRICHED_END_CUSTOMER_KEY=WBM.ENRICHED_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC=WBM.ENRICHED_UNK_END_CUST_RULE_DESC,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL
AND NBM.BOOKINGS_MEASURE_KEY=WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND COALESCE (NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC,'UNKNOWN') NOT IN ('L4 Node To Customer','L5 Node To Customer','L6 Node To Customer')
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND (NBM.ENRICHED_END_CUSTOMER_KEY <> WBM.ENRICHED_END_CUSTOMER_KEY
OR 
NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC=WBM.ENRICHED_UNK_END_CUST_RULE_DESC);
/*SO# to customer enrichment*/
UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
NBM.SALES_ORDER_KEY,
SO_END.END_CUSTOMER_KEY AS ENRICHED_END_CUSTOMER_KEY
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM 
INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC ON (WBM.BOOKINGS_MEASURE_KEY=INC.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM ON (WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_SO_END_CUSTOMER SO_END ON WBM.SALES_ORDER_KEY = SO_END.SALES_ORDER_KEY AND SS_CD = 'CG' AND SO_END.END_CUSTOMER_KEY > 0
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER EC ON (WBM.DV_END_CUSTOMER_KEY = EC.END_CUSTOMER_KEY )
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND GU_PRIMARY_NAME NOT IN ('UNKNOWN','DISTRIBUTOR OFFSET','DISTI STOCK')
AND COALESCE(NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC,'UNKNOWN') NOT IN ('L4 Node To Customer','L5 Node To Customer','L6 Node To Customer','L4-MY Node To Customer','L5-MY Node To Customer','L6-MY Node To Customer')
) WBM
SET 
ENRICHED_END_CUSTOMER_KEY=WBM.ENRICHED_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC=CASE WHEN WBM.ENRICHED_END_CUSTOMER_KEY IS NOT NULL THEN 'SO To Customer' ELSE NULL END,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND COALESCE (NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC,'UNKNOWN') NOT IN ('L4 Node To Customer','L5 Node To Customer','L6 Node To Customer','L4-MY Node To Customer','L5-MY Node To Customer','L6-MY Node To Customer')
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND (NBM.ENRICHED_END_CUSTOMER_KEY <> WBM.ENRICHED_END_CUSTOMER_KEY
OR
DV_ENRICHED_UNK_END_CUST_RULE_DESC <> CASE WHEN WBM.ENRICHED_END_CUSTOMER_KEY IS NOT NULL THEN 'SO To Customer' ELSE NULL END);
/*Deal to customer enrichment*/
UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
EEC.ENRICHED_END_CUSTOMER_KEY AS ENRICHED_END_CUSTOMER_KEY,
TD_SYSFNLIB.OREPLACE(TD_SYSFNLIB.OREPLACE(NBM.DV_DEAL_ID,'X0d',''),'X0a','') AS DEAL_ID
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM 
INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC ON (WBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM ON (WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_DEAL ND ON ND.BK_DEAL_ID = WBM.DV_DEAL_ID 
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER EC ON (WBM.DV_END_CUSTOMER_KEY=EC.END_CUSTOMER_KEY)
INNER JOIN $$COMREFVWDB.N_PARTY NP ON (NP.PARTY_SSOT_PARTY_ID_INT=ND.RU_SRC_RPRTD_CUST_REGISTRY_ID)
INNER JOIN (SELECT
EC1.BRANCH_PARTY_SSOT_PARTY_ID_INT AS BRANCH_PARTY_SSOT_PARTY_ID_INT,
NBM1.DV_END_CUSTOMER_KEY AS ENRICHED_END_CUSTOMER_KEY
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM1 
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER EC1 ON (NBM1.DV_END_CUSTOMER_KEY = EC1.END_CUSTOMER_KEY)
INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR PM1 ON (PM1.CALENDAR_DATE = NBM1.BOOKINGS_PROCESS_DATE)
WHERE 1=1
AND NBM1.CORPORATE_BOOKINGS_FLG = 'Y'
AND NBM1.DV_ATTRIBUTION_CD IN ('STANDALONE', 'ATTRIBUTED')
AND EC1.GU_PARTY_SSOT_PARTY_ID_INT > 0 
AND NBM1.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP','XAAS')
AND PM1.FISCAL_YEAR_AGE BETWEEN 0 AND 3
AND GU_PRIMARY_NAME NOT IN ('UNKNOWN','DISTRIBUTOR OFFSET','DISTI STOCK')
GROUP BY 1,2
QUALIFY ROW_NUMBER() OVER (PARTITION BY EC1.BRANCH_PARTY_SSOT_PARTY_ID_INT ORDER BY SUM(NBM1.DD_COMP_US_NET_PRICE_AMOUNT) DESC) = 1) EEC
ON CAST(EEC.BRANCH_PARTY_SSOT_PARTY_ID_INT AS VARCHAR(50))=NP.PARTY_SSOT_PARTY_ID_INT
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND DEAL_ID <> '-9999'
AND EC.GU_PRIMARY_NAME IN ('UNKNOWN','DISTRIBUTOR OFFSET','DISTI STOCK')
AND COALESCE (NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC,'UNKNOWN') NOT IN ('L4 Node To Customer','L5 Node To Customer','L6 Node To Customer','L4-MY Node To Customer','L5-MY Node To Customer','L6-MY Node To Customer','SO To Customer')
) WBM
SET ENRICHED_END_CUSTOMER_KEY=WBM.ENRICHED_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC=CASE WHEN WBM.ENRICHED_END_CUSTOMER_KEY IS NOT NULL THEN 'Deal To Customer' ELSE NULL END,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND COALESCE (NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC,'UNKNOWN') NOT IN ('L4 Node To Customer','L5 Node To Customer','L6 Node To Customer','L4-MY Node To Customer','L5-MY Node To Customer','L6-MY Node To Customer','SO To Customer')
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND (NBM.ENRICHED_END_CUSTOMER_KEY <> WBM.ENRICHED_END_CUSTOMER_KEY
OR
NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC <> CASE WHEN WBM.ENRICHED_END_CUSTOMER_KEY IS NOT NULL THEN 'Deal To Customer' ELSE NULL END);
/*Deal node to customer enrichment*/
UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(SELECT 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
EEC.ENRICHED_END_CUSTOMER_KEY AS ENRICHED_END_CUSTOMER_KEY,
CASE WHEN EEC.SALE_NODE_LEVEL='L4' THEN 'Deal L4 Node To Customer'
WHEN EEC.SALE_NODE_LEVEL='L5' THEN 'Deal L5 Node To Customer'
WHEN EEC.SALE_NODE_LEVEL='L6' THEN 'Deal L6 Node To Customer'
ELSE NULL
END AS ENRICHED_UNK_END_CUST_RULE_DESC
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM 
INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC ON (WBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM ON (WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE)
INNER JOIN $$SLSORDVWDB.N_DEAL ND ON ND.BK_DEAL_ID = WBM.DV_DEAL_ID 																
INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY SH ON (ND.SALES_TERRITORY_KEY = SH.SALES_TERRITORY_KEY AND SH.SALES_TERRITORY_TYPE_CODE IN ('CORP. REVENUE','UNKNOWN'))
INNER JOIN $$STGDB.WI_SALES_NODE_UNK_CUST_D  EEC
ON SH.L6_SALES_TERRITORY_DESCR=EEC.L6_SALES_TERRITORY_DESCR
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ')
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP'
AND COALESCE (NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC,'UNKNOWN') NOT IN ('L4 Node To Customer','L5 Node To Customer','L6 Node To Customer','L4-MY Node To Customer','L5-MY Node To Customer','L6-MY Node To Customer','SO To Customer','Deal To Customer')
)WBM 
SET ENRICHED_END_CUSTOMER_KEY=WBM.ENRICHED_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC=WBM.ENRICHED_UNK_END_CUST_RULE_DESC,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ') 
AND COALESCE(NBM.SALES_ADJUSTMENT_SOURCE_CODE,'UNKNOWN') <> 'PPP' 
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL 
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY 
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE 
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE 
AND COALESCE (NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC,'UNKNOWN') NOT IN ('L4 Node To Customer','L5 Node To Customer','L6 Node To Customer','L4-MY Node To Customer','L5-MY Node To Customer','L6-MY Node To Customer','SO To Customer','Deal To Customer') 
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND (NBM.ENRICHED_END_CUSTOMER_KEY <> WBM.ENRICHED_END_CUSTOMER_KEY
OR
NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC <> WBM.ENRICHED_UNK_END_CUST_RULE_DESC);
/*Bookings end customer enrichment*/
UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$WORKDB.W_BOOKINGS_MEASURE WBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL
SET ENRICHED_END_CUSTOMER_KEY=NBM.DV_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC='Bookings End Customer',
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS_ADJ','SLS_ADJ') 
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL 
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY 
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE 
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE 
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT 
AND NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC IS NULL
AND (NBM.ENRICHED_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY
OR
NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC <> 'Bookings End Customer'); /* Update for enriched end customer key columns - END (Modifed as part of PR19156) */	   
/* UPDATE Added as part of ACV APPD Q2FY20 NOV 17th Release */
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$SLSORDVWDB.MT_SEC_BKGS_TRX_ACV ACV,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_ORIG,
$$NRTNCRVWDB.N_SALES_ADJUSTMENT_NRT NSA
SET
SK_SALES_MOTION_ATTRIB_KEY=NBM_ORIG.SK_SALES_MOTION_ATTRIB_KEY, 
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BOOKINGS_MEASURE_KEY=ACV.BK_SALES_ADJ_LINE_NUMBER_INT
AND ACV.LINKED_BOOKINGS_MEASURE_KEY=NBM_ORIG.BOOKINGS_MEASURE_KEY
AND ACV.DV_FISCAL_YEAR_MTH_NUMBER_INT=NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT
AND ACV.DV_ACV_TRX_TYPE_CD=NBM_ORIG.BKGS_MEASURE_TRANS_TYPE_CODE 
AND NSA.BK_SALES_ADJ_NUMBER_INT=NBM.BK_SALES_ADJ_NUMBER_INT
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='SLS_ADJ'
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT 
AND (NBM.SK_SALES_MOTION_ATTRIB_KEY < 0 OR NBM.SK_SALES_MOTION_ATTRIB_KEY <> NBM_ORIG.SK_SALES_MOTION_ATTRIB_KEY) 
AND NSA.SALES_ADJUSTMENT_SOURCE_CODE='EDW'
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE );
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$NRTNCRVWDB.N_SALES_ADJUSTMENT_LINE_NRT NSAL,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
$$NRTNCRVWDB.N_SALES_ADJUSTMENT_NRT NSA
SET 
RU_SERVICE_CONTRACT_START_DTM=NSAL.RU_SERVICE_CONTRACT_START_DTM,
RU_SERVICE_CONTRACT_END_DTM=NSAL.RU_SERVICE_CONTRACT_END_DTM,
DV_CONTRACT_DURATION=NSAL.DV_CONTRACT_DURATION,
DV_ANNUALIZED_FLG=NSAL.DV_ANNUALIZED_FLG,
DV_ANNUALIZED_US_NET_AMT=NSAL.DV_ANNUALIZED_US_NET_AMT,
DV_MULTIYEAR_US_NET_AMT=NSAL.DV_MULTI_YEAR_US_NET_AMT,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) 
WHERE NBM.BOOKINGS_MEASURE_KEY = NSAL.BK_SALES_ADJ_LINE_NUMBER_INT 
AND NSAL.BK_SALES_ADJ_NUMBER_INT  = NSA.BK_SALES_ADJ_NUMBER_INT
AND(NBM.RU_SERVICE_CONTRACT_START_DTM IS NULL OR NBM.RU_SERVICE_CONTRACT_END_DTM IS NULL OR NBM.DV_CONTRACT_DURATION IS NULL)
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT 
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='SLS_ADJ'
AND NBM.BOOKINGS_MEASURE_KEY < 0
AND NSA.SALES_ADJUSTMENT_SOURCE_CODE='EDW';
/* Added as part of ACV SECURITY Q1FY21 JULY 27th Release */
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$SLSORDVWDB.MT_SEC_BKGS_TRX_ACV ACV,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_ORIG,
$$NRTNCRVWDB.N_SALES_ADJUSTMENT_NRT NSA
SET
DV_PRODUCT_KEY=NBM_ORIG.DV_PRODUCT_KEY, 
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BOOKINGS_MEASURE_KEY=ACV.BK_SALES_ADJ_LINE_NUMBER_INT
AND ACV.LINKED_BOOKINGS_MEASURE_KEY=NBM_ORIG.BOOKINGS_MEASURE_KEY
AND ACV.DV_FISCAL_YEAR_MTH_NUMBER_INT=NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT
AND ACV.DV_ACV_TRX_TYPE_CD=NBM_ORIG.BKGS_MEASURE_TRANS_TYPE_CODE 
AND NSA.BK_SALES_ADJ_NUMBER_INT=NBM.BK_SALES_ADJ_NUMBER_INT
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='SLS_ADJ'
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT 
AND NBM.DV_PRODUCT_KEY <> NBM_ORIG.DV_PRODUCT_KEY
AND NSA.SALES_ADJUSTMENT_SOURCE_CODE='EDW'
AND ACV.DV_ACQUISITION_NAME <> 'APPD';

/* Added as part of ACV Pilot Sep 26th Release */
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL
SET  RU_SERVICE_CONTRACT_END_DTM=NULL,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ', 'POS_ADJ') AND NBM.RU_SERVICE_CONTRACT_END_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00') AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT 
AND NBM.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL; 
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL
SET RU_SERVICE_CONTRACT_START_DTM=NULL,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/
WHERE NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('SLS_ADJ','POS_ADJ') AND NBM.RU_SERVICE_CONTRACT_START_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00')
AND NBM.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL;