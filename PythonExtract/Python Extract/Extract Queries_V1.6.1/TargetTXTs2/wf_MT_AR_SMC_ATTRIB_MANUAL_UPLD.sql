


Source1 Name : SQ_WI_AR_SMC_ATTRIB_MNL_UPLD


Pre SQL : 



SQL Query : 
SELECT 
AR.AR_TRX_LINE_KEY
,AR_ITEM.PRODUCT_KEY AS DV_ENTERPRISE_INV_SKU_ID
,UPPER(ST.SALES_MOTION_CD)
,ST.DV_ALLOCATION_PCT
,'UNKNOWN' AS DV_SERVICE_CATEGORY_CD
,'N' AS DV_OA_FLG
,CURRENT_TIMESTAMP(0) AS START_TV_DTM
,'3500-01-01 00:00:00' AS END_TV_DTM
,'NONRTR-MNL' AS DV_SOURCE_TYPE
,'UNKNOWN' AS SALES_MOTION_TIMING_CD
,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM
,USER AS EDW_CREATE_USER
,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM
,USER AS EDW_UPDATE_USER
,'Y' AS MANUAL_OVERRIDE_ROLE
,COALESCE(NCWP.CISCO_WORKER_PARTY_KEY, -999) AS REQUESTING_CSCO_WRKR_PRTY_KEY 
,COALESCE(ST.CASE_NUMBER, 'UNKNOWN') AS  SLS_MTN_CORRECTION_CASE_NUM
,COALESCE(ST.COMMENTS, 'UNKNOWN') AS SLS_MTN_CORRECTION_CMNT  
,COALESCE(ST.REASON_CODE, 'UNKNOWN') AS SLS_MTN_CORRECTION_REASON_DESC  
FROM $$STGDB.ST_SMR_AR_MANUAL_UPLOAD ST
INNER JOIN $$FINLGLVWDB.N_AR_TRX_LINE AR
ON AR.BK_AR_TRX_NUMBER = ST.AR_TRX_NUMBER 
AND AR.SS_CODE = 'CG'
INNER JOIN $$FINLGLVWDB.N_AR_TRX_ITEM_LINE  AR_ITEM
ON AR.AR_TRX_LINE_KEY = AR_ITEM.AR_TRX_LINE_KEY
INNER JOIN $$COMREFVWDB.N_CISCO_WORKER_PARTY_TV NCWP
ON ST.UPLOAD_ID = NCWP.CEC_ID
AND NCWP.END_TV_DATE = '3500-01-01'
WHERE EXISTS (SELECT AR_TRX_NUMBER, SUM(DV_ALLOCATION_PCT) FROM $$STGDB.ST_SMR_AR_MANUAL_UPLOAD SPLIT
							WHERE ST.AR_TRX_NUMBER = SPLIT.AR_TRX_NUMBER
                                             AND UPPER(SPLIT.SALES_MOTION_CD) IN ('NEW', 'RENEW')
							GROUP BY 1
							HAVING ROUND(SUM(DV_ALLOCATION_PCT), 3) = 1.000 )
AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.MT_AR_NAPLD_SLS_MOTION_ATTRIB MT 
						WHERE MT.AR_TRX_LINE_KEY = AR.AR_TRX_LINE_KEY AND MT.SALES_MOTION_CD IN ('NEW', 'RENEW' , 'N/A') AND END_TV_DTM = '3500-01-01 00:00:00')


Post SQL : 



Target1 Name : WI_AR_SMC_ATTRIB_MNL_UPLD1


Pre SQL : 
DELETE FROM $$STGDB.WI_AR_SMC_ATTRIB_MNL_UPLD;


Post SQL : 
COLLECT STATS ON $$STGDB.WI_AR_SMC_ATTRIB_MNL_UPLD COLUMN( AR_TRX_LINE_KEY, DV_ENTERPRISE_INV_SKU_ID);


Source2 Name : SQ_MT_AR_NAPLD_SLS_MOTION_ATTRIB


Pre SQL : 



SQL Query : 
SELECT 
  WI.AR_TRX_LINE_KEY,
  WI.DV_ENTERPRISE_INV_SKU_ID,
  WI.SALES_MOTION_CD,
  WI.DV_ALLOCATION_PCT,
  WI.DV_SERVICE_CATEGORY_CD,
  WI.DV_OA_FLG,
WI.START_TV_DTM ,
WI.END_TV_DTM ,
  WI.DV_SOURCE_TYPE,
  WI.SALES_MOTION_TIMING_CD
 ,WI.EDW_CREATE_DTM 
  ,WI.EDW_CREATE_USER 
   ,WI.EDW_UPDATE_DTM 
  ,WI.EDW_UPDATE_USER
,WI.MANUAL_OVERRIDE_ROLE
,WI.REQUESTING_CSCO_WRKR_PRTY_KEY
,WI.SLS_MTN_CORRECTION_CASE_NUM
,WI.SLS_MTN_CORRECTION_CMNT
,WI.SLS_MTN_CORRECTION_REASON_DESC
 FROM $$STGDB.WI_AR_SMC_ATTRIB_MNL_UPLD WI
WHERE NOT EXISTS ( SELECT 1
				FROM $$SLSORDVWDB.MT_AR_NAPLD_SLS_MOTION_ATTRIB MT
				  WHERE WI.AR_TRX_LINE_KEY = MT.AR_TRX_LINE_KEY
		                AND WI.DV_ENTERPRISE_INV_SKU_ID = MT.DV_ENTERPRISE_INV_SKU_ID 
					AND WI.START_TV_DTM = MT.START_TV_DTM)


Post SQL : 



Target2 Name : MT_AR_NAPLD_SLS_MOTION_ATTRIB


Pre SQL : 
UPDATE MT 
  FROM $$SLSORDVWDB.MT_AR_NAPLD_SLS_MOTION_ATTRIB MT,
  ( SELECT AR_TRX_LINE_KEY,DV_ENTERPRISE_INV_SKU_ID, MAX(START_TV_DTM) AS  MAX_STRT_DTM
      FROM $$STGDB.WI_AR_SMC_ATTRIB_MNL_UPLD 
	 GROUP BY 1,2
   ) WI
SET END_TV_DTM = WI.MAX_STRT_DTM - INTERVAL '1' SECOND,
    EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0)
WHERE MT.AR_TRX_LINE_KEY = WI.AR_TRX_LINE_KEY
  AND MT.DV_ENTERPRISE_INV_SKU_ID = WI.DV_ENTERPRISE_INV_SKU_ID 
  AND MT.START_TV_DTM <> WI.MAX_STRT_DTM
  AND MT.END_TV_DTM = '3500-01-01 00:00:00' ;


Post SQL : 
INSERT INTO $$STGDB.ST_SMR_AR_MANUAL_UPLOAD_HIST
SELECT 
ST.AR_TRX_NUMBER          
,ST.SALES_MOTION_CD               
,ST.DV_ALLOCATION_PCT             
,ST.ORDER_LINE_ID                 
,ST.UPLOAD_ID                     
,ST.REASON_CODE                   
,ST.CASE_NUMBER                   
,ST.COMMENTS                      
,ST.BATCH_ID                      
,CURRENT_TIMESTAMP(0) UPLOAD_DTM    
FROM $$STGDB.ST_SMR_AR_MANUAL_UPLOAD ST;

DELETE FROM  $$STGDB.ST_SMR_AR_MANUAL_UPLOAD;

COLLECT STATS ON $$STGDB.ST_SMR_AR_MANUAL_UPLOAD_HIST COLUMN AR_TRX_NUMBER ; 

CALL COLLECT_STATS_WRAP ( '$$SLSORDVWDB','MT_AR_NAPLD_SLS_MOTION_ATTRIB','D' ) ;