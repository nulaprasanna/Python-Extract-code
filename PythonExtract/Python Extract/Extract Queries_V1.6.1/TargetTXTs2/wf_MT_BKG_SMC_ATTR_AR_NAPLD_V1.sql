


Source1 Name : SQ_WI_SLS_MOTION_ATTRIB_AR_NAPLD


Pre SQL : 



SQL Query : 
SELECT
    MT.AR_TRX_LINE_KEY        
  , MT.DV_ENTERPRISE_INV_SKU_ID
  , MT.SALES_MOTION_CD               
  , MT.DV_ALLOCATION_PCT             
  , MT.DV_SERVICE_CATEGORY_CD        
  , MT.DV_OA_FLG                     
  , MT.START_TV_DTM                   
  , MT.END_TV_DTM                     
  , 'AR_N' AS DV_TRX_TYPE
  , MT.DV_SOURCE_TYPE
  ,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM                
  ,USER AS EDW_CREATE_USER               
  ,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM                
  ,USER AS EDW_UPDATE_USER 
 ,MT.SALES_MOTION_TIMING_CD
,MANUAL_OVERRIDE_ROLE           
,REQUESTING_CSCO_WRKR_PRTY_KEY
,SLS_MTN_CORRECTION_CASE_NUM
,SLS_MTN_CORRECTION_CMNT
,SLS_MTN_CORRECTION_REASON_DESC
 FROM $$SLSORDVWDB.MT_AR_NAPLD_SLS_MOTION_ATTRIB  MT
 WHERE MT.EDW_UPDATE_DTM > '$$LastExtractDate'
 AND MT.END_TV_DTM = '3500-01-01 00:00:00'


Post SQL : 



Target1 Name : WI_SLS_MOTION_ATTRIB_AR_NAPLD1


Pre SQL : 
DELETE FROM $$STGDB.WI_SLS_MOTION_ATTRIB_AR_NAPLD ;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_SLS_MOTION_ATTRIB_AR_NAPLD','D');


Source2 Name : SQ_SM_BKG_SLS_MOTION_ATTRIBUTION


Pre SQL : 



SQL Query : 
SELECT
SM_MAX.MAX_SLS_MOTION_ATTRIB_KEY + ROW_NUMBER() OVER (ORDER BY DV_TRANSACTION_ID) AS 
SK_SALES_MOTION_ATTRIB_KEY 
,DV_TRANSACTION_ID          
,DV_TRX_TYPE                                   
,DV_ENTERPRISE_INV_SKU_ID   
,SK_OFFER_ATTRIBUTION_ID_INT
,-7777 AS SALES_ORDER_LINE_KEY
,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM   
,USER AS EDW_CREATE_USER    
FROM
(
SELECT DISTINCT
AR_TRX_LINE_KEY AS DV_TRANSACTION_ID
,'AR_N' AS DV_TRX_TYPE
,DV_ENTERPRISE_INV_SKU_ID
,-9999 AS SK_OFFER_ATTRIBUTION_ID_INT
FROM $$STGDB.WI_SLS_MOTION_ATTRIB_AR_NAPLD
GROUP BY 1,2,3,4
 
)SRC
,(SELECT COALESCE(MAX(SK_SALES_MOTION_ATTRIB_KEY),0) MAX_SLS_MOTION_ATTRIB_KEY 
    FROM $$ETLVWDB.SM_BKG_SLS_MOTION_ATTRIBUTION) SM_MAX                  
WHERE NOT EXISTS( SELECT 1 FROM $$ETLVWDB.SM_BKG_SLS_MOTION_ATTRIBUTION SM
	WHERE SRC.DV_TRANSACTION_ID = SM.DV_TRANSACTION_ID
	  AND SRC.DV_ENTERPRISE_INV_SKU_ID = SM.DV_ENTERPRISE_INV_SKU_ID
	  AND SRC.SK_OFFER_ATTRIBUTION_ID_INT = SM.SK_OFFER_ATTRIBUTION_ID_INT
	  AND SRC.DV_TRX_TYPE = SM.DV_TRX_TYPE)


Post SQL : 



Target2 Name : SM_BKG_SLS_MOTION_ATTRIBUTION1


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$TRANSLATIONDB','SM_BKG_SLS_MOTION_ATTRIBUTION','D');

/* Adding below code as part of SMR Aug 16th release to prevent split issue records loading into MT BKG table */
DELETE FROM $$STGDB.WI_MT_BKG_SPLIT_CHECK WHERE DV_TRX_TYPE = 'AR_N' ;

INSERT INTO $$STGDB.WI_MT_BKG_SPLIT_CHECK
SELECT 
SM.SK_SALES_MOTION_ATTRIB_KEY SK_SALES_MOTION_ATTRIB_KEY,
WI.DV_TRX_TYPE,
SUM(DV_ALLOCATION_PCT) DV_ALLOCATION_PCT_SUM
FROM $$STGDB.WI_SLS_MOTION_ATTRIB_AR_NAPLD WI
INNER JOIN $$ETLVWDB.SM_BKG_SLS_MOTION_ATTRIBUTION SM
   ON WI.AR_TRX_LINE_KEY  = SM.DV_TRANSACTION_ID
   AND WI.DV_ENTERPRISE_INV_SKU_ID = SM.DV_ENTERPRISE_INV_SKU_ID
     AND WI.DV_TRX_TYPE= SM.DV_TRX_TYPE
GROUP BY 1,2 HAVING ROUND(SUM(DV_ALLOCATION_PCT),4) <> 1.0000 ;  

COLLECT STATS ON $$STGDB.WI_MT_BKG_SPLIT_CHECK ;

DELETE FROM $$EXCEPDB.EX_MT_BKG_SLS_MOTION_ATTRIB EX
WHERE EXISTS ( SEL 1 FROM $$STGDB.WI_SLS_MOTION_ATTRIB_AR_NAPLD WI
					WHERE WI.AR_TRX_LINE_KEY = EX.DV_TRANSACTION_ID
				  AND WI.DV_ENTERPRISE_INV_SKU_ID = EX.DV_ENTERPRISE_INV_SKU_ID
				  AND WI.DV_TRX_TYPE= EX.DV_TRX_TYPE) ;

INSERT INTO $$EXCEPDB.EX_MT_BKG_SLS_MOTION_ATTRIB
SELECT 
SM.SK_SALES_MOTION_ATTRIB_KEY    
 ,RANDOM(1010000,1011800)*-1 AS SALES_ORDER_LINE_KEY   
 , WI.AR_TRX_LINE_KEY  AS DV_TRANSACTION_ID             
 , SM.DV_TRX_TYPE                   
 , WI.SALES_MOTION_CD               
 , WI.START_TV_DTM                   
 , WI.END_TV_DTM                     
 , WI.DV_ENTERPRISE_INV_SKU_ID      
 , WI.DV_ALLOCATION_PCT             
 , WI.DV_SERVICE_CATEGORY_CD        
 , WI.DV_OA_FLG  
  ,WI.DV_SOURCE_TYPE AS DV_SOURCE_TYPE  
 ,'UNKNOWN' AS AS_ARCHITECTURE_NAME
 ,'UNKNOWN' AS TECHNOLOGY_GROUP_ID
 ,'UNKNOWN' AS ATTR_PRDT_OFFER_TYPE_NAME
 ,'UNK' AS AS_TS_CODE
 ,-999 AS SK_RENEW_CONTRACT_LINE_ID 
 , -999 AS SK_AS_PARENT_INVENTORY_ITEM_ID
 , -9999 AS SK_OFFER_ATTRIBUTION_ID_INT 
 ,USER AS EDW_UPDATE_USER 
 ,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM
 ,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM   
 ,USER AS EDW_CREATE_USER                
 , RANDOM(1010000,1011800)*-1 AS SALES_ORDER_KEY  
 ,WI.DV_ENTERPRISE_INV_SKU_ID  AS SRC_ENTERPRISE_INV_SKU_ID
 , 'UNKNOWN' AS PRODUCT_CLASS
 , -999 AS TRANSACTION_CR_PARTY_KEY
 , -999 AS HQ_CR_PRTY_KEY
 , 'UNKNOWN' AS RENEWAL_REF_ID
 , 'UNKNOWN' AS RENEWAL_REF_CD
 , SLS_MTN_CORRECTION_REASON_DESC AS SMR_TAGGING_FAILURE_RSN_CD
 , WI.SALES_MOTION_TIMING_CD
,MANUAL_OVERRIDE_ROLE          
 ,REQUESTING_CSCO_WRKR_PRTY_KEY 
 ,SLS_MTN_CORRECTION_CASE_NUM   
 ,SLS_MTN_CORRECTION_CMNT         
FROM
$$STGDB.WI_SLS_MOTION_ATTRIB_AR_NAPLD WI
 INNER JOIN $$ETLVWDB.SM_BKG_SLS_MOTION_ATTRIBUTION SM
   ON WI.AR_TRX_LINE_KEY  = SM.DV_TRANSACTION_ID
   AND WI.DV_ENTERPRISE_INV_SKU_ID = SM.DV_ENTERPRISE_INV_SKU_ID
     AND WI.DV_TRX_TYPE= SM.DV_TRX_TYPE
AND EXISTS ( SEL 1 FROM $$STGDB.WI_MT_BKG_SPLIT_CHECK CHK
				WHERE SM.SK_SALES_MOTION_ATTRIB_KEY = CHK.SK_SALES_MOTION_ATTRIB_KEY
				  AND CHK.DV_TRX_TYPE = 'AR_N' ) ;

COLLECT STATS ON $$EXCEPDB.EX_MT_BKG_SLS_MOTION_ATTRIB ;

DELETE FROM $$STGDB.WI_SLS_MOTION_ATTRIB_AR_NAPLD WI
WHERE EXISTS ( SEL 1 FROM $$EXCEPDB.EX_MT_BKG_SLS_MOTION_ATTRIB EX
				WHERE WI.AR_TRX_LINE_KEY = EX.DV_TRANSACTION_ID
				  AND WI.DV_ENTERPRISE_INV_SKU_ID = EX.DV_ENTERPRISE_INV_SKU_ID
				  AND WI.DV_TRX_TYPE= EX.DV_TRX_TYPE
			  ) ;


Source3 Name : SQ_MT_BKG_SLS_MOTION_ATTRIBUTION


Pre SQL : 



SQL Query : 
SELECT
 SM.SK_SALES_MOTION_ATTRIB_KEY    
 ,RANDOM(1010000,1011800)*-1 AS SALES_ORDER_LINE_KEY   
 , WI.AR_TRX_LINE_KEY  AS DV_TRANSACTION_ID             
 , SM.DV_TRX_TYPE                   
 , WI.SALES_MOTION_CD               
 , WI.START_TV_DTM                   
 , WI.END_TV_DTM                     
 , WI.DV_ENTERPRISE_INV_SKU_ID      
 , WI.DV_ALLOCATION_PCT             
 , WI.DV_SERVICE_CATEGORY_CD        
 , WI.DV_OA_FLG  
  ,WI.DV_SOURCE_TYPE AS DV_SOURCE_TYPE  
 ,'UNKNOWN' AS AS_ARCHITECTURE_NAME
 ,'UNKNOWN' AS TECHNOLOGY_GROUP_ID
 ,'UNKNOWN' AS ATTR_PRDT_OFFER_TYPE_NAME
 ,'UNK' AS AS_TS_CODE
 ,-999 AS SK_RENEW_CONTRACT_LINE_ID 
 , -999 AS SK_AS_PARENT_INVENTORY_ITEM_ID
 , -9999 AS SK_OFFER_ATTRIBUTION_ID_INT 
 ,USER AS EDW_UPDATE_USER 
 ,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM
 ,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM   
 ,USER AS EDW_CREATE_USER                
 , RANDOM(1010000,1011800)*-1 AS SALES_ORDER_KEY  
 ,WI.DV_ENTERPRISE_INV_SKU_ID  AS SRC_ENTERPRISE_INV_SKU_ID
 , 'UNKNOWN' AS PRODUCT_CLASS
 , -999 AS TRANSACTION_CR_PARTY_KEY
 , -999 AS HQ_CR_PRTY_KEY
 , 'UNKNOWN' AS RENEWAL_REF_ID
 , 'UNKNOWN' AS RENEWAL_REF_CD
 , SLS_MTN_CORRECTION_REASON_DESC AS SMR_TAGGING_FAILURE_RSN_CD
 , WI.SALES_MOTION_TIMING_CD
,MANUAL_OVERRIDE_ROLE          
 ,REQUESTING_CSCO_WRKR_PRTY_KEY 
 ,SLS_MTN_CORRECTION_CASE_NUM   
 ,SLS_MTN_CORRECTION_CMNT      
,-999 AS OFFER_ATTRIB_PRDT_KEY
 FROM
 $$STGDB.WI_SLS_MOTION_ATTRIB_AR_NAPLD WI
 INNER JOIN $$ETLVWDB.SM_BKG_SLS_MOTION_ATTRIBUTION SM
   ON WI.AR_TRX_LINE_KEY  = SM.DV_TRANSACTION_ID
   AND WI.DV_ENTERPRISE_INV_SKU_ID = SM.DV_ENTERPRISE_INV_SKU_ID
     AND WI.DV_TRX_TYPE= SM.DV_TRX_TYPE
 WHERE NOT EXISTS ( SELECT 1 FROM 
                 $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
                 WHERE MT.DV_TRANSACTION_ID = WI.AR_TRX_LINE_KEY 
                  AND MT.DV_ENTERPRISE_INV_SKU_ID = WI.DV_ENTERPRISE_INV_SKU_ID
                  AND MT.START_TV_DTM = WI.START_TV_DTM
                 AND MT.DV_TRX_TYPE = 'AR_N' 
                 )


Post SQL : 



Target3 Name : MT_BKG_SLS_MOTION_ATTRIBUTION1


Pre SQL : 
UPDATE MT_BKG
 FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT_BKG,
      ( SELECT AR_TRX_LINE_KEY, DV_ENTERPRISE_INV_SKU_ID
	    , MAX(START_TV_DTM) AS START_TV_DTM
         FROM $$STGDB.WI_SLS_MOTION_ATTRIB_AR_NAPLD WI
        GROUP BY 1,2
       ) WI        
 SET 
	 END_TV_DTM = WI.START_TV_DTM - INTERVAL '1' SECOND,
     EDW_UPDATE_USER = USER,
     EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0)
 WHERE WI.AR_TRX_LINE_KEY = MT_BKG.DV_TRANSACTION_ID
   AND WI.DV_ENTERPRISE_INV_SKU_ID = MT_BKG.DV_ENTERPRISE_INV_SKU_ID 
   AND MT_BKG.DV_TRX_TYPE = 'AR_N' 
   AND WI.START_TV_DTM <> MT_BKG.START_TV_DTM
   AND MT_BKG.END_TV_DTM = '3500-01-01 00:00:00'


Post SQL : 
CALL COLLECT_STATS_WRAP('$$SLSORDDB','MT_BKG_SLS_MOTION_ATTRIBUTION','D');