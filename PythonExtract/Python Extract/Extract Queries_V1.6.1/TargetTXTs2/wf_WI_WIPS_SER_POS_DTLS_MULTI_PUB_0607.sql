


Source1 Name : SQ_EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL


Pre SQL : 



SQL Query : 
SELECT 
TRANS_ID                      
,ID                            
,BOOKING_FLAG                  
,SERVICE_TYPE                  
,ACTIVE_FLAG                   
,MAX(CREATED_DATE) OVER (PARTITION BY TRANS_ID) AS CREATED_DATE                  
,CREATED_BY                    
,LAST_UPDATED_DATE             
,LAST_UPDATED_BY               
,ACTION_CODE                   
,DERIVED_QUOTE_NUMBER          
,DERIVED_CONTRACT_NUMBER       
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,MATCH_TYPE                    
,ORDER_HEADER_ID               
,QUOTE_HEADER_ID               
,REVENUE_SOURCE_CODE           
,CONFIDENCE_FLAG               
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG     
,SALES_ORDER_LINE_KEY          
,SALES_MOTION_CD                         
,DV_ALLOCATION_PCT  
,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM                
,USER AS EDW_CREATE_USER               
,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM                
,USER AS EDW_UPDATE_USER  
,CURRENT_TIMESTAMP(0) AS START_TV_DTM
,'3500-01-01 00:00:00' AS END_TV_DTM 
,MULTIPLE_MATCH_FLG
,APPROVED_ERP_LINKAGE_FLG
,SALES_MOTION_TIMING_CD              
,ORDER_IDENTIFIER
,SS_CODE
,NET_PRICE_FLG
FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_SMC  STG
WHERE NOT EXISTS (SELECT 1 FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL WHERE STG.TRANS_ID=EL.TRANS_ID 
and EL.END_TV_DTM='3500-01-01 00:00:00')


Post SQL : 



Target1 Name : EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL


Pre SQL : 
UPDATE EL 
 FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL ,
  (SELECT TRANS_ID FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_SMC GROUP BY TRANS_ID)SRC
 SET   
END_TV_DTM=CURRENT_TIMESTAMP(0) - INTERVAL '1' SECOND,
EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0)
WHERE EL.TRANS_ID = SRC.TRANS_ID  
AND EL.END_TV_DTM = CAST('3500-01-01' AS DATE);


Post SQL : 
CALL COLLECT_STATS_WRAP('$$ETLONLYDB','EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL;','D');


Source2 Name : SQ_WI_OPL_DSV_POS_RTR_INCR_DATA


Pre SQL : 
DELETE FROM $$STGDB.WI_OPL_DSV_POS_RTR_INCR_DATA;


SQL Query : 
SELECT 
-999 AS POS_TRX_LN_AS_NEW_OR_RNWL_KEY,
BK_POS_TRANSACTION_ID_INT,   
SK_UNIQUE_ID_INT,  
TRANSACTION_ID_INT,    
DSV_BOOKINGS_FLG,  
ACTIVE_FLG,
SRC_CREATED_DTM, 
DV_SRC_CREATED_DT, 
SRC_CREATED_PROCESS_NAME,
SRC_UPDATED_DTM, 
DV_SRC_UPDATED_DT,
SRC_UPDATED_PROCESS_NAME,  
DERIVED_QUOTE_NUMBER,  
DERIVED_CONTRACT_NUMBER, 
SERVICE_QUOTE_LINE_KEY , 
SALES_ORDER_LINE_KEY ,
MATCHING_MTHD_FOR_TAGGING_NAME,
SRC_RPTD_ERP_SO_HEADER_ID,
SRC_RPTD_ERP_QUOTE_HEADER_ID,
SRC_RPTD_REVENUE_SRC_CD,
SALES_MOTION_CD,
CONFIDENCE_FLG,
(POS.SMC_PCT)/(POS.TOTAL_PCT) AS SPLIT_PCT,
START_TV_DTM,
PO_EXISTS_FLG,
PO_DISTRI_EXISTS_FLG,
PO_PRDT_EXISTS_FLG,
QUOTE_EXISTS_FLG,
QUOTE_DISTRI_EXISTS_FLG,
QUOTE_PRDT_EXISTS_FLG,
MULTIPLE_SALES_MOTION_FLG,
MULTIPLE_MATCH_FLG, -- CHECK 
APPROVED_ERP_LINKAGE_FLG, --CHECK 
SALES_MOTION_TIMING_CD, -- CHECK 
MANUAL_OVERRIDE_ROLE, 
REQUESTING_CSCO_WRKR_PRTY_KEY,
SLS_MTN_CORRECTION_CASE_NUM,
SLS_MTN_CORRECTION_CMNT,
SLS_MTN_CORRECTION_REASON_DESC,
BK_ORIG_POS_TRX_ID_INT,
ORIG_POS_TRX_LN_AS_NW_RNWL_KEY,
SK_OFFER_ATTRIBUTION_ID_INT ,
SOFTWARE_FLG
 FROM (
SELECT 
BK_POS_TRANSACTION_ID_INT,   
SK_UNIQUE_ID_INT,  
TRANSACTION_ID_INT,    
DSV_BOOKINGS_FLG,  
ACTIVE_FLG,
SRC_CREATED_DTM, 
DV_SRC_CREATED_DT, 
SRC_CREATED_PROCESS_NAME,
SRC_UPDATED_DTM, 
DV_SRC_UPDATED_DT,
SRC_UPDATED_PROCESS_NAME,  
DERIVED_QUOTE_NUMBER,  
DERIVED_CONTRACT_NUMBER, 
SERVICE_QUOTE_LINE_KEY,  
SALES_ORDER_LINE_KEY ,
MATCHING_MTHD_FOR_TAGGING_NAME,
SRC_RPTD_ERP_SO_HEADER_ID,
SRC_RPTD_ERP_QUOTE_HEADER_ID,
SRC_RPTD_REVENUE_SRC_CD,
SALES_MOTION_CD,
CONFIDENCE_FLG,
SMC_PCT,
CASE WHEN TOTAL_PCT = 0 THEN 1 ELSE TOTAL_PCT END AS TOTAL_PCT,
START_TV_DTM,
PO_EXISTS_FLG,
PO_DISTRI_EXISTS_FLG,
PO_PRDT_EXISTS_FLG,
QUOTE_EXISTS_FLG,
QUOTE_DISTRI_EXISTS_FLG,
QUOTE_PRDT_EXISTS_FLG,
MULTIPLE_SALES_MOTION_FLG,
MULTIPLE_MATCH_FLG, -- CHECK 
APPROVED_ERP_LINKAGE_FLG, --CHECK 
SALES_MOTION_TIMING_CD, -- CHECK 
MANUAL_OVERRIDE_ROLE, 
REQUESTING_CSCO_WRKR_PRTY_KEY,
SLS_MTN_CORRECTION_CASE_NUM,
SLS_MTN_CORRECTION_CMNT,
SLS_MTN_CORRECTION_REASON_DESC,
BK_ORIG_POS_TRX_ID_INT,
ORIG_POS_TRX_LN_AS_NW_RNWL_KEY,
SK_OFFER_ATTRIBUTION_ID_INT ,
SOFTWARE_FLG     
FROM (
SELECT
NATTR.POS_TRANSACTION_ID_INT AS BK_POS_TRANSACTION_ID_INT,   
-8888 AS SK_UNIQUE_ID_INT,  
NATTR.POS_TRANSACTION_ID_INT AS TRANSACTION_ID_INT,    
'Y' AS DSV_BOOKINGS_FLG,  
'Y' AS ACTIVE_FLG,
NATTR.EDW_CREATE_DTM AS SRC_CREATED_DTM, 
CAST(NATTR.EDW_CREATE_DTM AS DATE) DV_SRC_CREATED_DT, 
'UNKNOWN' AS SRC_CREATED_PROCESS_NAME,
NATTR.EDW_UPDATE_DTM AS SRC_UPDATED_DTM, 
CAST(NATTR.EDW_UPDATE_DTM AS DATE) DV_SRC_UPDATED_DT,
'UNKNOWN' AS SRC_UPDATED_PROCESS_NAME,  
'UNKNOWN' AS DERIVED_QUOTE_NUMBER,  
'UNKNOWN' AS DERIVED_CONTRACT_NUMBER, 
-999 AS SERVICE_QUOTE_LINE_KEY , 
MAX(NATTR.SALES_ORDER_LINE_KEY) OVER (PARTITION BY NATTR.POS_TRANSACTION_ID_INT) AS SALES_ORDER_LINE_KEY ,
'DSV-DISTI NET PRICE'AS MATCHING_MTHD_FOR_TAGGING_NAME,
-9999 AS SRC_RPTD_ERP_SO_HEADER_ID,
-9999 AS SRC_RPTD_ERP_QUOTE_HEADER_ID,
'=' AS SRC_RPTD_REVENUE_SRC_CD,
NATTR.SALES_MOTION_CD AS SALES_MOTION_CD,
'Y' AS CONFIDENCE_FLG,
--NATTR.DV_ALLOCATION_PCT AS SPLIT_PCT,
CAST(SUM(ATTR_PCT) OVER(PARTITION BY NATTR.POS_TRANSACTION_ID_INT, NATTR.SALES_ORDER_LINE_KEY, NATTR.SALES_MOTION_CD, NATTR.SK_ATTRIBUTION_ID_INT ) AS DECIMAL(18,6)) AS SMC_PCT,
CAST(SUM(ATTR_PCT) OVER(PARTITION BY NATTR.POS_TRANSACTION_ID_INT, NATTR.SALES_ORDER_LINE_KEY, NATTR.SK_ATTRIBUTION_ID_INT ) AS DECIMAL(18,6)) AS TOTAL_PCT,
CURRENT_TIMESTAMP(0) AS START_TV_DTM,
NULL AS PO_EXISTS_FLG,
NULL AS PO_DISTRI_EXISTS_FLG,
NULL AS PO_PRDT_EXISTS_FLG,
NULL AS QUOTE_EXISTS_FLG,
NULL AS QUOTE_DISTRI_EXISTS_FLG,
NULL AS QUOTE_PRDT_EXISTS_FLG,
NULL AS MULTIPLE_SALES_MOTION_FLG,
'N'AS MULTIPLE_MATCH_FLG, -- CHECK 
'Y'AS APPROVED_ERP_LINKAGE_FLG, --CHECK 
'UNKNOWN' AS SALES_MOTION_TIMING_CD, -- CHECK 
NATTR.MANUAL_OVERRIDE_ROLE, 
NATTR.REQUESTING_CSCO_WRKR_PRTY_KEY,
NATTR.SLS_MTN_CORRECTION_CASE_NUM,
NATTR.SLS_MTN_CORRECTION_CMNT,
NATTR.SLS_MTN_CORRECTION_CMNT AS SLS_MTN_CORRECTION_REASON_DESC,
-999 AS BK_ORIG_POS_TRX_ID_INT,
-999 AS ORIG_POS_TRX_LN_AS_NW_RNWL_KEY,
NATTR.SK_ATTRIBUTION_ID_INT AS SK_OFFER_ATTRIBUTION_ID_INT ,
CASE WHEN NP.ITEM_KEY IS NOT NULL THEN 'Y' ELSE 'N' END AS SOFTWARE_FLG       
FROM $$SLSORDVWDB.N_ATTR_PRDT_NEW_RNWL_ACV_TV NATTR

INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS
ON NATTR.POS_TRANSACTION_ID_INT = BKG_POS.BK_POS_TRANSACTION_ID_INT

LEFT JOIN $$COMREFVWDB.N_PRODUCT NP
ON NP.ITEM_KEY = BKG_POS.PRODUCT_KEY 
AND NP.MONETIZATION_TYPE_CD IN ('TERM')
AND NP.PRDT_SETUP_CLASSIFICATION_CD IN ('SOFTWARE')

WHERE NATTR.POS_TRANSACTION_ID_INT IN (SELECT POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_ATTR_PRDT_NEW_RNWL_ACV_TV 
										WHERE POS_TRANSACTION_ID_INT > 0
                                                                AND ORDER_ORIGIN_CD = 'DISTI-DSV'
                                                                AND END_TV_DTM = '3500-01-01 00:00:00'
										AND EDW_UPDATE_DTM > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES  
										WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB' 
                                                                AND TABLE_NAME = 'WI_OPL_DSV_POS_RTR_INCR_DATA')  )
 AND NATTR.END_TV_DTM = '3500-01-01 00:00:00'
AND ORDER_ORIGIN_CD = 'DISTI-DSV'
 AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG_POS WHERE BKG_POS.BK_POS_TRANSACTION_ID_INT = NATTR.POS_TRANSACTION_ID_INT
							AND BKG_POS .RU_BK_ORIG_POS_TRANSACTION_ID > 0)
) ATTR
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43
)POS


Post SQL : 



Target2 Name : WI_OPL_DSV_POS_RTR_INCR_DATA_OPL


Pre SQL : 



Post SQL : 
/*INSERT INTO $$STGDB.WI_OPL_DSV_POS_RTR_INCR_DATA
SELECT 
 EX.POS_TRX_LN_AS_NEW_OR_RNWL_KEY 
,EX.BK_POS_TRANSACTION_ID_INT     
,EX.SK_UNIQUE_ID_INT              
,EX.TRANSACTION_ID_INT            
,EX.DSV_BOOKINGS_FLG              
,EX.ACTIVE_FLG                    
,EX.SRC_CREATED_DTM               
,EX.DV_SRC_CREATED_DT             
,EX.SRC_CREATED_PROCESS_NAME      
,EX.SRC_UPDATED_DTM               
,EX.DV_SRC_UPDATED_DT             
,EX.SRC_UPDATED_PROCESS_NAME      
,EX.SRC_RPTD_QUOTE_NUM            
,EX.SRC_RPTD_CONTRACT_NUM         
,EX.SERVICE_QUOTE_LINE_KEY        
,EX.SALES_ORDER_LINE_KEY          
,EX.MATCHING_MTHD_FOR_TAGGING_NAME
,EX.SRC_RPTD_ERP_SO_HEADER_ID     
,EX.SRC_RPTD_ERP_QUOTE_HEADER_ID  
,EX.SRC_RPTD_REVENUE_SRC_CD       
,EX.SALES_MOTION_CD               
,EX.CONFIDENCE_FLG                
,EX.SPLIT_PCT                     
,EX.START_TV_DTM                  
,EX.PO_EXISTS_FLG                 
,EX.PO_DISTRI_EXISTS_FLG          
,EX.PO_PRDT_EXISTS_FLG            
,EX.QUOTE_EXISTS_FLG              
,EX.QUOTE_DISTRI_EXISTS_FLG       
,EX.QUOTE_PRDT_EXISTS_FLG         
,EX.MULTIPLE_SALES_MOTION_FLG     
,EX.MULTIPLE_MATCH_FLG            
,EX.APPROVED_ERP_LINKAGE_FLG      
,EX.SALES_MOTION_TIMING_CD        
,EX.MANUAL_OVERRIDE_ROLE          
,EX.REQUESTING_CSCO_WRKR_PRTY_KEY 
,EX.SLS_MTN_CORRECTION_CASE_NUM   
,EX.SLS_MTN_CORRECTION_CMNT       
,EX.SLS_MTN_CORRECTION_REASON_DESC
,EX.BK_ORIG_POS_TRX_ID_INT        
,EX.ORIG_POS_TRX_LN_AS_NW_RNWL_KEY
,EX.SK_OFFER_ATTRIBUTION_ID_INT   
,EX.SOFTWARE_FLG  
FROM $$EXCEPDB.EX_OPL_DSV_POS_RTR_INCR_DATA EX
WHERE NOT EXISTS (SELECT 1 FROM $$STGDB.WI_OPL_DSV_POS_RTR_INCR_DATA WI WHERE WI.BK_POS_TRANSACTION_ID_INT = EX.BK_POS_TRANSACTION_ID_INT);

DELETE FROM $$EXCEPDB.EX_OPL_DSV_POS_RTR_INCR_DATA;

UPDATE EL
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL,
( SELECT BK_POS_TRANSACTION_ID_INT FROM $$STGDB.WI_OPL_DSV_POS_RTR_INCR_DATA WHERE SALES_MOTION_CD  = 'UNKNOWN' GROUP BY 1
UNION 
SELECT TRANS_ID FROM $$STGDB.WI_POS_TRX_LN_RET_LN WHERE RU_BK_ORIG_POS_TRANSACTION_ID  IN (
SELECT BK_POS_TRANSACTION_ID_INT FROM $$STGDB.WI_OPL_DSV_POS_RTR_INCR_DATA ) GROUP BY 1
) OPL
SET EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0)
,LAST_UPDATED_DATE = CURRENT_TIMESTAMP(0)
WHERE EL.TRANS_ID = OPL.BK_POS_TRANSACTION_ID_INT
AND END_TV_DTM = '3500-01-01 00:00:00'; */

COLLECT STATS ON $$STGDB.WI_OPL_DSV_POS_RTR_INCR_DATA;


Source3 Name : SQ_WI_WIPS_SER_POS_DTLS_MULTI_PUB3


Pre SQL : 



SQL Query : 
SELECT 
 WI.BK_POS_TRANSACTION_ID     
,NPOS.SK_UNIQUE_ID_INT              
,NPOS.TRANSACTION_ID_INT            
,NPOS.DSV_BOOKINGS_FLG              
,NPOS.ACTIVE_FLG                    
,NPOS.SRC_CREATED_DTM               
,NPOS.DV_SRC_CREATED_DT             
,NPOS.SRC_CREATED_PROCESS_NAME      
,CURRENT_TIMESTAMP(0) AS SRC_UPDATED_DTM               
,CURRENT_DATE AS DV_SRC_UPDATED_DT             
,NPOS.SRC_UPDATED_PROCESS_NAME      
, 'UNKNOWN' AS DERIVED_QUOTE_NUMBER
/* ,NPOS.SRC_RPTD_QUOTE_NUM          */
/* ,COALESCE(NSQ.SK_QUOTE_LINE_ID_INT, -999) AS DERIVED_QUOTE_LINE_ID         */
,-999 AS DERIVED_QUOTE_LINE_ID
,NSOL.SK_SO_LINE_ID_INT         
,WI.SALES_ORDER_LINE_KEY          
,NPOS.MATCHING_MTHD_FOR_TAGGING_NAME
,NPOS.SRC_RPTD_REVENUE_SRC_CD       
,UPPER(WI.SALES_MOTION)               
,NPOS.CONFIDENCE_FLG                
,WI.ALLOCATION_PERCENTAGE AS DV_ALLOCATION_PCT             
,CURRENT_TIMESTAMP(0) AS START_TV_DTM                    
,NPOS.PO_EXISTS_FLG                 
,NPOS.PO_DISTRI_EXISTS_FLG          
,NPOS.PO_PRDT_EXISTS_FLG            
,NPOS.QUOTE_EXISTS_FLG              
,NPOS.QUOTE_DISTRI_EXISTS_FLG       
,NPOS.QUOTE_PRDT_EXISTS_FLG         
,NPOS.MULTIPLE_SALES_MOTION_FLG     
,NPOS.LINKED_TO_MULTIPLE_SOL_FLG AS MULTIPLE_MATCH_FLG            
,NPOS.SOFTWARE_OR_SERVICE_FLG AS APPROVED_ERP_LINKAGE_FLG      
,NPOS.SALES_MOTION_TIMING_CD  
,'Y' AS MANUAL_OVERRIDE_ROLE
,COALESCE(WI.REQUESTING_CSCO_WRKR_PRTY_KEY , -999) AS REQUESTING_CSCO_WRKR_PRTY_KEY 
,COALESCE(WI.CASE_NUMBER, 'UNKNOWN' ) AS SLS_MTN_CORRECTION_CASE_NUM
,COALESCE(WI.COMMENTS , 'UNKNOWN') AS SLS_MTN_CORRECTION_CMNT
,COALESCE(WI.REASON_CODE , 'UNKNOWN') AS SLS_MTN_CORRECTION_REASON_DESC
FROM $$STGDB.WI_SMR_POS_MANUAL_UPLOAD WI
INNER JOIN 
(SELECT 
BK_POS_TRANSACTION_ID_INT     
,SK_UNIQUE_ID_INT              
,TRANSACTION_ID_INT            
,DSV_BOOKINGS_FLG              
,ACTIVE_FLG                    
,SRC_CREATED_DTM               
,DV_SRC_CREATED_DT             
,SRC_CREATED_PROCESS_NAME      
,SRC_UPDATED_DTM               
,DV_SRC_UPDATED_DT             
,SRC_UPDATED_PROCESS_NAME               
,SRC_RPTD_QUOTE_NUM            
--,SRC_RPTD_CONTRACT_NUM         
,SERVICE_QUOTE_LINE_KEY        
,SALES_ORDER_LINE_KEY          
,MATCHING_MTHD_FOR_TAGGING_NAME
,SRC_RPTD_ERP_SO_HEADER_ID     
,SRC_RPTD_ERP_QUOTE_HEADER_ID  
,SRC_RPTD_REVENUE_SRC_CD       
,CONFIDENCE_FLG                
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG     
,LINKED_TO_MULTIPLE_SOL_FLG    
,SOFTWARE_OR_SERVICE_FLG       
,SALES_MOTION_TIMING_CD 
FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV
WHERE END_TV_DTM = '3500-01-01 00:00:00'
QUALIFY ROW_NUMBER() OVER (PARTITION BY BK_POS_TRANSACTION_ID_INT ORDER BY BK_POS_TRANSACTION_ID_INT )  = 1) NPOS
ON WI.BK_POS_TRANSACTION_ID = NPOS.BK_POS_TRANSACTION_ID_INT
/*
LEFT JOIN $$SERVICEVWDB.N_SERVICE_QUOTE_LINE NSQ
ON NSQ.SERVICE_QUOTE_LINE_KEY =  NPOS.SERVICE_QUOTE_LINE_KEY
AND NPOS.SRC_RPTD_QUOTE_NUM = NSQ.BK_QUOTE_NUM */

LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
ON WI.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
AND CAST(NSOL.END_TV_DATETIME AS DATE) =  CAST( '3500-01-01' AS DATE) 
AND NSOL.SS_CODE = 'CG'


Post SQL : 



Target3 Name : WI_WIPS_SER_POS_DTLS_MULTI_PUB6


Pre SQL : 
DELETE FROM $$STGDB.WI_WIPS_SER_POS_DTLS_MULTI_PUB;


Post SQL : 



Source4 Name : SQ_EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL3


Pre SQL : 



SQL Query : 
SELECT TRANS_ID , RU_BK_ORIG_POS_TRANSACTION_ID FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL NPR
INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG
ON NPR.TRANS_ID=BKG.BK_POS_TRANSACTION_ID_INT
AND BKG.RU_BK_ORIG_POS_TRANSACTION_ID > 0
AND NPR.END_TV_DTM = '3500-01-01 00:00:00'
AND NPR.SS_CODE = 'CG'

AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL NPOS WHERE NPOS.BK_POS_TRANSACTION_ID_INT = NPR.TRANS_ID AND MANUAL_OVERRIDE_ROLE = 'Y')
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_SMR_POS_MANUAL_UPLOAD MUPL WHERE MUPL.BK_POS_TRANSACTION_ID = NPR.TRANS_ID) 
	
UNION 

SELECT TRANS_ID , RU_BK_RET_POS_TRANSACTION_ID FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL NPR
INNER JOIN $$SLSORDVWDB.N_POS_TRANSACTION_LINE POS
ON NPR.TRANS_ID=POS.BK_POS_TRANSACTION_ID_INT 
AND POS.RU_BK_RET_POS_TRANSACTION_ID  > 0
AND NPR.END_TV_DTM = '3500-01-01 00:00:00' 
AND NPR.SS_CODE = 'CG'

AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL NPOS WHERE NPOS.BK_POS_TRANSACTION_ID_INT = NPR.TRANS_ID AND MANUAL_OVERRIDE_ROLE = 'Y')
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_SMR_POS_MANUAL_UPLOAD MUPL WHERE MUPL.BK_POS_TRANSACTION_ID = NPR.TRANS_ID)


Post SQL : 



Target4 Name : WI_POS_TRX_LN_RET_LN1


Pre SQL : 
DELETE FROM $$STGDB.WI_POS_TRX_LN_RET_LN;


Post SQL : 



Source5 Name : SQ_EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL1


Pre SQL : 



SQL Query : 
SELECT NPR.TRANS_ID,NPR.SALES_ORDER_LINE_KEY, NPR.SALES_MOTION_CD, NPR.DV_ALLOCATION_PCT FROM  (

SELECT TRANS_ID,SALES_ORDER_LINE_KEY,'NEW' AS SALES_MOTION_CD,  1.000000 DV_ALLOCATION_PCT FROM ( 
 SELECT 
 STG.TRANS_ID, 
 CASE WHEN MIN_SOL.TRANS_ID IS NOT NULL THEN MIN_SOL_KEY
 WHEN COUNT(STG.SALES_MOTION_CD) OVER (PARTITION BY STG.TRANS_ID)  >1 AND STG.CNT_SALES_ORDER_LINE_KEY  >1 THEN -7777 
 ELSE STG.SALES_ORDER_LINE_KEY END SALES_ORDER_LINE_KEY,
 STG.SALES_MOTION_CD,
 DV_ALLOCATION_PCT
 FROM (SELECT SMC.TRANS_ID,
 SMC.SALES_ORDER_LINE_KEY
 ,SMC.SALES_MOTION_CD
 ,ICNT.CNT_SALES_ORDER_LINE_KEY
 ,SUM(SMC.DV_ALLOCATION_PCT) OVER (PARTITION BY SMC.TRANS_ID) AS DV_ALLOCATION_PCT
 FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL SMC
 INNER JOIN 
 (SELECT  TRANS_ID,COUNT(DISTINCT SALES_ORDER_LINE_KEY)  AS CNT_SALES_ORDER_LINE_KEY FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  
	WHERE END_TV_DTM='3500-01-01 00:00:00' AND SS_CODE = 'CG'
 GROUP BY TRANS_ID) ICNT 
 ON SMC.TRANS_ID=ICNT.TRANS_ID 
 
AND SMC.SS_CODE = 'CG'
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_POS_TRX_LN_RET_LN RETLN WHERE RETLN.TRANS_ID = SMC.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL NPOS WHERE NPOS.BK_POS_TRANSACTION_ID_INT = SMC.TRANS_ID AND MANUAL_OVERRIDE_ROLE = 'Y')
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_SMR_POS_MANUAL_UPLOAD MUPL WHERE MUPL.BK_POS_TRANSACTION_ID = SMC.TRANS_ID) 
 
 WHERE SMC.END_TV_DTM='3500-01-01 00:00:00' 
  )STG
 LEFT JOIN
 (SELECT  TRANS_ID,MIN(SALES_ORDER_LINE_KEY)  AS MIN_SOL_KEY FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  WHERE END_TV_DTM='3500-01-01 00:00:00'
 AND SS_CODE = 'CG' AND TRANS_ID IN ( SEL TRANS_ID FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  WHERE END_TV_DTM='3500-01-01 00:00:00' AND SS_CODE = 'CG' GROUP BY TRANS_ID HAVING COUNT(DISTINCT SALES_MOTION_CD) = 1 )  
 GROUP BY TRANS_ID) MIN_SOL
 ON  STG.TRANS_ID=MIN_SOL.TRANS_ID
 --WHERE DV_ALLOCATION_PCT<>0
 ) WI GROUP BY  TRANS_ID,SALES_ORDER_LINE_KEY,SALES_MOTION_CD,DV_ALLOCATION_PCT
 		) NPR
 LEFT JOIN  $$SLSORDVWDB.N_POS_TRANSACTION_LINE POS
ON NPR.TRANS_ID=POS.BK_POS_TRANSACTION_ID_INT

LEFT JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE BKG
ON NPR.TRANS_ID=BKG.BK_POS_TRANSACTION_ID_INT

INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY
ON FDY.CALENDAR_DATE=COALESCE(POS.POS_TRX_LINE_POSTED_DATE,BKG.POS_TRX_LINE_POSTED_DATE)

INNER JOIN $$COMREFVWDB.R_PRODUCTS RP
ON RP.ITEM_KEY= COALESCE(POS.PRODUCT_KEY, BKG.PRODUCT_KEY)

INNER JOIN $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH
ON SFH.ITEM_KEY=RP.ITEM_KEY
/* AND SFH.BK_ALLOCATED_SERVC_GROUP_ID IN ('AS FIXED','AS TRANSACTION', 'TRAINING') */

WHERE SFH.BK_ALLOCATED_SERVC_GROUP_ID IN ('AS FIXED','AS TRANSACTION', 'TRAINING')

GROUP BY 1,2,3,4


Post SQL : 



Target5 Name : WI_POS_TRX_LN_ASFASTTR_ENRICH1


Pre SQL : 
DELETE FROM $$STGDB.WI_POS_TRX_LN_ASFASTTR_ENRICH;


Post SQL : 



Source6 Name : SQ_WI_BKG_POS_SFP_TRX


Pre SQL : 



SQL Query : 
SELECT TRANS_ID
,-7777 AS SALES_ORDER_LINE_KEY
,SALES_MOTION_CD
, 1.000000 AS DV_ALLOCATION_PCT
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL SMC
WHERE 
END_TV_DTM = '3500-01-01 00:00:00'
AND NET_PRICE_FLG = 'Y'
AND SS_CODE = 'CG'

AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_POS_TRX_LN_RET_LN RETLN WHERE RETLN.TRANS_ID = SMC.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL NPOS WHERE NPOS.BK_POS_TRANSACTION_ID_INT = SMC.TRANS_ID AND MANUAL_OVERRIDE_ROLE = 'Y')
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_SMR_POS_MANUAL_UPLOAD MUPL WHERE MUPL.BK_POS_TRANSACTION_ID = SMC.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_POS_TRX_LN_ASFASTTR_ENRICH ASFAST WHERE ASFAST.TRANS_ID = SMC.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_ATTR_PRDT_NEW_RNWL_ACV_TV NAPNRCT WHERE NAPNRCT.POS_TRANSACTION_ID_INT=SMC.TRANS_ID
AND NAPNRCT.END_TV_DTM='3500-01-01 00:00:00' AND NAPNRCT.ORDER_ORIGIN_CD='DISTI-DSV'
)
GROUP BY 1,2,3


Post SQL : 



Target6 Name : WI_BKG_POS_SFP_TRX_TGT


Pre SQL : 
DELETE FROM $$STGDB.WI_BKG_POS_SFP_TRX;


Post SQL : 
COLLECT STATS ON $$STGDB.WI_BKG_POS_SFP_TRX COLUMN TRANS_ID;


Source7 Name : SQ_EL_POS_TRAN_SOL_DEF_ALLC


Pre SQL : 



SQL Query : 
SELECT TRANS_ID,SALES_ORDER_LINE_KEY,SALES_MOTION_CD,DV_ALLOCATION_PCT FROM ( 
SELECT 
STG.TRANS_ID, 
CASE WHEN MIN_SOL.TRANS_ID IS NOT NULL THEN MIN_SOL_KEY
WHEN COUNT(STG.SALES_MOTION_CD) OVER (PARTITION BY STG.TRANS_ID)  >1 AND STG.CNT_SALES_ORDER_LINE_KEY  >1 THEN -7777 
ELSE STG.SALES_ORDER_LINE_KEY END SALES_ORDER_LINE_KEY,
STG.SALES_MOTION_CD,
DV_ALLOCATION_PCT
FROM (SELECT SMC.TRANS_ID,
SMC.SALES_ORDER_LINE_KEY
,SMC.SALES_MOTION_CD
,ICNT.CNT_SALES_ORDER_LINE_KEY
,SUM(SMC.DV_ALLOCATION_PCT) OVER (PARTITION BY SMC.TRANS_ID,SMC.SALES_MOTION_CD) AS DV_ALLOCATION_PCT
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL SMC
INNER JOIN 
(SELECT  TRANS_ID,COUNT(DISTINCT SALES_ORDER_LINE_KEY)  AS CNT_SALES_ORDER_LINE_KEY FROM 
$$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  WHERE END_TV_DTM='3500-01-01 00:00:00' AND SS_CODE = 'CG'
GROUP BY TRANS_ID) ICNT 
ON SMC.TRANS_ID=ICNT.TRANS_ID 
AND SMC.SS_CODE = 'CG'

AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_POS_TRX_LN_ASFASTTR_ENRICH ASFAST WHERE ASFAST.TRANS_ID = SMC.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_POS_TRX_LN_RET_LN RETLN WHERE RETLN.TRANS_ID = SMC.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL NPOS WHERE NPOS.BK_POS_TRANSACTION_ID_INT = SMC.TRANS_ID 
AND MANUAL_OVERRIDE_ROLE = 'Y')
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_SMR_POS_MANUAL_UPLOAD MUPL WHERE MUPL.BK_POS_TRANSACTION_ID = SMC.TRANS_ID) 
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_BKG_POS_SFP_TRX SFP WHERE SFP.TRANS_ID = SMC.TRANS_ID AND SFP.SALES_MOTION_CD<>'UNKNOWN'  )
AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_ATTR_PRDT_NEW_RNWL_ACV_TV NAPNRCT WHERE NAPNRCT.POS_TRANSACTION_ID_INT=SMC.TRANS_ID
AND NAPNRCT.END_TV_DTM='3500-01-01 00:00:00' AND NAPNRCT.ORDER_ORIGIN_CD='DISTI-DSV'
  )  

WHERE SMC.END_TV_DTM='3500-01-01 00:00:00' )STG
LEFT JOIN
(SELECT  TRANS_ID,MIN(SALES_ORDER_LINE_KEY)  AS MIN_SOL_KEY FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  WHERE END_TV_DTM='3500-01-01 00:00:00' AND SS_CODE = 'CG'
AND TRANS_ID IN ( SEL TRANS_ID FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  WHERE END_TV_DTM='3500-01-01 00:00:00' AND SS_CODE = 'CG' GROUP BY TRANS_ID HAVING COUNT(DISTINCT SALES_MOTION_CD) = 1 )  
GROUP BY TRANS_ID) MIN_SOL
ON  STG.TRANS_ID=MIN_SOL.TRANS_ID
WHERE DV_ALLOCATION_PCT<>0
) WI GROUP BY  TRANS_ID,SALES_ORDER_LINE_KEY,SALES_MOTION_CD,DV_ALLOCATION_PCT


Post SQL : 



Target7 Name : EL_POS_TRAN_SOL_DEF_ALLC1


Pre SQL : 
DELETE FROM $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC;


Post SQL : 
INSERT INTO $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC
SELECT 
BK_POS_TRANSACTION_ID_INT,-7777 AS SALES_ORDER_LINE_KEY,
'UNKNOWN' AS SALES_MOTION_CD,1.000000 AS DV_ALLOCATION_PCT
FROM 
$$STGDB.WI_OPL_DSV_POS_RTR_INCR_DATA
WHERE SALES_MOTION_CD='UNKNOWN'
AND NOT EXISTS (SELECT 1 FROM $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC
WHERE 
BK_POS_TRANSACTION_ID_INT=TRANS_ID);

CALL COLLECT_STATS_WRAP('$$ETLVWDB','EL_POS_TRAN_SOL_DEF_ALLC;','D');


Source8 Name : SQ_EL_POS_TRAN_SO_DEF_ALLC


Pre SQL : 



SQL Query : 
SELECT 
TRANS_ID,
SALES_ORDER_LINE_KEY,          
SALES_MOTION_CD,
(SMC_AMOUNT/TRX_AMOUNT) AS SMC_PCT,
'SO ENRICHMENT' AS MATCH_TYPE
FROM 
(
SELECT  
A.TRANS_ID,
A.SALES_ORDER_LINE_KEY,          
SMC.SALES_MOTION_CD,
ABS(CAST(SUM(COALESCE(SOL1.UNIT_SALE_PRICE,0)*COALESCE(SOL1.ORDER_QUANTITY,0) * SMC.DV_ALLOCATION_PCT) OVER (PARTITION BY TRANS_ID,SMC.SALES_MOTION_CD ) AS DECIMAL(18,6))) AS SMC_AMOUNT,
ABS(CAST(SUM(COALESCE(SOL1.UNIT_SALE_PRICE,0)*COALESCE(SOL1.ORDER_QUANTITY,0)*SMC.DV_ALLOCATION_PCT)  OVER (PARTITION BY TRANS_ID ) AS DECIMAL(18,6))) TRX_AMOUNT
 FROM(
SELECT *
FROM  $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC
WHERE /*TRANS_ID NOT IN (
SELECT TRANS_ID FROM $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC O WHERE SALES_MOTION_CD NOT IN ('NEW','RENEW')
AND EXISTS ( SEL 1 FROM $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC I WHERE I.TRANS_ID = O.TRANS_ID GROUP BY TRANS_ID HAVING COUNT(*)>1)
) AND*/
 SALES_ORDER_LINE_KEY >0  AND SALES_MOTION_CD  IN ('UNKNOWN')
)A
INNER JOIN 
$$SLSORDVWDB.N_SALES_ORDER_LINE SOL 
ON A.SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY 
INNER JOIN 
$$SLSORDVWDB.N_SALES_ORDER_LINE SOL1
ON SOL.SALES_ORDER_KEY =SOL1.SALES_ORDER_KEY 
INNER JOIN 
$$STGDB.ST_RTNR_SMC_ALLOCATION_POS_EN SMC  /* UPDATED */
ON SOL1.SALES_ORDER_LINE_KEY =SMC.SALES_ORDER_LINE_KEY 
WHERE SMC.SALES_MOTION_CD IN ('NEW','RENEW')
)A
WHERE 
TRX_AMOUNT <>0
GROUP BY 1,2,3,4


Post SQL : 



Target8 Name : EL_POS_TRAN_SO_DEF_ALLC1


Pre SQL : 
DELETE FROM $$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC ALL;


Post SQL : 
INSERT INTO $$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC
SELECT 
TRANS_ID,
SALES_ORDER_LINE_KEY,
SALES_MOTION_CD,
COALESCE(DV_ALLOCATION_PCT/ NULLIF(SUM_ALLOC_PCT,0),0) AS DV_ALLOCATION_PCT,
'DEFAULT SOL ENRIHMENT' AS MATCH_TYPE
FROM
(
SELECT 
TRANS_ID,
SALES_ORDER_LINE_KEY,
SALES_MOTION_CD,
DV_ALLOCATION_PCT  ,
SUM(DV_ALLOCATION_PCT ) OVER (PARTITION BY TRANS_ID)  AS SUM_ALLOC_PCT
FROM $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC 
WHERE SALES_MOTION_CD  IN ('NEW','RENEW')
AND SALES_ORDER_LINE_KEY < 0
AND TRANS_ID IN (
SELECT TRANS_ID FROM $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC O 
WHERE SALES_MOTION_CD  IN ('NEW','RENEW')
AND SALES_ORDER_LINE_KEY < 0
AND EXISTS (
			SEL 1 FROM $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC  I 
				WHERE   I.TRANS_ID = O.TRANS_ID 
				AND SALES_MOTION_CD  NOT IN ('NEW','RENEW')
				AND SALES_ORDER_LINE_KEY < 0
				)
)
) A;


INSERT INTO $$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC
SELECT SOL.*,NULL AS MATCH_TYPE  FROM  $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC SOL
WHERE NOT EXISTS ( SEL 1 FROM $$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC SO
WHERE SOL.TRANS_ID=SO.TRANS_ID);

CALL COLLECT_STATS_WRAP('$$ETLVWDB','EL_POS_TRAN_SO_DEF_ALLC','D');


Source9 Name : SQ_EL_POS_TRAN_SO_DEF_ALLC1


Pre SQL : 



SQL Query : 
SELECT 
SRC.BK_POS_TRANSACTION_ID_INT,
A.SALES_ORDER_LINE_KEY,
TGT.SALES_MOTION_CD,
TGT.SMC_PCT,
'DIST_HQ ENRICHMENT' AS MATCH_TYPE
FROM 
(SELECT 
ORG.BK_WIPS_ORIGINATOR_ID_INT AS DISTRIBUTOR_ID,
HQ.HQ_PARTY_SSOT_PARTY_ID_INT,
RSTD.BK_POS_TRANSACTION_ID_INT
FROM 
$$SLSORDVWDB.MT_RSTD_BKGS_MEASURE RSTD
INNER JOIN 
$$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION SMC
ON RSTD.SK_SALES_MOTION_ATTRIB_KEY =SMC.SK_SALES_MOTION_ATTRIB_KEY
INNER JOIN $$SLSORDVWDB.N_POS_ORIGINATOR_ORG ORG
ON RSTD.WIPS_ORIGINATOR_ID_INT =ORG.BK_WIPS_ORIGINATOR_ID_INT
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER HQ
ON RSTD.END_CUSTOMER_KEY=HQ.END_CUSTOMER_KEY
INNER JOIN 
$$COMREFVWDB.N_PRODUCT NP
ON NP.ITEM_KEY=RSTD.PRODUCT_KEY
WHERE 
RSTD.BKGS_MEASURE_TRANS_TYPE_CODE='POS'
AND RSTD.CORPORATE_BOOKINGS_FLG  IN  ( 'Y'  )
AND EXISTS 
(
SEL 1 FROM 
$$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC I
WHERE I.TRANS_ID = RSTD.BK_POS_TRANSACTION_ID_INT
AND I.SALES_MOTION_CD NOT IN ('NEW','RENEW')
AND I.SALES_MOTION_CD = 'UNKNOWN'
)
GROUP BY 1,2,3
) SRC
RIGHT JOIN 
(
SEL 
DISTRIBUTOR_ID,
HQ_PARTY_SSOT_PARTY_ID_INT,
SALES_MOTION_CD,
BOOK_NET/D_H_AMT AS SMC_PCT
FROM  
(
SELECT 
DISTRIBUTOR_ID,
HQ_PARTY_SSOT_PARTY_ID_INT,
SALES_MOTION_CD,
BOOK_NET,
SUM(BOOK_NET) OVER (PARTITION BY DISTRIBUTOR_ID,HQ_PARTY_SSOT_PARTY_ID_INT) AS  D_H_AMT
FROM
(
SELECT 
ORG.BK_WIPS_ORIGINATOR_ID_INT AS DISTRIBUTOR_ID,
HQ.HQ_PARTY_SSOT_PARTY_ID_INT,
SMC.SALES_MOTION_CD,
SUM(RSTD.DD_COMP_US_NET_PRICE_AMOUNT*COALESCE(SMC.DV_ALLOCATION_PCT,1)) BOOK_NET
FROM 
$$SLSORDVWDB.MT_RSTD_BKGS_MEASURE RSTD
INNER JOIN 
$$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION SMC
ON RSTD.SK_SALES_MOTION_ATTRIB_KEY =SMC.SK_SALES_MOTION_ATTRIB_KEY
INNER JOIN $$SLSORDVWDB.N_POS_ORIGINATOR_ORG ORG
ON RSTD.WIPS_ORIGINATOR_ID_INT =ORG.BK_WIPS_ORIGINATOR_ID_INT
INNER JOIN $$COMREFVWDB.MT_ENDCUST_CUSTOMER_PARTY_HIER HQ
ON RSTD.END_CUSTOMER_KEY=HQ.END_CUSTOMER_KEY
INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR F
ON RSTD.BOOKINGS_PROCESS_DATE = F.CALENDAR_DATE                 
INNER JOIN 
$$COMREFVWDB.N_PRODUCT NP
ON NP.ITEM_KEY=RSTD.PRODUCT_KEY
INNER JOIN ( 
SELECT 
FISCAL_YEAR_QUARTER_NUMBER_INT ,
PREV_FISCAL_YEAR_QTR_INT,
FISCAL_QUARTER_START_DATE,
FISCAL_QUARTER_END_DATE
FROM
$$COMREFVWDB.R_FISCAL_DAY_TO_YEAR 
GROUP BY 1,2,3,4
)P
ON P.FISCAL_YEAR_QUARTER_NUMBER_INT  =F.PREV_FISCAL_YEAR_QTR_INT
WHERE 
RSTD.BKGS_MEASURE_TRANS_TYPE_CODE='POS'
--AND RSTD.DV_ATTRIBUTION_CD IN ('ATTRIBUTED','STANDALONE')
AND RSTD.CORPORATE_BOOKINGS_FLG  IN  ( 'Y'  )
AND SMC.SALES_MOTION_CD IN ('NEW','RENEW','N/A')
AND CASE WHEN GOODS_OR_SERVICE_TYPE='SERVICE' THEN 'Y' ELSE 'N' END ='Y'
AND RSTD.BOOKINGS_PROCESS_DATE BETWEEN P.FISCAL_QUARTER_START_DATE AND CURRENT_DATE-1
AND EXISTS 
(
SEL 1 FROM 
$$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC I
WHERE I.TRANS_ID = RSTD.BK_POS_TRANSACTION_ID_INT
AND I.SALES_MOTION_CD NOT IN ('NEW','RENEW')
AND I.SALES_MOTION_CD = 'UNKNOWN'
)
GROUP BY 1,2,3
) A
) O
WHERE O.D_H_AMT <>0
--ORDER BY 1,2,3
) TGT
ON 
SRC.DISTRIBUTOR_ID =TGT.DISTRIBUTOR_ID
AND SRC.HQ_PARTY_SSOT_PARTY_ID_INT =TGT.HQ_PARTY_SSOT_PARTY_ID_INT
JOIN 
$$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC  A
ON A.TRANS_ID = SRC.BK_POS_TRANSACTION_ID_INT


Post SQL : 



Target9 Name : EL_POS_TRAN_DIST_HQ_DEF_ALLC


Pre SQL : 
DELETE FROM $$ETLVWDB.EL_POS_TRAN_DIST_HQ_DEF_ALLC;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$ETLVWDB','EL_POS_TRAN_DIST_HQ_DEF_ALLC','D');


Source10 Name : SQ_EL_POS_TRAN_SO_DEF_ALLC2


Pre SQL : 



SQL Query : 
SEL O.* FROM $$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC O
WHERE TRANS_ID IN ( 
SELECT TRANS_ID  
FROM $$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC
WHERE SALES_MOTION_CD in ('NEW','RENEW','N/A')
GROUP BY TRANS_ID HAVING  ROUND(SUM(DV_ALLOCATION_PCT)) =1
)  AND NOT EXISTS ( SEL 1 FROM $$ETLVWDB.EL_POS_TRAN_DIST_HQ_DEF_ALLC I
WHERE I.TRANS_ID = O.TRANS_ID)


Post SQL : 



Target10 Name : EL_POS_TRAN_DIST_HQ_DEF_ALLC1


Pre SQL : 



Post SQL : 
CREATE VOLATILE TABLE  POS_TRAN_DEF_ALLC
AS
(SEL TRANS_ID FROM $$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC
  MINUS
  SEL TRANS_ID FROM $$ETLVWDB.EL_POS_TRAN_DIST_HQ_DEF_ALLC
) WITH DATA ON COMMIT PRESERVE ROWS;



INSERT INTO $$ETLVWDB.EL_POS_TRAN_DIST_HQ_DEF_ALLC
SEL 
TRANS_ID , 
SALES_ORDER_LINE_KEY ,
'NEW' AS SALES_MOTION_CD , 
1.00 AS DV_ALLOCATION_PCT,
'DEFAULT_SM_TAGGING'   AS MATCH_TYPE
FROM $$ETLVWDB.EL_POS_TRAN_SO_DEF_ALLC
WHERE TRANS_ID IN (SEL TRANS_ID FROM POS_TRAN_DEF_ALLC)
GROUP BY 1,2,3,4;

 

CALL COLLECT_STATS_WRAP('$$ETLVWDB','EL_POS_TRAN_DIST_HQ_DEF_ALLC','D');


Source11 Name : SQ_WI_WIPS_SER_POS_DTLS_MULTI_PUB


Pre SQL : 



SQL Query : 
SELECT 
BK_POS_TRANSACTION_ID_INT     
,SK_UNIQUE_ID_INT              
,TRANSACTION_ID_INT            
,DSV_BOOKINGS_FLG              
,ACTIVE_FLAG                   
,SRC_CREATED_DTM               
,DV_SRC_CREATED_DT             
,SRC_CREATED_PROCESS_NAME      
,SRC_UPDATED_DTM               
,DV_SRC_UPDATED_DT             
,SRC_UPDATED_PROCESS_NAME      
,DERIVED_QUOTE_NUMBER          
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,SALES_ORDER_LINE_KEY          
,MATCHING_MTHD_FOR_TAGGING_NAME
,SRC_RPTD_REVENUE_SRC_CD       
,SALES_MOTION_CD               
,CONFIDENCE_FLG                
,DV_ALLOCATION_PCT             
,START_TV_DTM                    
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG
,MULTIPLE_MATCH_FLG
,APPROVED_ERP_LINKAGE_FLG
,SALES_MOTION_TIMING_CD
, 'N' AS MANUAL_OVERRIDE_ROLE
, -999 AS REQUESTING_CSCO_WRKR_PRTY_KEY
, 'UNKNOWN' AS SLS_MTN_CORRECTION_CASE_NUM
, 'UNKNOWN' AS SLS_MTN_CORRECTION_CMNT
, 'UNKNOWN' AS SLS_MTN_CORRECTION_REASON_DESC
FROM (
SELECT 
SMC.TRANS_ID AS BK_POS_TRANSACTION_ID_INT, 
MAX(EL.ID ) OVER (PARTITION BY EL.TRANS_ID ) AS SK_UNIQUE_ID_INT,
EL.TRANS_ID AS TRANSACTION_ID_INT,
EL.BOOKING_FLAG AS DSV_BOOKINGS_FLG ,
EL.ACTIVE_FLAG ,
MAX(CAST(EL.CREATED_DATE AS TIMESTAMP(0)))  OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS SRC_CREATED_DTM,
MAX(EL.CREATED_DATE) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS DV_SRC_CREATED_DT,
MAX(EL.CREATED_BY) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS SRC_CREATED_PROCESS_NAME,
MAX(CAST(EL.LAST_UPDATED_DATE AS TIMESTAMP(0)))  OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS SRC_UPDATED_DTM,
MAX(CAST(EL.LAST_UPDATED_DATE AS DATE)) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS DV_SRC_UPDATED_DT,
MAX(EL.LAST_UPDATED_BY) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS SRC_UPDATED_PROCESS_NAME, 
EL.DERIVED_QUOTE_NUMBER  ,
EL.DERIVED_QUOTE_LINE_ID  ,
EL.DERIVED_ORDER_LINE_ID,
EL.SALES_ORDER_LINE_KEY,
CASE WHEN SMC.MATCH_TYPE IS NOT NULL
THEN SMC.MATCH_TYPE
ELSE EL.MATCH_TYPE
END AS MATCHING_MTHD_FOR_TAGGING_NAME,
CAST( '='  AS VARCHAR(1))  AS SRC_RPTD_REVENUE_SRC_CD, 
SMC.SALES_MOTION_CD
,EL.CONFIDENCE_FLAG AS CONFIDENCE_FLG  
,SMC.DV_ALLOCATION_PCT
,MAX(EL.LAST_UPDATED_DATE) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS START_TV_DTM 
,MAX(EL.PO_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID) AS PO_EXISTS_FLG         
,MAX(EL.PO_DISTRI_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID) AS PO_DISTRI_EXISTS_FLG     
,MAX(EL.PO_PRDT_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS PO_PRDT_EXISTS_FLG            
,MAX(EL.QUOTE_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_EXISTS_FLG             
,MAX(EL.QUOTE_DISTRI_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_DISTRI_EXISTS_FLG       
,MAX(EL.QUOTE_PRDT_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_PRDT_EXISTS_FLG         
,MAX(EL.MULTIPLE_SALES_MOTION_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS MULTIPLE_SALES_MOTION_FLG   
,MAX(EL.MULTIPLE_MATCH_FLG) OVER (PARTITION BY EL.TRANS_ID) AS MULTIPLE_MATCH_FLG  
,MAX(EL.APPROVED_ERP_LINKAGE_FLG) OVER (PARTITION BY EL.TRANS_ID) AS APPROVED_ERP_LINKAGE_FLG
,'UNKNOWN' AS SALES_MOTION_TIMING_CD
FROM $$ETLVWDB.EL_POS_TRAN_DIST_HQ_DEF_ALLC SMC
INNER JOIN $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  EL
ON EL.TRANS_ID=SMC.TRANS_ID
AND EL.SALES_ORDER_LINE_KEY= SMC.SALES_ORDER_LINE_KEY
AND EL.SS_CODE = 'CG'
WHERE SMC.DV_ALLOCATION_PCT <> 0 AND EL.DV_ALLOCATION_PCT <> 0 AND EL.END_TV_DTM='3500-01-01 00:00:00' AND EL.TRANS_ID IN ( SELECT TRANS_ID FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL SMC
WHERE DV_ALLOCATION_PCT <> 0 AND SMC.SS_CODE = 'CG' AND EDW_UPDATE_DTM  > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS  WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB')
 AND SMC.END_TV_DTM='3500-01-01 00:00:00' ) ) WI
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36

UNION ALL

SELECT 
BK_POS_TRANSACTION_ID_INT     
,SK_UNIQUE_ID_INT              
,TRANSACTION_ID_INT            
,DSV_BOOKINGS_FLG              
,ACTIVE_FLAG                   
,SRC_CREATED_DTM               
,DV_SRC_CREATED_DT             
,SRC_CREATED_PROCESS_NAME      
,SRC_UPDATED_DTM               
,DV_SRC_UPDATED_DT             
,SRC_UPDATED_PROCESS_NAME      
,DERIVED_QUOTE_NUMBER          
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,SALES_ORDER_LINE_KEY          
,MATCHING_MTHD_FOR_TAGGING_NAME
,SRC_RPTD_REVENUE_SRC_CD       
,SALES_MOTION_CD               
,CONFIDENCE_FLG                
,DV_ALLOCATION_PCT             
,START_TV_DTM                    
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG    
,MULTIPLE_MATCH_FLG
,APPROVED_ERP_LINKAGE_FLG
,SALES_MOTION_TIMING_CD
, 'N' AS MANUAL_OVERRIDE_ROLE
, -999 AS REQUESTING_CSCO_WRKR_PRTY_KEY
, 'UNKNOWN' AS SLS_MTN_CORRECTION_CASE_NUM
, 'UNKNOWN' AS SLS_MTN_CORRECTION_CMNT
, 'UNKNOWN' AS SLS_MTN_CORRECTION_REASON_DESC
FROM (
SELECT  
SMC.TRANS_ID AS BK_POS_TRANSACTION_ID_INT, 
-999 AS SK_UNIQUE_ID_INT,
SMC.TRANS_ID AS TRANSACTION_ID_INT,
MAX(EL.BOOKING_FLAG) OVER (PARTITION BY EL.TRANS_ID) AS DSV_BOOKINGS_FLG, 
MAX(EL.ACTIVE_FLAG) OVER (PARTITION BY EL.TRANS_ID) AS ACTIVE_FLAG ,
MAX(CAST(EL.CREATED_DATE AS TIMESTAMP(0)))  OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS SRC_CREATED_DTM,
MAX(EL.CREATED_DATE) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS DV_SRC_CREATED_DT,
MAX(EL.CREATED_BY) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS SRC_CREATED_PROCESS_NAME,
MAX(CAST(EL.LAST_UPDATED_DATE AS TIMESTAMP(0)))  OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS SRC_UPDATED_DTM,
MAX(CAST(EL.LAST_UPDATED_DATE AS DATE)) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS DV_SRC_UPDATED_DT,
MAX(EL.LAST_UPDATED_BY) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS SRC_UPDATED_PROCESS_NAME, 
'UNKNOWN' AS DERIVED_QUOTE_NUMBER ,
-999 AS DERIVED_QUOTE_LINE_ID ,
-9999 AS DERIVED_ORDER_LINE_ID ,
SMC.SALES_ORDER_LINE_KEY AS SALES_ORDER_LINE_KEY ,
CASE WHEN SMC.MATCH_TYPE IS NOT NULL
THEN SMC.MATCH_TYPE
ELSE EL.MATCH_TYPE
END AS MATCHING_MTHD_FOR_TAGGING_NAME,
CAST( '='  AS VARCHAR(1)) AS SRC_RPTD_REVENUE_SRC_CD, 
SMC.SALES_MOTION_CD
,MAX(EL.CONFIDENCE_FLAG) OVER (PARTITION BY EL.TRANS_ID) AS CONFIDENCE_FLG 
,SMC.DV_ALLOCATION_PCT
,MAX(EL.LAST_UPDATED_DATE) OVER (PARTITION BY EL.TRANS_ID,EL.SALES_MOTION_CD) AS START_TV_DTM 
,MAX(EL.PO_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID) AS PO_EXISTS_FLG         
,MAX(EL.PO_DISTRI_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID) AS PO_DISTRI_EXISTS_FLG     
,MAX(EL.PO_PRDT_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS PO_PRDT_EXISTS_FLG            
,MAX(EL.QUOTE_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_EXISTS_FLG             
,MAX(EL.QUOTE_DISTRI_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_DISTRI_EXISTS_FLG       
,MAX(EL.QUOTE_PRDT_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_PRDT_EXISTS_FLG         
,MAX(EL.MULTIPLE_SALES_MOTION_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS MULTIPLE_SALES_MOTION_FLG   
,MAX(EL.MULTIPLE_MATCH_FLG) OVER (PARTITION BY EL.TRANS_ID) AS MULTIPLE_MATCH_FLG  
,MAX(EL.APPROVED_ERP_LINKAGE_FLG) OVER (PARTITION BY EL.TRANS_ID) AS APPROVED_ERP_LINKAGE_FLG  
,'UNKNOWN' AS SALES_MOTION_TIMING_CD   
FROM $$ETLVWDB.EL_POS_TRAN_DIST_HQ_DEF_ALLC SMC
INNER JOIN $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  EL
ON EL.TRANS_ID=SMC.TRANS_ID
AND SMC.SALES_ORDER_LINE_KEY=-7777
WHERE SMC.DV_ALLOCATION_PCT <> 0 AND EL.SS_CODE = 'CG' AND EL.DV_ALLOCATION_PCT <> 0 AND EL.END_TV_DTM='3500-01-01 00:00:00' AND EL.TRANS_ID IN ( SELECT TRANS_ID FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL SMC
WHERE DV_ALLOCATION_PCT <> 0 AND SMC.SS_CODE = 'CG' AND EDW_UPDATE_DTM  > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS  WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB') 
AND SMC.END_TV_DTM='3500-01-01 00:00:00' )  )SF
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36

UNION ALL

SELECT 
BK_POS_TRANSACTION_ID_INT     
,SK_UNIQUE_ID_INT              
,TRANSACTION_ID_INT            
,DSV_BOOKINGS_FLG              
,ACTIVE_FLAG                   
,SRC_CREATED_DTM               
,DV_SRC_CREATED_DT             
,SRC_CREATED_PROCESS_NAME      
,SRC_UPDATED_DTM               
,DV_SRC_UPDATED_DT             
,SRC_UPDATED_PROCESS_NAME      
,DERIVED_QUOTE_NUMBER          
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,SALES_ORDER_LINE_KEY          
,MATCHING_MTHD_FOR_TAGGING_NAME
,SRC_RPTD_REVENUE_SRC_CD       
,SALES_MOTION_CD               
,CONFIDENCE_FLG                
,DV_ALLOCATION_PCT             
,START_TV_DTM                    
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG 
,MULTIPLE_MATCH_FLG
,APPROVED_ERP_LINKAGE_FLG
,SALES_MOTION_TIMING_CD   
, 'N' AS MANUAL_OVERRIDE_ROLE
, -999 AS REQUESTING_CSCO_WRKR_PRTY_KEY
, 'UNKNOWN' AS SLS_MTN_CORRECTION_CASE_NUM
, 'UNKNOWN' AS SLS_MTN_CORRECTION_CMNT
, 'UNKNOWN' AS SLS_MTN_CORRECTION_REASON_DESC
FROM (
SELECT  
EL.TRANS_ID AS BK_POS_TRANSACTION_ID_INT, 
-999 AS SK_UNIQUE_ID_INT,
EL.TRANS_ID AS TRANSACTION_ID_INT,
MAX(EL.BOOKING_FLAG) OVER (PARTITION BY EL.TRANS_ID) AS DSV_BOOKINGS_FLG, 
MAX(EL.ACTIVE_FLAG) OVER (PARTITION BY EL.TRANS_ID) AS ACTIVE_FLAG ,
MAX(CAST(EL.CREATED_DATE AS TIMESTAMP(0)))  OVER (PARTITION BY EL.TRANS_ID) AS SRC_CREATED_DTM,
MAX(EL.CREATED_DATE) OVER (PARTITION BY EL.TRANS_ID) AS DV_SRC_CREATED_DT,
MAX(EL.CREATED_BY) OVER (PARTITION BY EL.TRANS_ID) AS SRC_CREATED_PROCESS_NAME,
MAX(CAST(EL.LAST_UPDATED_DATE AS TIMESTAMP(0)))  OVER (PARTITION BY EL.TRANS_ID) AS SRC_UPDATED_DTM,
MAX(CAST(EL.LAST_UPDATED_DATE AS DATE)) OVER (PARTITION BY EL.TRANS_ID) AS DV_SRC_UPDATED_DT,
MAX(EL.LAST_UPDATED_BY) OVER (PARTITION BY EL.TRANS_ID) AS SRC_UPDATED_PROCESS_NAME, 
'UNKNOWN' AS DERIVED_QUOTE_NUMBER ,
-999 AS DERIVED_QUOTE_LINE_ID ,
-9999 AS DERIVED_ORDER_LINE_ID ,
-7777 AS SALES_ORDER_LINE_KEY ,
'DEFAULT_SM_TAGGING' AS MATCHING_MTHD_FOR_TAGGING_NAME,
CAST( '='  AS VARCHAR(1))  AS SRC_RPTD_REVENUE_SRC_CD, 
'NEW' AS SALES_MOTION_CD
,MAX(EL.CONFIDENCE_FLAG) OVER (PARTITION BY EL.TRANS_ID) AS CONFIDENCE_FLG  
,1.00 AS DV_ALLOCATION_PCT
,MAX(LAST_UPDATED_DATE) OVER (PARTITION BY EL.TRANS_ID) AS START_TV_DTM 
,MAX(EL.PO_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID) AS PO_EXISTS_FLG         
,MAX(EL.PO_DISTRI_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID) AS PO_DISTRI_EXISTS_FLG     
,MAX(EL.PO_PRDT_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS PO_PRDT_EXISTS_FLG            
,MAX(EL.QUOTE_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_EXISTS_FLG             
,MAX(EL.QUOTE_DISTRI_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_DISTRI_EXISTS_FLG       
,MAX(EL.QUOTE_PRDT_EXISTS_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS QUOTE_PRDT_EXISTS_FLG         
,MAX(EL.MULTIPLE_SALES_MOTION_FLG) OVER (PARTITION BY EL.TRANS_ID)  AS MULTIPLE_SALES_MOTION_FLG   
,MAX(EL.MULTIPLE_MATCH_FLG) OVER (PARTITION BY EL.TRANS_ID) AS MULTIPLE_MATCH_FLG  
,MAX(EL.APPROVED_ERP_LINKAGE_FLG) OVER (PARTITION BY EL.TRANS_ID) AS APPROVED_ERP_LINKAGE_FLG  
,'UNKNOWN' AS SALES_MOTION_TIMING_CD  
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL  EL
WHERE EL.DV_ALLOCATION_PCT = 0 AND EL.SS_CODE = 'CG' 
AND EDW_UPDATE_DTM  > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS  WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB') 
AND EL.END_TV_DTM='3500-01-01 00:00:00' AND  EL.TRANS_ID NOT IN (  SELECT DISTINCT TRANS_ID FROM $$ETLVWDB.EL_POS_TRAN_SOL_DEF_ALLC ) 

AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_POS_TRX_LN_ASFASTTR_ENRICH ASFAST WHERE ASFAST.TRANS_ID = EL.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_POS_TRX_LN_RET_LN RETLN WHERE RETLN.TRANS_ID = EL.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL NPOS WHERE NPOS.BK_POS_TRANSACTION_ID_INT = EL.TRANS_ID AND MANUAL_OVERRIDE_ROLE = 'Y')
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_SMR_POS_MANUAL_UPLOAD MUPL WHERE MUPL.BK_POS_TRANSACTION_ID = EL.TRANS_ID)
AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_BKG_POS_SFP_TRX SFP WHERE SFP.TRANS_ID = EL.TRANS_ID AND SFP.SALES_MOTION_CD<>'UNKNOWN') 
AND NOT EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_ATTR_PRDT_NEW_RNWL_ACV_TV NAPNRCT WHERE NAPNRCT.POS_TRANSACTION_ID_INT=EL.TRANS_ID
AND NAPNRCT.END_TV_DTM='3500-01-01 00:00:00' AND NAPNRCT.ORDER_ORIGIN_CD='DISTI-DSV'
  ) 
)  WS
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36


Post SQL : 



Target11 Name : WI_WIPS_SER_POS_DTLS_MULTI_PUB1


Pre SQL : 
/* DELETE FROM $$STGDB.WI_WIPS_SER_POS_DTLS_MULTI_PUB; 
delete placed in manual upload pipeline */


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_WIPS_SER_POS_DTLS_MULTI_PUB;','D');

/*
UPDATE  DJS
FROM $$ETLVWDB.DW_JOB_STREAMS DJS
,(SELECT MAX(EDW_UPDATE_DTM) AS EDW_UPDATE_DTM FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL )SRC
SET LAST_EXTRACT_DATE=COALESCE(SRC.EDW_UPDATE_DTM,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)) )
WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB';
*/


Source12 Name : SQ_WI_POS_TRX_LN_ASFASTTR_ENRICH


Pre SQL : 



SQL Query : 
SELECT 
SMC.TRANS_ID AS BK_POS_TRANSACTION_ID_INT     
,CASE WHEN SMC.SALES_ORDER_LINE_KEY = -7777 THEN -999 ELSE EL.SK_UNIQUE_ID_INT END SK_UNIQUE_ID_INT              
,EL.TRANSACTION_ID_INT            
,EL.DSV_BOOKINGS_FLG              
,EL.ACTIVE_FLAG                   
,EL.SRC_CREATED_DTM               
,EL.DV_SRC_CREATED_DT             
,EL.SRC_CREATED_PROCESS_NAME      
,EL.SRC_UPDATED_DTM               
,EL.DV_SRC_UPDATED_DT             
,EL.SRC_UPDATED_PROCESS_NAME      
,CASE WHEN SMC.SALES_ORDER_LINE_KEY = -7777 THEN 'UNKNOWN' ELSE EL.DERIVED_QUOTE_NUMBER  END DERIVED_QUOTE_NUMBER       
,CASE WHEN SMC.SALES_ORDER_LINE_KEY = -7777 THEN -999  ELSE EL.DERIVED_QUOTE_LINE_ID  END DERIVED_QUOTE_LINE_ID
,CASE WHEN SMC.SALES_ORDER_LINE_KEY = -7777 THEN -9999 ELSE EL.DERIVED_ORDER_LINE_ID END DERIVED_ORDER_LINE_ID        
,SMC.SALES_ORDER_LINE_KEY          
/*,EL.MATCHING_MTHD_FOR_TAGGING_NAME*/
,'AS-T/F/TRAINING NEW ENRICH' MATCHING_MTHD_FOR_TAGGING_NAME
,SRC_RPTD_REVENUE_SRC_CD       
,SMC.SALES_MOTION_CD               
,EL.CONFIDENCE_FLG                
,SMC.DV_ALLOCATION_PCT             
,EL.START_TV_DTM                    
,EL.PO_EXISTS_FLG                 
,EL.PO_DISTRI_EXISTS_FLG          
,EL.PO_PRDT_EXISTS_FLG            
,EL.QUOTE_EXISTS_FLG              
,EL.QUOTE_DISTRI_EXISTS_FLG       
,EL.QUOTE_PRDT_EXISTS_FLG         
,EL.MULTIPLE_SALES_MOTION_FLG    
,EL.MULTIPLE_MATCH_FLG
,EL.APPROVED_ERP_LINKAGE_FLG
,EL.SALES_MOTION_TIMING_CD
,MANUAL_OVERRIDE_ROLE
,REQUESTING_CSCO_WRKR_PRTY_KEY
,SLS_MTN_CORRECTION_CASE_NUM
,SLS_MTN_CORRECTION_CMNT
,SLS_MTN_CORRECTION_REASON_DESC
FROM $$STGDB.WI_POS_TRX_LN_ASFASTTR_ENRICH SMC
INNER JOIN 
(SELECT 
TRANS_ID ,
EL.ID AS SK_UNIQUE_ID_INT,
EL.TRANS_ID AS TRANSACTION_ID_INT,
EL.BOOKING_FLAG AS DSV_BOOKINGS_FLG ,
EL.ACTIVE_FLAG ,
EL.CREATED_DATE  AS SRC_CREATED_DTM,
EL.CREATED_DATE AS DV_SRC_CREATED_DT,
EL.CREATED_BY AS SRC_CREATED_PROCESS_NAME,
EL.LAST_UPDATED_DATE AS SRC_UPDATED_DTM,
CAST(EL.LAST_UPDATED_DATE AS DATE) AS DV_SRC_UPDATED_DT,
EL.LAST_UPDATED_BY SRC_UPDATED_PROCESS_NAME,
EL.DERIVED_QUOTE_NUMBER  ,
EL.DERIVED_QUOTE_LINE_ID  AS DERIVED_QUOTE_LINE_ID,
EL.DERIVED_ORDER_LINE_ID AS DERIVED_ORDER_LINE_ID,
/* --SMC.SALES_ORDER_LINE_KEY, */
EL.MATCH_TYPE AS MATCHING_MTHD_FOR_TAGGING_NAME,
CAST( '='  AS VARCHAR(1))  AS SRC_RPTD_REVENUE_SRC_CD, 
/* SMC.SALES_MOTION_CD, */
EL.CONFIDENCE_FLAG AS CONFIDENCE_FLG ,
/* --SMC.DV_ALLOCATION_PCT, */
EL.LAST_UPDATED_DATE AS START_TV_DTM ,
EL.PO_EXISTS_FLG AS PO_EXISTS_FLG         ,
EL.PO_DISTRI_EXISTS_FLG AS PO_DISTRI_EXISTS_FLG     ,
EL.PO_PRDT_EXISTS_FLG AS PO_PRDT_EXISTS_FLG         ,   
EL.QUOTE_EXISTS_FLG AS QUOTE_EXISTS_FLG             ,
EL.QUOTE_DISTRI_EXISTS_FLG AS QUOTE_DISTRI_EXISTS_FLG,       
EL.QUOTE_PRDT_EXISTS_FLG AS QUOTE_PRDT_EXISTS_FLG     ,    
EL.MULTIPLE_SALES_MOTION_FLG AS MULTIPLE_SALES_MOTION_FLG   ,
EL.MULTIPLE_MATCH_FLG AS MULTIPLE_MATCH_FLG  ,
EL.APPROVED_ERP_LINKAGE_FLG AS APPROVED_ERP_LINKAGE_FLG  ,
'UNKNOWN' AS SALES_MOTION_TIMING_CD  , 
'N'AS MANUAL_OVERRIDE_ROLE          ,
-999 AS REQUESTING_CSCO_WRKR_PRTY_KEY, 
'UNKNOWN' AS SLS_MTN_CORRECTION_CASE_NUM   ,
'UNKNOWN' AS SLS_MTN_CORRECTION_CMNT       ,
'UNKNOWN' AS SLS_MTN_CORRECTION_REASON_DESC,
EL.END_TV_DTM,
EL.EDW_UPDATE_DTM
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL
WHERE END_TV_DTM='3500-01-01 00:00:00'
AND EL.SS_CODE = 'CG'
QUALIFY ROW_NUMBER() OVER (PARTITION BY TRANS_ID ORDER BY TRANS_ID) = 1) EL
ON EL.TRANS_ID = SMC.TRANS_ID
AND EL.END_TV_DTM='3500-01-01 00:00:00'
AND EL.EDW_UPDATE_DTM > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB')


Post SQL : 



Target12 Name : WI_WIPS_SER_POS_DTLS_MULTI_PUB8


Pre SQL : 



Post SQL : 



Source13 Name : SQ_WI_WIPS_SER_POS_DTLS_MULTI_PUB_SFP


Pre SQL : 



SQL Query : 
SELECT 
SFP.TRANS_ID AS BK_POS_TRANSACTION_ID_INT     
,CASE WHEN SFP.SALES_ORDER_LINE_KEY = -7777 THEN -999 ELSE EL.SK_UNIQUE_ID_INT END SK_UNIQUE_ID_INT              
,EL.TRANSACTION_ID_INT            
,EL.DSV_BOOKINGS_FLG              
,EL.ACTIVE_FLAG                   
,EL.SRC_CREATED_DTM               
,EL.DV_SRC_CREATED_DT             
,EL.SRC_CREATED_PROCESS_NAME      
,EL.SRC_UPDATED_DTM               
,EL.DV_SRC_UPDATED_DT             
,EL.SRC_UPDATED_PROCESS_NAME      
,CASE WHEN SFP.SALES_ORDER_LINE_KEY = -7777 THEN 'UNKNOWN' ELSE EL.DERIVED_QUOTE_NUMBER  END DERIVED_QUOTE_NUMBER       
,CASE WHEN SFP.SALES_ORDER_LINE_KEY = -7777 THEN -999  ELSE EL.DERIVED_QUOTE_LINE_ID  END DERIVED_QUOTE_LINE_ID
,CASE WHEN SFP.SALES_ORDER_LINE_KEY = -7777 THEN -9999 ELSE EL.DERIVED_ORDER_LINE_ID END DERIVED_ORDER_LINE_ID        
,SFP.SALES_ORDER_LINE_KEY          
/*,EL.MATCHING_MTHD_FOR_TAGGING_NAME*/
, MATCHING_MTHD_FOR_TAGGING_NAME
,SRC_RPTD_REVENUE_SRC_CD       
,SFP.SALES_MOTION_CD               
,EL.CONFIDENCE_FLG                
,SFP.DV_ALLOCATION_PCT             
,EL.START_TV_DTM                    
,EL.PO_EXISTS_FLG                 
,EL.PO_DISTRI_EXISTS_FLG          
,EL.PO_PRDT_EXISTS_FLG            
,EL.QUOTE_EXISTS_FLG              
,EL.QUOTE_DISTRI_EXISTS_FLG       
,EL.QUOTE_PRDT_EXISTS_FLG         
,EL.MULTIPLE_SALES_MOTION_FLG    
,EL.MULTIPLE_MATCH_FLG
,EL.APPROVED_ERP_LINKAGE_FLG
,EL.SALES_MOTION_TIMING_CD
,EL.MANUAL_OVERRIDE_ROLE
,EL.REQUESTING_CSCO_WRKR_PRTY_KEY
,EL.SLS_MTN_CORRECTION_CASE_NUM
,EL.SLS_MTN_CORRECTION_CMNT
,EL.SLS_MTN_CORRECTION_REASON_DESC 
FROM $$STGDB.WI_BKG_POS_SFP_TRX SFP
INNER JOIN 
(SELECT 
TRANS_ID ,
EL.ID AS SK_UNIQUE_ID_INT,
EL.TRANS_ID AS TRANSACTION_ID_INT,
EL.BOOKING_FLAG AS DSV_BOOKINGS_FLG ,
EL.ACTIVE_FLAG ,
EL.CREATED_DATE  AS SRC_CREATED_DTM,
EL.CREATED_DATE AS DV_SRC_CREATED_DT,
EL.CREATED_BY AS SRC_CREATED_PROCESS_NAME,
EL.LAST_UPDATED_DATE AS SRC_UPDATED_DTM,
CAST(EL.LAST_UPDATED_DATE AS DATE) AS DV_SRC_UPDATED_DT,
EL.LAST_UPDATED_BY SRC_UPDATED_PROCESS_NAME,
EL.DERIVED_QUOTE_NUMBER  ,
EL.DERIVED_QUOTE_LINE_ID  AS DERIVED_QUOTE_LINE_ID,
EL.DERIVED_ORDER_LINE_ID AS DERIVED_ORDER_LINE_ID,
/* --SMC.SALES_ORDER_LINE_KEY, */
'DSV_SALES_MOTION' AS MATCHING_MTHD_FOR_TAGGING_NAME, 
CAST( '='  AS VARCHAR(1))  AS SRC_RPTD_REVENUE_SRC_CD, 
/* SMC.SALES_MOTION_CD, */
EL.CONFIDENCE_FLAG AS CONFIDENCE_FLG ,
/* --SMC.DV_ALLOCATION_PCT, */
EL.LAST_UPDATED_DATE AS START_TV_DTM ,
EL.PO_EXISTS_FLG AS PO_EXISTS_FLG         ,
EL.PO_DISTRI_EXISTS_FLG AS PO_DISTRI_EXISTS_FLG     ,
EL.PO_PRDT_EXISTS_FLG AS PO_PRDT_EXISTS_FLG         ,   
EL.QUOTE_EXISTS_FLG AS QUOTE_EXISTS_FLG             ,
EL.QUOTE_DISTRI_EXISTS_FLG AS QUOTE_DISTRI_EXISTS_FLG,       
EL.QUOTE_PRDT_EXISTS_FLG AS QUOTE_PRDT_EXISTS_FLG     ,    
EL.MULTIPLE_SALES_MOTION_FLG AS MULTIPLE_SALES_MOTION_FLG   ,
EL.MULTIPLE_MATCH_FLG AS MULTIPLE_MATCH_FLG  ,
EL.APPROVED_ERP_LINKAGE_FLG AS APPROVED_ERP_LINKAGE_FLG  ,
'UNKNOWN' AS SALES_MOTION_TIMING_CD  , 
'N'AS MANUAL_OVERRIDE_ROLE          ,
-999 AS REQUESTING_CSCO_WRKR_PRTY_KEY, 
'UNKNOWN' AS SLS_MTN_CORRECTION_CASE_NUM   ,
'UNKNOWN' AS SLS_MTN_CORRECTION_CMNT       ,
'UNKNOWN' AS SLS_MTN_CORRECTION_REASON_DESC,
EL.END_TV_DTM,
EL.EDW_UPDATE_DTM
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL
WHERE END_TV_DTM='3500-01-01 00:00:00'
AND EL.SS_CODE = 'CG'
QUALIFY ROW_NUMBER() OVER (PARTITION BY TRANS_ID ORDER BY TRANS_ID) = 1) EL
ON EL.TRANS_ID = SFP.TRANS_ID
AND EL.END_TV_DTM='3500-01-01 00:00:00'
AND SFP.SALES_MOTION_CD<>'UNKNOWN'
AND EL.EDW_UPDATE_DTM > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB')


Post SQL : 



Target13 Name : WI_WIPS_SER_POS_DTLS_MULTI_PUB_SFP


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_WIPS_SER_POS_DTLS_MULTI_PUB;','D');


Source14 Name : SQ_WI_WIPS_SER_POS_DTLS_MULTI_PUB1


Pre SQL : 



SQL Query : 
SELECT  
RETLN.TRANS_ID AS BK_POS_TRANSACTION_ID_INT     ,
WI_PUB.SK_UNIQUE_ID_INT              ,
WI_PUB.TRANSACTION_ID_INT            ,
WI_PUB.DSV_BOOKINGS_FLG              ,
WI_PUB.ACTIVE_FLG                    ,
WI_PUB.SRC_CREATED_DTM               ,
WI_PUB.DV_SRC_CREATED_DT             ,
WI_PUB.SRC_CREATED_PROCESS_NAME      ,
WI_PUB.SRC_UPDATED_DTM               ,
WI_PUB.DV_SRC_UPDATED_DT             ,
WI_PUB.SRC_UPDATED_PROCESS_NAME      ,
WI_PUB.DERIVED_QUOTE_NUMBER          ,
WI_PUB.DERIVED_QUOTE_LINE_ID         ,
WI_PUB.DERIVED_ORDER_LINE_ID         ,
WI_PUB.SALES_ORDER_LINE_KEY          ,
WI_PUB.MATCHING_MTHD_FOR_TAGGING_NAME,
WI_PUB.SRC_RPTD_REVENUE_SRC_CD       ,
WI_PUB.SALES_MOTION_CD               ,
WI_PUB.CONFIDENCE_FLG                ,
WI_PUB.DV_ALLOCATION_PCT             ,
CURRENT_TIMESTAMP(0) AS START_TV_DTM  , -- CHECK
WI_PUB.PO_EXISTS_FLG                 ,
WI_PUB.PO_DISTRI_EXISTS_FLG          ,
WI_PUB.PO_PRDT_EXISTS_FLG            ,
WI_PUB.QUOTE_EXISTS_FLG              ,
WI_PUB.QUOTE_DISTRI_EXISTS_FLG       ,
WI_PUB.QUOTE_PRDT_EXISTS_FLG         ,
WI_PUB.MULTIPLE_SALES_MOTION_FLG     ,
WI_PUB.MULTIPLE_MATCH_FLG            ,
WI_PUB.APPROVED_ERP_LINKAGE_FLG      ,
WI_PUB.SALES_MOTION_TIMING_CD        
FROM $$STGDB.WI_POS_TRX_LN_RET_LN RETLN
INNER JOIN $$STGDB.WI_WIPS_SER_POS_DTLS_MULTI_PUB WI_PUB
ON RETLN.RU_BK_ORIG_POS_TRANSACTION_ID = WI_PUB.BK_POS_TRANSACTION_ID_INT

WHERE EXISTS (SELECT 1 FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL 
                                    WHERE RETLN.TRANS_ID = EL.TRANS_ID
                                     AND EL.SS_CODE = 'CG' 
                                     AND EL.NET_PRICE_FLG = 'N' 
                                     AND EL.END_TV_DTM='3500-01-01 00:00:00')
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15, 16,17,18,19,20,22,23,24,25,26,27,28,29,30,31


Post SQL : 



Target14 Name : WI_POS_TRX_RET_LN_OVWRTN_ORG_LN


Pre SQL : 
DELETE FROM $$STGDB.WI_POS_TRX_RET_LN_OVWRTN_ORG_LN;


Post SQL : 



Source15 Name : SQ_WI_WIPS_SER_POS_DTLS_MULTI_PUB2


Pre SQL : 



SQL Query : 
SELECT  
RETLN.TRANS_ID AS BK_POS_TRANSACTION_ID_INT     ,
POS.SK_UNIQUE_ID_INT              ,
POS.TRANSACTION_ID_INT            ,
POS.DSV_BOOKINGS_FLG              ,
POS.ACTIVE_FLG                    ,
POS.SRC_CREATED_DTM               ,
POS.DV_SRC_CREATED_DT             ,
POS.SRC_CREATED_PROCESS_NAME      ,
--POS.SRC_UPDATED_DTM               ,
CURRENT_TIMESTAMP(0) AS SRC_UPDATED_DTM      ,
CURRENT_DATE AS DV_SRC_UPDATED_DT     ,
--POS.DV_SRC_UPDATED_DT             ,
POS.SRC_UPDATED_PROCESS_NAME      ,
POS.SRC_RPTD_QUOTE_NUM AS DERIVED_QUOTE_NUMBER          ,
COALESCE(NSQ.SK_QUOTE_LINE_ID_INT, -999) AS DERIVED_QUOTE_LINE_ID ,
NSOL.SK_SO_LINE_ID_INT  AS DERIVED_ORDER_LINE_ID         ,
POS.SALES_ORDER_LINE_KEY          ,
POS.MATCHING_MTHD_FOR_TAGGING_NAME,
POS.SRC_RPTD_REVENUE_SRC_CD       ,
POS.SALES_MOTION_CD               ,
POS.CONFIDENCE_FLG                ,
POS.SPLIT_PCT AS DV_ALLOCATION_PCT  ,
CURRENT_TIMESTAMP(0) AS START_TV_DTM  , -- CHECK
POS.PO_EXISTS_FLG                 ,
POS.PO_DISTRI_EXISTS_FLG          ,
POS.PO_PRDT_EXISTS_FLG            ,
POS.QUOTE_EXISTS_FLG              ,
POS.QUOTE_DISTRI_EXISTS_FLG       ,
POS.QUOTE_PRDT_EXISTS_FLG         ,
POS.MULTIPLE_SALES_MOTION_FLG     ,
POS.LINKED_TO_MULTIPLE_SOL_FLG AS MULTIPLE_MATCH_FLG ,
POS.SOFTWARE_OR_SERVICE_FLG AS APPROVED_ERP_LINKAGE_FLG ,
POS.SALES_MOTION_TIMING_CD        
FROM $$STGDB.WI_POS_TRX_LN_RET_LN RETLN

/*INNER JOIN $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL
ON RETLN.TRANS_ID = EL.TRANS_ID
AND EL.EDW_UPDATE_DTM  > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS  WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB')
*/
INNER JOIN $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV POS
ON RETLN.RU_BK_ORIG_POS_TRANSACTION_ID = POS.BK_POS_TRANSACTION_ID_INT
AND POS.END_TV_DTM = '3500-01-01 00:00:00'
AND SOFTWARE_FLG='N'

INNER JOIN $$SERVICEVWDB.N_SERVICE_QUOTE_LINE NSQ
ON NSQ.SERVICE_QUOTE_LINE_KEY  =  POS.SERVICE_QUOTE_LINE_KEY
AND POS.SRC_RPTD_QUOTE_NUM = NSQ.BK_QUOTE_NUM

INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
ON POS.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
AND CAST(NSOL.END_TV_DATETIME AS DATE) =  CAST( '3500-01-01' AS DATE) 
AND NSOL.SS_CODE = 'CG'

WHERE NOT EXISTS (SELECT BK_POS_TRANSACTION_ID_INT FROM $$STGDB.WI_POS_TRX_RET_LN_OVWRTN_ORG_LN ORG_LN WHERE ORG_LN.BK_POS_TRANSACTION_ID_INT = RETLN.TRANS_ID)
AND EXISTS (SELECT 1 FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL WHERE RETLN.TRANS_ID = EL.TRANS_ID AND EL.SS_CODE = 'CG' AND EL.END_TV_DTM='3500-01-01 00:00:00'
			AND EL.EDW_UPDATE_DTM  > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS  WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB'))


Post SQL : 



Target15 Name : WI_POS_TRX_RET_LN_OVWRTN_ORG_LN1


Pre SQL : 



Post SQL : 



Source16 Name : SQ_WI_POS_TRX_RET_LN_OVWRTN_ORG_LN


Pre SQL : 



SQL Query : 
SELECT 
BK_POS_TRANSACTION_ID_INT
,SK_UNIQUE_ID_INT
,TRANSACTION_ID_INT
,DSV_BOOKINGS_FLG
,ACTIVE_FLG
,SRC_CREATED_DTM
,DV_SRC_CREATED_DT
,SRC_CREATED_PROCESS_NAME
,SRC_UPDATED_DTM
,DV_SRC_UPDATED_DT
,SRC_UPDATED_PROCESS_NAME
,DERIVED_QUOTE_NUMBER
,DERIVED_QUOTE_LINE_ID
,DERIVED_ORDER_LINE_ID
,SALES_ORDER_LINE_KEY
,MATCHING_MTHD_FOR_TAGGING_NAME
,SRC_RPTD_REVENUE_SRC_CD
,SALES_MOTION_CD
,CONFIDENCE_FLG
,DV_ALLOCATION_PCT
,START_TV_DTM
,PO_EXISTS_FLG
,PO_DISTRI_EXISTS_FLG
,PO_PRDT_EXISTS_FLG
,QUOTE_EXISTS_FLG
,QUOTE_DISTRI_EXISTS_FLG
,QUOTE_PRDT_EXISTS_FLG
,MULTIPLE_SALES_MOTION_FLG
,MULTIPLE_MATCH_FLG
,APPROVED_ERP_LINKAGE_FLG
,SALES_MOTION_TIMING_CD
 , 'N' AS MANUAL_OVERRIDE_ROLE
, -999  AS REQUESTING_CSCO_WRKR_PRTY_KEY
, 'UNKNOWN' AS SLS_MTN_CORRECTION_CASE_NUM
, 'UNKNOWN' AS SLS_MTN_CORRECTION_CMNT
, 'UNKNOWN' AS  SLS_MTN_CORRECTION_REASON_DESC
FROM $$STGDB.WI_POS_TRX_RET_LN_OVWRTN_ORG_LN


Post SQL : 



Target16 Name : WI_WIPS_SER_POS_DTLS_MULTI_PUB4


Pre SQL : 
/* DELETE FROM $$STGDB.WI_WIPS_SER_POS_DTLS_MULTI_PUB; */


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_WIPS_SER_POS_DTLS_MULTI_PUB;','D');

UPDATE  DJS
FROM $$ETLVWDB.DW_JOB_STREAMS DJS
,(SELECT MAX(EDW_UPDATE_DTM) AS EDW_UPDATE_DTM FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL )SRC
SET LAST_EXTRACT_DATE=COALESCE(SRC.EDW_UPDATE_DTM,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)) )
WHERE JOB_STREAM_ID='wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB';

UPDATE CTL
FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
(SELECT MAX(EDW_UPDATE_DTM) AS EDW_UPDATE_DTM FROM $$SLSORDVWDB.N_ATTR_PRDT_NEW_RNWL_ACV_TV ) SRC
SET LAST_EXTRACT_DATE = COALESCE(SRC.EDW_UPDATE_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)) )
WHERE JOB_STREAM_ID  = 'wf_WI_WIPS_SER_POS_DTLS_MULTI_PUB'
AND TABLE_NAME = 'WI_OPL_DSV_POS_RTR_INCR_DATA';