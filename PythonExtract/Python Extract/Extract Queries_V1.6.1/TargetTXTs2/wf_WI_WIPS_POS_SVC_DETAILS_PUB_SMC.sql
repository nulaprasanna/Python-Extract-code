


Source1 Name : SQ_EL_SALES_ORDER_TRAD_SERV


Pre SQL : 



SQL Query : 
SELECT SK_SO_LINE_ID_INT,NSOL.SALES_ORDER_KEY,SALES_ORDER_LINE_KEY,PRODUCT_KEY,SALES_MOTION_CD,BK_SO_SRC_NAME AS BK_SO_SOURCE_NAME,NSOL.SS_CODE
	 FROM $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
         /*INNER JOIN $$SLSORDVWDB.N_SALES_ORDER NSO
   ON NSO.SALES_ORDER_KEY = NSOL.SALES_ORDER_KEY*/
       WHERE NSOL.SS_CODE = 'CG'
       AND NSOL.END_TV_DATETIME = '3500-01-01 00:00:00'
    AND (EXISTS (
    SELECT 1 FROM ( SELECT 
    P.ITEM_KEY
    FROM
    $$COMREFVWDB.N_PRODUCT P
    INNER JOIN 
    $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.ITEM_KEY = SFH.ITEM_KEY
    WHERE P.PRDT_SETUP_CLASSIFICATION_CD <> 'SOFTWARE' --EXCLUDE SW
    AND SFH.BK_SERVICE_CATEGORY_ID = 'TECHNICAL SUPPORT SERVICES' 
    AND SFH.BK_ALLOCATED_SERVC_GROUP_ID NOT IN
    ( 'AS CORE' ,  'AS SUBSCRIPTION' , 'FOCUSED TECHNICAL SUPPORT SERVICES' , 'CLOUD MANAGED SERVICES' )--EXCLUDE FTS,CMS,AS
    AND RU_BK_SERVICE_PROD_SUBGROUP_ID NOT IN (SELECT BK_PRDT_SUBGROUP_ID FROM ( SELECT * FROM $$SERVICEVWDB.N_GENERIC_SVC_PRDT_ATTR WHERE BK_GSP_ATTR_NAME = 'SW SERVICE CATEGORY' ) WI ) --EXCLUDE SWSS
    ) WI
     WHERE NSOL.PRODUCT_KEY = WI.ITEM_KEY
         )
   OR (NSOL.BK_SO_SRC_NAME IN ('Manual', 'Copy' ) AND NSOL.PRODUCT_KEY NOT IN ( SELECT P.ITEM_KEY FROM
      $$COMREFVWDB.N_PRODUCT P
      INNER JOIN 
      $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.ITEM_KEY = SFH.ITEM_KEY
      AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  IN ( 'AS FIXED', 'AS TRANSACTION')/*, 'CLOUD MANAGED SERVICES' ) EXCLUDE CMS IN SOWB*/
     )
                 )
     )


Post SQL : 



Target1 Name : EL_SALES_ORDER_TRAD_SERV1


Pre SQL : 
DELETE FROM $$ETLVWDB.EL_SALES_ORDER_TRAD_SERV;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$ETLVWDB','EL_SALES_ORDER_TRAD_SERV;','D');


Source2 Name : SQ_ST_WIPS_POS_SVC_DETAILS_PUB


Pre SQL : 



SQL Query : 
SELECT 
TRANS_ID                      
,ID                            
,BOOKING_FLAG                  
,SERVICE_TYPE                  
,ACTIVE_FLAG                   
,CREATED_DATE                  
,CREATED_BY                    
,LAST_UPDATED_DATE             
,LAST_UPDATED_BY               
,ACTION_CODE                   
,DERIVED_QUOTE_NUMBER          
,DERIVED_CONTRACT_NUMBER       
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,MATCH_TYPE                    
,ORDER_HEADER_ID               
,QUOTE_HEADER_ID               
,REVENUE_SOURCE_CODE           
,CONFIDENCE_FLAG               
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG 
,MULTIPLE_MATCH_FLG       
,APPROVED_ERP_LINKAGE_FLG 
,ORDER_IDENTIFIER
,'N' AS NET_PRICE_FLG
FROM $$STGDB.ST_WIPS_POS_SVC_DETAILS_PUB


Post SQL : 



Target2 Name : WI_WIPS_POS_SVC_DETAILS_PUB_INT


Pre SQL : 
DELETE FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_INT;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_WIPS_POS_SVC_DETAILS_PUB_INT;','D');


Source3 Name : SQ_ST_RTNR_SMC_ALLOCATION_POS_EN


Pre SQL : 



SQL Query : 
SELECT 
	MT.SALES_ORDER_LINE_KEY,
	MT.SALES_MOTION_CD,
	COALESCE(MT.DV_ALLOCATION_PCT/ NULLIF(MT.SUM_ALLOC_PCT,0),0) AS DV_ALLOCATION_PCT
	FROM
	(
	SELECT 
	SALES_ORDER_LINE_KEY,
	SALES_MOTION_CD,
	DV_ALLOCATION_PCT  ,
	SUM(DV_ALLOCATION_PCT ) OVER (PARTITION BY SALES_ORDER_LINE_KEY)  AS SUM_ALLOC_PCT
	FROM  $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION
	WHERE 
	END_TV_DTM='3500-01-01 00:00:00'
	AND SALES_MOTION_CD  IN ('NEW','RENEW','N/A')
	AND SALES_ORDER_LINE_KEY IN (
	SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION O 
	WHERE O.END_TV_DTM='3500-01-01 00:00:00' AND SALES_MOTION_CD  IN ('NEW','RENEW','N/A')
AND EXISTS (
					SEL 1 FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION I 
					WHERE  I.END_TV_DTM='3500-01-01 00:00:00' AND I.SALES_ORDER_LINE_KEY = O.SALES_ORDER_LINE_KEY 
					AND SALES_MOTION_CD  NOT IN ('NEW','RENEW','N/A')
				)
	)
	)MT

	UNION
	
	SELECT 
	MT.SALES_ORDER_LINE_KEY,
	MT.SALES_MOTION_CD,
COALESCE(MT.DV_ALLOCATION_PCT/ NULLIF(MT.SUM_ALLOC_PCT,0),0)  AS DV_ALLOCATION_PCT
	FROM
	(
	SELECT 
	SALES_ORDER_LINE_KEY,
	SALES_MOTION_CD,
	DV_ALLOCATION_PCT  ,
	SUM(DV_ALLOCATION_PCT ) OVER (PARTITION BY SALES_ORDER_LINE_KEY)  AS SUM_ALLOC_PCT
	FROM  $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION
	WHERE 
	END_TV_DTM='3500-01-01 00:00:00'
	--AND SALES_MOTION_CD  IN ('NEW','RENEW')
	AND SALES_ORDER_LINE_KEY IN (
	SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION O 
	WHERE O.END_TV_DTM='3500-01-01 00:00:00' AND SALES_MOTION_CD  IN ('NEW','RENEW','N/A')
	AND NOT EXISTS (
					SEL 1 FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION I 
					WHERE  I.END_TV_DTM='3500-01-01 00:00:00' AND I.SALES_ORDER_LINE_KEY = O.SALES_ORDER_LINE_KEY 
					AND SALES_MOTION_CD  NOT IN ('NEW','RENEW','N/A')
					--GROUP BY SALES_ORDER_LINE_KEY HAVING COUNT(*)>1
					)
	)
	) MT


Post SQL : 



Target3 Name : ST_RTNR_SMC_ALLOCATION_POS_EN1


Pre SQL : 
DELETE FROM $$STGDB.ST_RTNR_SMC_ALLOCATION_POS_EN ALL;


Post SQL : 
INSERT INTO $$STGDB.ST_RTNR_SMC_ALLOCATION_POS_EN
SELECT 
MT.SALES_ORDER_LINE_KEY,
MT.SALES_MOTION_CD,
COALESCE(MT.DV_ALLOCATION_PCT/ NULLIF(MT.SUM_ALLOC_PCT,0),0)  AS DV_ALLOCATION_PCT
FROM
(
SELECT 
SALES_ORDER_LINE_KEY,
SALES_MOTION_CD,
DV_ALLOCATION_PCT  ,
SUM(DV_ALLOCATION_PCT ) OVER (PARTITION BY SALES_ORDER_LINE_KEY)  AS SUM_ALLOC_PCT
FROM  $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION O
WHERE 
END_TV_DTM='3500-01-01 00:00:00'
AND SALES_MOTION_CD  NOT IN ('NEW','RENEW','N/A')
AND SALES_ORDER_LINE_KEY IN (
SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION O 
WHERE O.END_TV_DTM='3500-01-01 00:00:00' AND SALES_MOTION_CD  NOT IN ('NEW','RENEW','N/A')
AND NOT EXISTS (SEL 1 FROM $$STGDB.ST_RTNR_SMC_ALLOCATION_POS_EN I
WHERE O.SALES_ORDER_LINE_KEY = I.SALES_ORDER_LINE_KEY
)
) 
)MT;


Source4 Name : SQ_ST_WIPS_POS_SVC_DETAILS_PUB11


Pre SQL : 



SQL Query : 
SELECT 
TRANS_ID
,ID                            
,BOOKING_FLAG                  
,SERVICE_TYPE                  
,ACTIVE_FLAG                   
,CREATED_DATE                  
,CREATED_BY                    
,LAST_UPDATED_DATE             
,LAST_UPDATED_BY               
,ACTION_CODE                   
,DERIVED_QUOTE_NUMBER          
,DERIVED_CONTRACT_NUMBER       
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,MATCH_TYPE                    
,ORDER_HEADER_ID               
,QUOTE_HEADER_ID               
,REVENUE_SOURCE_CODE           
,CONFIDENCE_FLAG               
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG    
,MULTIPLE_MATCH_FLG       
,APPROVED_ERP_LINKAGE_FLG
,ORDER_IDENTIFIER 
,NET_PRICE_FLG
FROM (
SELECT 
EL.TRANS_ID                      
,EL.ID                            
,EL.BOOKING_FLAG                  
,EL.SERVICE_TYPE                  
,EL.ACTIVE_FLAG                   
,EL.CREATED_DATE                  
,EL.CREATED_BY                    
,CURRENT_TIMESTAMP(0) AS LAST_UPDATED_DATE             
,EL.LAST_UPDATED_BY               
,EL.ACTION_CODE                   
,EL.DERIVED_QUOTE_NUMBER          
,EL.DERIVED_CONTRACT_NUMBER       
,EL.DERIVED_QUOTE_LINE_ID         
,EL.DERIVED_ORDER_LINE_ID         
,EL.MATCH_TYPE                    
,EL.ORDER_HEADER_ID               
,EL.QUOTE_HEADER_ID               
,EL.REVENUE_SOURCE_CODE           
,EL.CONFIDENCE_FLAG               
,EL.PO_EXISTS_FLG                 
,EL.PO_DISTRI_EXISTS_FLG          
,EL.PO_PRDT_EXISTS_FLG            
,EL.QUOTE_EXISTS_FLG              
,EL.QUOTE_DISTRI_EXISTS_FLG       
,EL.QUOTE_PRDT_EXISTS_FLG         
,EL.MULTIPLE_SALES_MOTION_FLG    
,EL.MULTIPLE_MATCH_FLG       
,EL.APPROVED_ERP_LINKAGE_FLG
,EL.ORDER_IDENTIFIER
,EL.NET_PRICE_FLG
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL  
WHERE EL.END_TV_DTM='3500-01-01 00:00:00' AND EL.TRANS_ID 
IN (SELECT BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE WHERE NET_PRICE_FLG = 'Y' AND REVENUE_SOURCE_CODE IN ('NEW', 'RENEW')
	 AND EDW_UPDATE_DTM > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES  WHERE JOB_STREAM_ID='wf_WI_WIPS_POS_SVC_DETAILS_PUB_SMC' AND 
TABLE_NAME = 'N_BKG_POS_TRANSACTION_LINE')
	AND NOT EXISTS (SELECT 1 FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_INT WI WHERE  WI.TRANS_ID=EL.TRANS_ID)	
	)

UNION ALL

SELECT EL.TRANS_ID                      
,EL.ID                            
,EL.BOOKING_FLAG                  
,EL.SERVICE_TYPE                  
,EL.ACTIVE_FLAG                   
,EL.CREATED_DATE                  
,EL.CREATED_BY                    
,CURRENT_TIMESTAMP(0) AS LAST_UPDATED_DATE             
,EL.LAST_UPDATED_BY               
,EL.ACTION_CODE                   
,EL.DERIVED_QUOTE_NUMBER          
,EL.DERIVED_CONTRACT_NUMBER       
,EL.DERIVED_QUOTE_LINE_ID         
,EL.DERIVED_ORDER_LINE_ID         
,EL.MATCH_TYPE                    
,EL.ORDER_HEADER_ID               
,EL.QUOTE_HEADER_ID               
,EL.REVENUE_SOURCE_CODE           
,EL.CONFIDENCE_FLAG               
,EL.PO_EXISTS_FLG                 
,EL.PO_DISTRI_EXISTS_FLG          
,EL.PO_PRDT_EXISTS_FLG            
,EL.QUOTE_EXISTS_FLG              
,EL.QUOTE_DISTRI_EXISTS_FLG       
,EL.QUOTE_PRDT_EXISTS_FLG         
,EL.MULTIPLE_SALES_MOTION_FLG    
,EL.MULTIPLE_MATCH_FLG       
,EL.APPROVED_ERP_LINKAGE_FLG
,EL.ORDER_IDENTIFIER 
,EL.NET_PRICE_FLG
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL
WHERE EL.NET_PRICE_FLG = 'Y' AND END_TV_DTM = '3500-01-01 00:00:00'
AND EXISTS (SELECT 1 FROM $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE POS_BKG WHERE POS_BKG.BK_POS_TRANSACTION_ID_INT = EL.TRANS_ID 
					AND POS_BKG.NET_PRICE_FLG = 'N'
			AND EDW_UPDATE_DTM > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES  WHERE JOB_STREAM_ID='wf_WI_WIPS_POS_SVC_DETAILS_PUB_SMC'
		 AND TABLE_NAME = 'N_BKG_POS_TRANSACTION_LINE') 
			)
			)WI
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28, 29, 30


Post SQL : 



Target4 Name : WI_WIPS_POS_SVC_DETAILS_PUB_INT11


Pre SQL : 



Post SQL : 



Source5 Name : SQ_ST_WIPS_POS_SVC_DETAILS_PUB1


Pre SQL : 



SQL Query : 
SELECT 
EL.TRANS_ID                      
,EL.ID                            
,EL.BOOKING_FLAG                  
,EL.SERVICE_TYPE                  
,EL.ACTIVE_FLAG                   
,EL.CREATED_DATE                  
,EL.CREATED_BY                    
,CURRENT_TIMESTAMP(0) AS LAST_UPDATED_DATE             
,EL.LAST_UPDATED_BY               
,EL.ACTION_CODE                   
,EL.DERIVED_QUOTE_NUMBER          
,EL.DERIVED_CONTRACT_NUMBER       
,EL.DERIVED_QUOTE_LINE_ID         
,EL.DERIVED_ORDER_LINE_ID         
,EL.MATCH_TYPE                    
,EL.ORDER_HEADER_ID               
,EL.QUOTE_HEADER_ID               
,EL.REVENUE_SOURCE_CODE           
,EL.CONFIDENCE_FLAG               
,EL.PO_EXISTS_FLG                 
,EL.PO_DISTRI_EXISTS_FLG          
,EL.PO_PRDT_EXISTS_FLG            
,EL.QUOTE_EXISTS_FLG              
,EL.QUOTE_DISTRI_EXISTS_FLG       
,EL.QUOTE_PRDT_EXISTS_FLG         
,EL.MULTIPLE_SALES_MOTION_FLG    
,EL.MULTIPLE_MATCH_FLG       
,EL.APPROVED_ERP_LINKAGE_FLG
,EL.ORDER_IDENTIFIER
,EL.NET_PRICE_FLG
FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL  WHERE EL.END_TV_DTM='3500-01-01 00:00:00' AND EL.TRANS_ID IN (
SELECT TRANS_ID FROM $$ETLVWDB.EL_POS_TRX_LN_AS_NEW_OR_RNWL_ALL EL1 WHERE EL1.END_TV_DTM='3500-01-01 00:00:00' AND EL1.SALES_ORDER_LINE_KEY IN 
(SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION MTS
WHERE MTS.END_TV_DTM = '3500-01-01 00:00:00' AND MTS.EDW_UPDATE_DTM >  (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.DW_JOB_STREAMS  WHERE JOB_STREAM_ID='wf_WI_WIPS_POS_SVC_DETAILS_PUB_SMC'))
)AND NOT EXISTS ( SELECT 1 FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_INT WI WHERE  WI.TRANS_ID=EL.TRANS_ID)
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28, 29,30


Post SQL : 



Target5 Name : WI_WIPS_POS_SVC_DETAILS_PUB_INT1


Pre SQL : 



Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_WIPS_POS_SVC_DETAILS_PUB_INT;','D');


Source6 Name : SQ_WI_WIPS_POS_SVC_DETAILS_PUB_AMT


Pre SQL : 



SQL Query : 
SELECT 
TRANS_ID                      
,ID                            
,BOOKING_FLAG                  
,SERVICE_TYPE                  
,ACTIVE_FLAG                   
,CREATED_DATE                  
,CREATED_BY                    
,LAST_UPDATED_DATE             
,LAST_UPDATED_BY               
,ACTION_CODE                   
,DERIVED_QUOTE_NUMBER          
,DERIVED_CONTRACT_NUMBER       
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,MATCH_TYPE                    
,ORDER_HEADER_ID               
,QUOTE_HEADER_ID               
,REVENUE_SOURCE_CODE           
,CONFIDENCE_FLAG               
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG     
,SALES_ORDER_LINE_KEY
,SALES_MOTION_CD
,SOL_AMOUNT
,SUM_SOL_AMOUNT
,COALESCE(SOL_AMOUNT/NULLIF(SUM_SOL_AMOUNT,0),0) AS SOL_ALLOCATION_PCT
,MULTIPLE_MATCH_FLG
,APPROVED_ERP_LINKAGE_FLG
,SALES_MOTION_TIMING_CD
,ORDER_IDENTIFIER
,SS_CODE
,NET_PRICE_FLG
FROM (
SELECT 
TRANS_ID                      
,ID                            
,BOOKING_FLAG                  
,SERVICE_TYPE                  
,ACTIVE_FLAG                   
,CREATED_DATE                  
,CREATED_BY                    
,LAST_UPDATED_DATE             
,LAST_UPDATED_BY               
,ACTION_CODE                   
,DERIVED_QUOTE_NUMBER          
,DERIVED_CONTRACT_NUMBER       
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,MATCH_TYPE                    
,ORDER_HEADER_ID               
,QUOTE_HEADER_ID               
,ST.REVENUE_SOURCE_CODE           
,CONFIDENCE_FLAG               
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG         
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG     
,NSOL.SALES_ORDER_LINE_KEY
--,NSOL1.SALES_MOTION_CD
  ,CASE 
   WHEN NSOL.RTNR_ELGIBILITY_FLG = 'N' THEN
   'N/A'
   ELSE 'UNKNOWN'
  END AS  SALES_MOTION_CD
,ABS(CAST(COALESCE(NSOL.UNIT_SALE_PRICE,0)*COALESCE(NSOL.ORDER_QUANTITY,0) AS DECIMAL(18,6))) AS SOL_AMOUNT
,ABS(CAST(SUM(COALESCE(NSOL.UNIT_SALE_PRICE,0)*COALESCE(NSOL.ORDER_QUANTITY,0))  OVER (PARTITION BY TRANS_ID) AS DECIMAL(18,6))) SUM_SOL_AMOUNT
,MULTIPLE_MATCH_FLG
,APPROVED_ERP_LINKAGE_FLG
,CASE WHEN NSOL.SALES_MOTION_CD = 'RENEW' THEN    NSOL.SALES_MOTION_TIMING_NAME   ELSE 'UNKNOWN'   END   AS SALES_MOTION_TIMING_CD 
,ORDER_IDENTIFIER
, NSOL.SS_CODE AS SS_CODE
,COALESCE(POS.NET_PRICE_FLG, 'N') AS NET_PRICE_FLG

FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_INT ST
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
ON ST.DERIVED_ORDER_LINE_ID= CASE WHEN NSOL.SS_CODE = 'CG' THEN NSOL.SK_SO_LINE_ID_INT ELSE NSOL.SK_OPL_LINE_ID_INT END
AND CAST(NSOL.END_TV_DATETIME AS DATE) =  CAST( '3500-01-01' AS DATE) 
AND NSOL.SS_CODE IN ('CG', 'OPL')

LEFT JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE POS
ON POS.BK_POS_TRANSACTION_ID_INT = ST.TRANS_ID
AND POS.NET_PRICE_FLG = 'Y' 
AND POS.REVENUE_SOURCE_CODE  IN ('NEW', 'RENEW') 

/*LEFT JOIN $$ETLVWDB.EL_SALES_ORDER_TRAD_SERV NSOL1
ON ST.DERIVED_ORDER_LINE_ID = NSOL1.SK_SO_LINE_ID_INT*/ ) STG


Post SQL : 



Target6 Name : WI_WIPS_POS_SVC_DETAILS_PUB_AMT1


Pre SQL : 
DELETE FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_AMT;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_WIPS_POS_SVC_DETAILS_PUB_AMT;','D');


Source7 Name : SQ_WI_WIPS_POS_SVC_DETAILS_PUB_SMC


Pre SQL : 



SQL Query : 
SELECT  
TRANS_ID                      
,ID                            
,BOOKING_FLAG                  
,SERVICE_TYPE                  
,ACTIVE_FLAG                   
,CREATED_DATE                  
,CREATED_BY                    
,LAST_UPDATED_DATE             
,LAST_UPDATED_BY               
,ACTION_CODE                   
,DERIVED_QUOTE_NUMBER          
,DERIVED_CONTRACT_NUMBER       
,DERIVED_QUOTE_LINE_ID         
,DERIVED_ORDER_LINE_ID         
,MATCH_TYPE                    
,ORDER_HEADER_ID               
,QUOTE_HEADER_ID               
,SOL.REVENUE_SOURCE_CODE           
,CONFIDENCE_FLAG               
,PO_EXISTS_FLG                 
,PO_DISTRI_EXISTS_FLG          
,PO_PRDT_EXISTS_FLG            
,QUOTE_EXISTS_FLG              
,QUOTE_DISTRI_EXISTS_FLG       
,QUOTE_PRDT_EXISTS_FLG         
,MULTIPLE_SALES_MOTION_FLG     
,SOL.SALES_ORDER_LINE_KEY
,CASE WHEN POS.BK_POS_TRANSACTION_ID_INT IS NOT NULL THEN POS.REVENUE_SOURCE_CODE
	 WHEN MT_SMC.SALES_ORDER_LINE_KEY IS NOT NULL THEN MT_SMC.SALES_MOTION_CD /* Added as part of RTR */
     ELSE COALESCE(SOL.SALES_MOTION_CD , 'UNKNOWN') 
     END AS SALES_MOTION_CD
,SOL_ALLOCATION_PCT
,COALESCE (MT_SMC.DV_ALLOCATION_PCT,1.000000) AS RTR_ALLOCATION_PCT
,CASE WHEN MT_SMC.SALES_ORDER_LINE_KEY IS NOT NULL  /* Added as part of RTR */
      THEN COALESCE (COALESCE (MT_SMC.DV_ALLOCATION_PCT,1.000000)*SOL_ALLOCATION_PCT,1.000000) 
      ELSE SOL_ALLOCATION_PCT END DV_ALLOCATION_PCT
,MULTIPLE_MATCH_FLG
,APPROVED_ERP_LINKAGE_FLG
/*,CASE WHEN MT_SMC.SALES_ORDER_LINE_KEY IS NOT NULL 
      THEN COALESCE(MT_SMC.SALES_MOTION_TIMING_CD, 'UNKNOWN')
      ELSE COALESCE(SOL.SALES_MOTION_TIMING_CD , 'UNKNOWN') 
     END AS SALES_MOTION_TIMING_CD*/
,CASE WHEN MT_SMC.SALES_ORDER_LINE_KEY IS NOT NULL  /* Added as part of RTR */
      THEN COALESCE(MT_SMC.SALES_MOTION_TIMING_CD, 'UNKNOWN')
      WHEN TTS.SALES_ORDER_LINE_KEY IS NOT NULL 
	  THEN COALESCE(TTS.SALES_MOTION_TIMING_CD, 'UNKNOWN' )
	  ELSE 'UNKNOWN'
     END AS SALES_MOTION_TIMING_CD
,ORDER_IDENTIFIER
,SS_CODE
,COALESCE(POS.NET_PRICE_FLG, 'N') NET_PRICE_FLG
FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_AMT  SOL

LEFT JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE POS
ON POS.BK_POS_TRANSACTION_ID_INT = SOL.TRANS_ID
AND POS.NET_PRICE_FLG = 'Y' 
AND POS.REVENUE_SOURCE_CODE IN ('NEW', 'RENEW') 

 LEFT JOIN 
/*$$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION MT_SMC
 ON SOL.SALES_ORDER_LINE_KEY = MT_SMC.SALES_ORDER_LINE_KEY
 AND MT_SMC.END_TV_DTM = '3500-01-01 00:00:00'*/
(SEL
   POS.SALES_ORDER_LINE_KEY,
   POS.SALES_MOTION_CD,
   POS.DV_ALLOCATION_PCT,
   MT_SMC.SALES_MOTION_TIMING_CD
   FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION MT_SMC
   INNER JOIN $$STGDB.ST_RTNR_SMC_ALLOCATION_POS_EN POS
  ON POS.SALES_ORDER_LINE_KEY = MT_SMC.SALES_ORDER_LINE_KEY
  AND POS.SALES_MOTION_CD = MT_SMC.SALES_MOTION_CD
  AND MT_SMC.END_TV_DTM = '3500-01-01 00:00:00'                           
  ) MT_SMC
  ON SOL.SALES_ORDER_LINE_KEY = MT_SMC.SALES_ORDER_LINE_KEY
LEFT JOIN $$STGDB.WI_TTS_SOWB_SOL_LINES TTS
           ON SOL.SALES_ORDER_LINE_KEY = TTS.SALES_ORDER_LINE_KEY


Post SQL : 



Target7 Name : WI_WIPS_POS_SVC_DETAILS_PUB_SMC


Pre SQL : 
DELETE FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_SMC;


Post SQL : 
DELETE FROM  $$STGDB.WI_SOL_WITH_ZERO_SPLIT;

INSERT INTO $$STGDB.WI_SOL_WITH_ZERO_SPLIT
SELECT TRANS_ID, 1.000000 AS DV_ALLOCATION_PCT, COUNT(*) CNT_REC FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_SMC WHERE SALES_ORDER_LINE_KEY > 0 
GROUP BY 1
HAVING SUM(DV_ALLOCATION_PCT) = 0;

UPDATE PUB_SMC
FROM $$STGDB.WI_WIPS_POS_SVC_DETAILS_PUB_SMC PUB_SMC,
$$STGDB.WI_SOL_WITH_ZERO_SPLIT ZERO_SPLT
SET DV_ALLOCATION_PCT = ZERO_SPLT.DV_ALLOCATION_PCT/CNT_REC
WHERE PUB_SMC.TRANS_ID = ZERO_SPLT.TRANS_ID;

COLLECT STATISTICS COLUMN (TRANS_ID) ON $$STGDB.WI_SOL_WITH_ZERO_SPLIT;

CALL COLLECT_STATS_WRAP('$$STGDB','WI_WIPS_POS_SVC_DETAILS_PUB_SMC;','D');


UPDATE DJS
FROM
$$ETLVWDB.DW_JOB_STREAMS DJS
,(SELECT MAX(EDW_UPDATE_DTM) AS EDW_UPDATE_DTM FROM $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION )SRC
SET LAST_EXTRACT_DATE=COALESCE(SRC.EDW_UPDATE_DTM,CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)) )
WHERE JOB_STREAM_ID='wf_WI_WIPS_POS_SVC_DETAILS_PUB_SMC';

UPDATE CTL
FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
(SELECT MAX(EDW_UPDATE_DTM)  AS EDW_UPDATE_DTM FROM $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE ) SRC
SET LAST_EXTRACT_DATE = COALESCE(SRC.EDW_UPDATE_DTM, CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)) )
WHERE JOB_STREAM_ID  = 'wf_WI_WIPS_POS_SVC_DETAILS_PUB_SMC'
AND TABLE_NAME = 'N_BKG_POS_TRANSACTION_LINE';