


Source1 Name : SQ_W_BOOKINGS_MEASURE1


Pre SQL : 
/*---commenting as part of acv Aug release*/
/* ICPM  START */
/*
UPDATE BM FROM 
$$WORKDB.W_BOOKINGS_MEASURE BM , 
$$SLSORDVWDB.N_SALES_ORDER_LINE_TV SOL
SET 
RU_SERVICE_CONTRACT_START_DTM = SOL.RU_SERVICE_CONTRACT_START_DTM,
RU_SERVICE_CONTRACT_END_DTM = SOL.RU_SERVICE_CONTRACT_END_DTM,
DV_CONTRACT_DURATION = ROUND(CAST((CAST(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )),
DV_ANNUALIZED_FLG = (CASE  WHEN SOL.RU_SERVICE_CONTRACT_END_DTM IS NULL THEN 'Y' 
                           WHEN SOL.RU_SERVICE_CONTRACT_START_DTM IS NULL THEN 'Y' 
                           WHEN SOL.RU_SERVICE_CONTRACT_END_DTM < SOL.RU_SERVICE_CONTRACT_START_DTM THEN 'Y' 
						   /* Commented and added below ROUND statement as part of Oct 6th release
						   WHEN (CAST (((CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)) ) AS INTEGER) -365) > 0 THEN  'N' 
						   */
                        /*   WHEN ROUND(CAST((CAST(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) ))>12 then 'N'
ELSE 'Y' END),
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER = USER                                             
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY 
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP'); /* Removed XAAS as part of Q3FY18 goponnus */

 /* XaaS Q2FY18 goponnus */

 /*UPDATE BM FROM 
 $$WORKDB.W_BOOKINGS_MEASURE BM , 
 $$SLSORDVWDB.N_SALES_ORDER_LINE SOL,
 $$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX TRX
 SET 
 RU_SERVICE_CONTRACT_START_DTM = SOL.RU_SERVICE_CONTRACT_START_DTM,
 RU_SERVICE_CONTRACT_END_DTM = SOL.RU_SERVICE_CONTRACT_END_DTM,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER = USER                                             
 WHERE BM.SERVICE_FLG = 'Y' 
 AND BM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY=TRX.SO_SBSCRPTN_ITM_SLS_TRX_KEY
 AND SOL.SALES_ORDER_LINE_KEY=TRX.MINOR_LN_EXAAS_SUBSCR_SOL_KEY
 AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS');

/* Added as  part of  ICPM FY16Q1 start */
/*ERP USING CONTRACT TERM*/

/*UPDATE BM FROM 
$$WORKDB.W_BOOKINGS_MEASURE BM , 
$$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV  SOL
SET 
DV_CONTRACT_DURATION = ROUND(RU_SRVC_CNTRCT_DRTN_MNTHS_CNT),
DV_ANNUALIZED_FLG =CASE WHEN ROUND(RU_SRVC_CNTRCT_DRTN_MNTHS_CNT) >12 THEN  'N'  ELSE 'Y' END,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY 
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP') /* Removed XAAS as part of Q3FY18 goponnus */
/*AND DV_CONTRACT_DURATION IS NULL;

/* Added as part of ICPM FY16Q1 end  */

/*UPDATE BM FROM 
$$WORKDB.W_BOOKINGS_MEASURE BM 
SET 
DV_ANNUALIZED_US_NET_AMT= (CASE WHEN DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                    WHEN DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                    ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
DV_MULTIYEAR_US_NET_AMT =   DD_COMP_US_NET_PRICE_AMOUNT -  (CASE  WHEN DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
                                                                     WHEN DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / DV_CONTRACT_DURATION ) * 12
                                                                     ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) ,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y'
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL) 
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP') ; *//* Removed XAAS as part of Q3FY18 goponnus */


SQL Query : 
SELECT 
  W_BOOKINGS_MEASURE.BOOKINGS_MEASURE_KEY,
  W_BOOKINGS_MEASURE.SALES_ORDER_KEY,
  W_BOOKINGS_MEASURE.SALES_ORDER_LINE_KEY,
  W_BOOKINGS_MEASURE.PRODUCT_KEY,
  W_BOOKINGS_MEASURE.AR_TRX_LINE_KEY,
  W_BOOKINGS_MEASURE.AR_TRX_KEY,
  W_BOOKINGS_MEASURE.END_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.BILL_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.SHIP_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.SOLD_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.DV_END_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.TRANSACTION_DATETIME,
  W_BOOKINGS_MEASURE.SALES_TERRITORY_KEY,
  W_BOOKINGS_MEASURE.SALES_REP_NUMBER,
  W_BOOKINGS_MEASURE.BOOKINGS_PROCESS_DATE,
  W_BOOKINGS_MEASURE.DV_FISCAL_YEAR_MTH_NUMBER_INT,
  W_BOOKINGS_MEASURE.BK_POS_TRANSACTION_ID_INT,
  W_BOOKINGS_MEASURE.BK_SALES_ADJ_LINE_NUMBER_INT,
  W_BOOKINGS_MEASURE.BK_SALES_ADJ_NUMBER_INT,
  W_BOOKINGS_MEASURE.ADJUSTMENT_TYPE_CODE,
  W_BOOKINGS_MEASURE.SALES_CHANNEL_CODE,
  W_BOOKINGS_MEASURE.SALES_CREDIT_TYPE_CODE,
  W_BOOKINGS_MEASURE.IDE_ADJUSTMENT_CODE,
  W_BOOKINGS_MEASURE.ADJUSTMENT_CODE,
  W_BOOKINGS_MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE,
  W_BOOKINGS_MEASURE.CANCELLED_FLG,
  W_BOOKINGS_MEASURE.CANCEL_CODE ,
  W_BOOKINGS_MEASURE.ACQUISITION_FLG,
  W_BOOKINGS_MEASURE.FORWARD_REVERSE_FLG,
  W_BOOKINGS_MEASURE.DISTRIBUTOR_OFFSET_FLG,
  W_BOOKINGS_MEASURE.CORPORATE_BOOKINGS_FLG,
  W_BOOKINGS_MEASURE.OVERLAY_FLG,
  W_BOOKINGS_MEASURE.IC_REVENUE_FLG,
  W_BOOKINGS_MEASURE.CHARGES_FLG,
  W_BOOKINGS_MEASURE.SALESREP_FLG,
  W_BOOKINGS_MEASURE.MISC_FLG,
  W_BOOKINGS_MEASURE.SERVICE_FLG,
  W_BOOKINGS_MEASURE.INTERNATIONAL_DEMO_FLG,
  W_BOOKINGS_MEASURE.REPLACEMENT_DEMO_FLG,
  W_BOOKINGS_MEASURE.REVENUE_FLG,
  W_BOOKINGS_MEASURE.RMA_FLG,
  W_BOOKINGS_MEASURE.TRADE_IN_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_NET_PRICE_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_LIST_PRICE_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DD_EXTENDED_QUANTITY,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_NET_PRICE_AMT,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_LIST_PRICE_AMT,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DD_EXTENDED_HOLD_QUANTITY,
  W_BOOKINGS_MEASURE.DD_COMP_US_STANDARD_PRICE_AMT,
  W_BOOKINGS_MEASURE.WIPS_ORIGINATOR_ID_INT,
  W_BOOKINGS_MEASURE.EDW_CREATE_USER,
  W_BOOKINGS_MEASURE.EDW_UPDATE_USER,
  W_BOOKINGS_MEASURE.EDW_CREATE_DATETIME,
  W_BOOKINGS_MEASURE.EDW_UPDATE_DATETIME,  
  W_BOOKINGS_MEASURE.CONVERSION_RT, 
  W_BOOKINGS_MEASURE.CONVERSION_DT,
  W_BOOKINGS_MEASURE.DD_BK_SO_NUMBER_INT, 
  W_BOOKINGS_MEASURE.DD_CISCO_BOOKED_DTM, 
  W_BOOKINGS_MEASURE.DD_SALES_ORDER_CATEGORY_TYPE,
  W_BOOKINGS_MEASURE.DD_SLS_ORD_OPERATING_UNIT_CD, 
  W_BOOKINGS_MEASURE.DD_TRX_CURRENCY_CD,
  W_BOOKINGS_MEASURE.DV_TRANSACTION_TYPE,
  W_BOOKINGS_MEASURE.ADJUSTMENT_DESCR_KEY,
  W_BOOKINGS_MEASURE.DV_TRANSACTION_NAME,   /**R9**/
  W_BOOKINGS_MEASURE.BOOKINGS_SPLIT_PCT ,    /**R9**/
  W_BOOKINGS_MEASURE.DV_REVENUE_RECOGNITION_FLG,   /* Added as part of true demand bkgs definition*/    
  W_BOOKINGS_MEASURE.DV_NET_SPREAD_FLG ,     /* Added as part of true demand bkgs definition*/  
  W_BOOKINGS_MEASURE.REVENUE_TRANSFER_KEY,  /* vetalla : Added as part of Q3FY14 RTE*/
  /* Added as part of OFFER ATTRIBUTION Q3FY14*/
  W_BOOKINGS_MEASURE.DV_ATTRIBUTION_CD,
  W_BOOKINGS_MEASURE.DV_PRODUCT_KEY,
  W_BOOKINGS_MEASURE.DV_SALES_ORDER_LINE_KEY,
  W_BOOKINGS_MEASURE.SK_OFFER_ATTRIBUTION_ID_INT ,
  W_BOOKINGS_MEASURE.DV_FMV_FLG , /* Q1FY15 FMV */
  W_BOOKINGS_MEASURE.RU_SERVICE_CONTRACT_START_DTM     ,
  W_BOOKINGS_MEASURE.RU_SERVICE_CONTRACT_END_DTM       ,
  W_BOOKINGS_MEASURE.DV_CONTRACT_DURATION              ,
  W_BOOKINGS_MEASURE.DV_ANNUALIZED_FLG                 ,
  W_BOOKINGS_MEASURE.DV_ANNUALIZED_US_NET_AMT          ,
  W_BOOKINGS_MEASURE.DV_MULTIYEAR_US_NET_AMT ,
  W_BOOKINGS_MEASURE.SO_SBSCRPTN_ITM_SLS_TRX_KEY, /* Added as part of XAAS-Q3FY15 */
  W_BOOKINGS_MEASURE.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY, /* Added as part of OA-Q1FY16 */
  W_BOOKINGS_MEASURE.FISCAL_YEAR_QUARTER_NUMBER_INT, /* ADDED AS PART OF sep 27TH CD RELEASE */
  W_BOOKINGS_MEASURE.DV_AR_TRX_LINE_KEY,/*Added as part of Q3FY16-Offer Attribution*/
  W_BOOKINGS_MEASURE.XAAS_OFFER_ATRBTN_REV_LINE_KEY, /*Added as part of Q3FY16-Offer Attribution*/
  COALESCE(W_BOOKINGS_MEASURE.DV_DEAL_ID,'-9999') AS DV_DEAL_ID, /*Added as part of Q4FY16-XAAS changes */
  W_BOOKINGS_MEASURE.TSS_COUNTRY_FACTOR_KEY,
  W_BOOKINGS_MEASURE.DV_BKG_GROSS_MGN_AMOUNT,
  W_BOOKINGS_MEASURE.DV_BGM_FX_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DV_FX_NET_PRICE_AMT /*BGM Changes Q1FY17*/
  /*Added the below columns as part of RO project for Q3FY17 */
  ,W_BOOKINGS_MEASURE.XCAT_FLG
  ,W_BOOKINGS_MEASURE.BK_OFFER_TYPE_NAME
  ,W_BOOKINGS_MEASURE.RECURRING_OFFER_FLG
  ,W_BOOKINGS_MEASURE.ELA_FLG
 ,W_BOOKINGS_MEASURE.DV_LOCAL_EXTND_LIST_PRICE_AMT 
  ,W_BOOKINGS_MEASURE.LOCAL_UNIT_LIST_PRICE_AMT     
  ,W_BOOKINGS_MEASURE.DV_UNIT_LIST_PRICE_USD_AMT    
  ,W_BOOKINGS_MEASURE.DV_ORDER_VALUE_USD_AMOUNT   
  ,W_BOOKINGS_MEASURE.DV_MTHLY_RCR_REV_TRXL_USD_AMT 
  ,W_BOOKINGS_MEASURE.DV_INCRML_MTHY_RCRR_RV_USD_AMT
  ,W_BOOKINGS_MEASURE.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT
  ,W_BOOKINGS_MEASURE.DV_INCRML_ANNL_RCRR_RV_USD_AMT
 ,CAST (TRIM(W_BOOKINGS_MEASURE.PRODUCT_KEY) || '~' || TRIM(COALESCE(W_BOOKINGS_MEASURE.DV_PRODUCT_KEY,-999)) ||  '~' || TRIM(W_BOOKINGS_MEASURE.SALES_ORDER_KEY) ||  '~' || TRIM(COALESCE(W_BOOKINGS_MEASURE.SK_OFFER_ATTRIBUTION_ID_INT,-9999))AS VARCHAR(70)) 
  AS DV_RECURRING_OFFER_CD /*  added as part of June29th2017 */
  ,W_BOOKINGS_MEASURE.DV_PURCHASE_ADJ_DSCNT_USD_AMT /*Q1FY18*/
  ,W_BOOKINGS_MEASURE.DV_BGM_NON_STANDARD_COST_AMT /*added as part product BGM - Q1FY18 release */
 ,W_BOOKINGS_MEASURE.POB_TYPE_CD
  ,W_BOOKINGS_MEASURE.NRS_TRANSITION_FLG /*Added as part of NRS PI3 changes*/
  ,W_BOOKINGS_MEASURE.SALES_MOTION_CD /* Added as part of Oct - 2017 rel */ 
  ,W_BOOKINGS_MEASURE.SUMMARY_QUOTE_FLG /* Added as part of Oct - 2017 rel */
 ,W_BOOKINGS_MEASURE.DV_BKG_REBATE_AMT
,W_BOOKINGS_MEASURE.DV_FX_REBATE_PRICE_AMT 
,W_BOOKINGS_MEASURE.SK_SALES_MOTION_ATTRIB_KEY /* Added as part of SALES FY18 May12Rel */
,W_BOOKINGS_MEASURE.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,W_BOOKINGS_MEASURE.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,W_BOOKINGS_MEASURE.DV_ENRICHED_CONTRACT_DURATION
,W_BOOKINGS_MEASURE.DV_ENRICHMENT_RULE_DESC
/* added as part of 10th March release*/
,W_BOOKINGS_MEASURE.ENRICHED_END_CUSTOMER_KEY
,W_BOOKINGS_MEASURE.DV_ENRICHED_UNK_END_CUST_RULE_DESC
, -999 AS ACCRUED_REV_TRX_KEY
, -999 AS MERAKI_REV_TRX_KEY
, W_BOOKINGS_MEASURE.ACQUISITION_ORDER_ORIGIN_CD
,W_BOOKINGS_MEASURE.ACQUISITION_ROLE
,W_BOOKINGS_MEASURE.DD_COMP_US_ORIG_LIST_PRICE
,W_BOOKINGS_MEASURE.DD_COMP_US_ORIG_EXT_LIST_PRICE
,W_BOOKINGS_MEASURE.BOOKINGS_POLICY_CD
,W_BOOKINGS_MEASURE.DV_INV_DTM
,W_BOOKINGS_MEASURE.SOURCE_REP_ANNUAL_USD_AMT
,W_BOOKINGS_MEASURE.DV_COMPENSATION_DTM
,W_BOOKINGS_MEASURE.BUNDLE_TYPE_CD /*ADDED AS PART OF NOAH SCOPE */
,W_BOOKINGS_MEASURE.DV_SOURCE_ORDER_NUM_INT/*ADDED AS PART OF CBM*/
/*ADDED AS PART OF SFP Q4FY21 REL*/
,W_BOOKINGS_MEASURE.DV_COMP_US_GROSS_BKG_AMOUNT
  FROM
  $$WORKDB.W_BOOKINGS_MEASURE 
  WHERE W_BOOKINGS_MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP', 'XAAS')  /* Added as part of BKGS CARBT changes Q3FY15 QWN */


Post SQL : 



Target1 Name : N_BOOKINGS_MEASURE


Pre SQL : 
---ERP :
/*ADDED AS PART OF EDW_FY19 NOV08REL CR11701*/
UPDATE WBM
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
(SELECT 
NBM.BOOKINGS_MEASURE_KEY
,NBM.BOOKINGS_PROCESS_DATE
,NBM.BKGS_MEASURE_TRANS_TYPE_CODE
,NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,NBM.DV_ENRICHED_CONTRACT_DURATION
,NBM.DV_ENRICHMENT_RULE_DESC
,NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT
,NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT
,NBM.ENRICHED_END_CUSTOMER_KEY
,NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC
,NBM.DV_END_CUSTOMER_KEY
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
ON (WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
    AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
	AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE)
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP' /* modified as part of Sub Metrics FY19 May2Rel R18396*/ 
)NBM
SET
DV_ENRICHED_SERVICE_CONTRACT_START_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=NBM.DV_ENRICHED_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=NBM.DV_ENRICHMENT_RULE_DESC,
DV_MTHLY_RCR_REV_TRXL_USD_AMT=NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT,
DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT,
ENRICHED_END_CUSTOMER_KEY=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN WBM.DV_END_CUSTOMER_KEY ELSE NBM.ENRICHED_END_CUSTOMER_KEY END,/*Modified as part of PR18952*/
DV_ENRICHED_UNK_END_CUST_RULE_DESC=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN 'Bookings End Customer' ELSE NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC END/*Modified as part of PR18952*/
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE;

--- XAAS :(Removing MRR,ARR column from the update) /* Added as part of Sub Metrics FY19 May2Rel R18396*/ 

UPDATE WBM
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
(SELECT 
NBM.BOOKINGS_MEASURE_KEY
,NBM.BOOKINGS_PROCESS_DATE
,NBM.BKGS_MEASURE_TRANS_TYPE_CODE
,NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,NBM.DV_ENRICHED_CONTRACT_DURATION
,NBM.DV_ENRICHMENT_RULE_DESC
,NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT
,NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT
,NBM.ENRICHED_END_CUSTOMER_KEY
,NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC
,NBM.DV_END_CUSTOMER_KEY
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
ON (WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
    AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
	AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE)
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
)NBM
SET
DV_ENRICHED_SERVICE_CONTRACT_START_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=NBM.DV_ENRICHED_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=NBM.DV_ENRICHMENT_RULE_DESC,
ENRICHED_END_CUSTOMER_KEY=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN WBM.DV_END_CUSTOMER_KEY ELSE NBM.ENRICHED_END_CUSTOMER_KEY END,/*Modified as part of PR18952*/
DV_ENRICHED_UNK_END_CUST_RULE_DESC=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN 'Bookings End Customer' ELSE NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC END/*Modified as part of PR18952*/
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
AND WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE;

DELETE FROM $$STGDB.ST_NBM_1_23;

INSERT INTO $$STGDB.ST_NBM_1_23
SELECT NBM.* FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$WORKDB.W_BOOKINGS_MEASURE WBM,
$$STGDB.ST_NBM_EC_RET_DEL_EVR  NBM_EVR
WHERE 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND
NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND
NBM.BOOKINGS_MEASURE_KEY = NBM_EVR.BOOKINGS_MEASURE_KEY
;
DELETE NBM
FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$WORKDB.W_BOOKINGS_MEASURE WBM,
$$STGDB.ST_NBM_EC_RET_DEL_EVR  NBM_EVR
WHERE 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND
NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND
NBM.BOOKINGS_MEASURE_KEY = NBM_EVR.BOOKINGS_MEASURE_KEY
;

DELETE FROM $$STGDB.WI_W_NBM_PROCESS_DATES ALL;

INSERT INTO $$STGDB.WI_W_NBM_PROCESS_DATES
SELECT WBM.BOOKINGS_PROCESS_DATE
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP', 'XAAS')
GROUP BY 1;

/*this is to update edw_create_datetime for older transactions*/

UPDATE WBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$WORKDB.W_BOOKINGS_MEASURE WBM,
	$$STGDB.WI_W_NBM_PROCESS_DATES PD
SET     EDW_CREATE_DATETIME=NBM.EDW_CREATE_DATETIME
WHERE 	NBM.BOOKINGS_PROCESS_DATE = PD.PROCESS_DATE  
	AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP', 'XAAS')  /*Added as part of BKGS CARBT changes Q3FY15 QWN*/;

DELETE NBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$WORKDB.W_BOOKINGS_MEASURE WBM,
	$$STGDB.WI_W_NBM_PROCESS_DATES PD
WHERE 	NBM.BOOKINGS_PROCESS_DATE = PD.PROCESS_DATE  
	AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP', 'XAAS')  /*Added as part of BKGS CARBT changes Q3FY15 QWN*/;


Post SQL : 
/* Added by sivayarl as part of SAASONLINE changes*/

UPDATE NBM FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX XAAS
SET
DV_SOURCE_ORDER_NUM_INT=Cast(XAAS.WEB_ORDER_ID AS DECIMAL(18,0)),
EDW_UPDATE_DATETIME=Current_Timestamp(0)
WHERE
NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY=XAAS.SO_SBSCRPTN_ITM_SLS_TRX_KEY
AND NBM.ACQUISITION_ORDER_ORIGIN_CD IN 'SAASONLINE'
AND NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY>0
AND DV_FISCAL_YEAR_MTH_NUMBER_INT>=202101
AND Coalesce(DV_SOURCE_ORDER_NUM_INT,-999)<0;

UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,$$SLSORDVWDB.N_SALES_ORDER NSO
SET DD_CISCO_BOOKED_DTM=NSO.RU_CISCO_BOOKED_DATETIME,
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0) 
WHERE NBM.SALES_ORDER_KEY=NSO.SALES_ORDER_KEY
AND NBM.DD_CISCO_BOOKED_DTM IS NULL
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='ERP' /* MODIFIED FROM ERP, AR TO ERP AS PART OF BKGS CARBT CHANGES Q3FY15 QWN*/
AND NSO.SALES_ORDER_KEY NOT IN (-8888,-9999)
AND NSO.RU_CISCO_BOOKED_DATETIME IS NOT NULL;

DELETE WI
FROM $$STGDB.WI_DRVD_ERP_CURR_CC_NBM WI,
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
WHERE /*WI.PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE   AND */
WI.DRVD_NCR_BKG_TRX_KEY = NBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'; 

/*UPDATE NBM
FROM
$$SLSORDVWDB.N_BOOKINGS_MEASURE  NBM,
$$STGDB.ST_NBM_EC_RET_DEL_EVR  NBM_EVR
SET 
BOOKINGS_PROCESS_DATE = NBM_EVR.BOOKINGS_PROCESS_DATE
WHERE
NBM.BOOKINGS_MEASURE_KEY = NBM_EVR.BOOKINGS_MEASURE_KEY
AND
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = NBM_EVR.BKGS_MEASURE_TRANS_TYPE_CODE
AND
NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
; */ /*commented as per OPS request as part of CHG0454670 */

/* ICPM  START */
/*---commenting as part of acv Aug release*/
/*DELETE FROM $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ERP;

INSERT INTO $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ERP
SELECT
BOOKINGS_MEASURE_KEY,
BKGS_MEASURE_TRANS_TYPE_CODE,
BOOKINGS_PROCESS_DATE,
RU_SERVICE_CONTRACT_START_DTM,
RU_SERVICE_CONTRACT_END_DTM,
DV_CONTRACT_DURATION,
DV_ANNUALIZED_FLG,
DV_ANNUALIZED_US_NET_AMT,
DV_MULTIYEAR_US_NET_AMT
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE BM
WHERE BM.SERVICE_FLG = 'Y'
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP') /* Removed XAAS as part of Q3FY18 goponnus */
/*AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL);

COLLECT STATS ON  $$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ERP;

UPDATE BM FROM
$$SLSORDVWDB.N_BOOKINGS_MEASURE BM,
$$SLSORDVWDB.N_SALES_ORDER_LINE_TV SOL,
$$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ERP WI
SET
RU_SERVICE_CONTRACT_START_DTM = SOL.RU_SERVICE_CONTRACT_START_DTM,
RU_SERVICE_CONTRACT_END_DTM = SOL.RU_SERVICE_CONTRACT_END_DTM,
DV_CONTRACT_DURATION = ROUND(CAST((CAST(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6))),
DV_ANNUALIZED_FLG = (CASE  WHEN SOL.RU_SERVICE_CONTRACT_END_DTM IS NULL THEN 'Y'
WHEN SOL.RU_SERVICE_CONTRACT_START_DTM IS NULL THEN 'Y'
WHEN SOL.RU_SERVICE_CONTRACT_END_DTM < SOL.RU_SERVICE_CONTRACT_START_DTM THEN 'Y'
/* Changing as part of FY20 Oct 6th Release
WHEN ROUND((CAST (((CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)) ) AS INTEGER) -365) > 0 THEN  'N'*/
/*	WHEN ROUND(CAST((CAST(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )) > 12 
THEN 'N' ELSE 'Y' END)  ,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0),
EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP') /* Removed XAAS as part of Q3FY18 goponnus */
/*AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
AND (
(( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE))  IS NULL  AND  ( CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) - CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE))  IS NOT  NULL)
OR  ((CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE))  IS NOT NULL  AND  ( CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) - CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE))  IS   NULL)
OR ((CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE)- CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE))   <>(CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)))
)
/*AND (WI.RU_SERVICE_CONTRACT_START_DTM<>SOL.RU_SERVICE_CONTRACT_START_DTM  OR WI.RU_SERVICE_CONTRACT_END_DTM<>SOL.RU_SERVICE_CONTRACT_END_DTM)*/
;  
/* ADDED AS PART OF ICPM FY16Q1 START */
/*ERP UPADTE USING CONTRACT TERM*/
/*UPDATE BM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE BM , 
$$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV  SOL,
$$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ERP WI
SET 
DV_CONTRACT_DURATION=ROUND(RU_SRVC_CNTRCT_DRTN_MNTHS_CNT),  /* Rounded as part of the ACV PILOT Sep 26th Release */ 
/*DV_ANNUALIZED_FLG=CASE WHEN ROUND(RU_SRVC_CNTRCT_DRTN_MNTHS_CNT) >12 THEN  'N'  ELSE 'Y' END,
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY 
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP') /* Removed XAAS as part of Q3FY18 goponnus */
/*AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
/*AND (WI.DV_CONTRACT_DURATION<>SOL.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT )*/
/*AND (
(WI.DV_CONTRACT_DURATION IS NULL AND SOL.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT IS NOT NULL  )
OR (WI.DV_CONTRACT_DURATION IS NOT NULL AND SOL.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT IS  NULL  )
OR (WI.DV_CONTRACT_DURATION <>SOL.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT  )
)
AND
(CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ))  IS NULL 
/*AND BM.DV_CONTRACT_DURATION IS NULL*/;

/* ADDED AS PART OF ICPM FY16Q1 END  */

/*UPDATE BM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE BM ,
$$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ERP WI
SET 
                                   
DV_ANNUALIZED_US_NET_AMT = (CASE WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
DV_MULTIYEAR_US_NET_AMT =   DD_COMP_US_NET_PRICE_AMOUNT -  (CASE  WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) ,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP') /* Removed XAAS as part of Q3FY18 goponnus */
/*AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
AND (  ( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NULL  AND  ( CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NOT  NULL   )
OR    ( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NOT NULL  AND  ( CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS   NULL   )
OR    ( ( CAST(WI.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(WI.RU_SERVICE_CONTRACT_START_DTM AS DATE ))   <>(CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE )- CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ) ))
)
/*AND (WI.RU_SERVICE_CONTRACT_START_DTM<>BM.RU_SERVICE_CONTRACT_START_DTM OR*/ /*AND*/ /*WI.RU_SERVICE_CONTRACT_END_DTM<>BM.RU_SERVICE_CONTRACT_END_DTM)*/
/*AND ( CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  IS NOT  NULL 
;

UPDATE BM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE BM ,
$$STGDB.WI_OPN_MTH_SRVC_ANNUALIZED_ERP WI
SET 
DV_ANNUALIZED_US_NET_AMT = (CASE WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
DV_MULTIYEAR_US_NET_AMT =   DD_COMP_US_NET_PRICE_AMOUNT -  (CASE  WHEN BM.DV_ANNUALIZED_FLG = 'Y' THEN DD_COMP_US_NET_PRICE_AMOUNT
WHEN BM.DV_ANNUALIZED_FLG = 'N' THEN ( DD_COMP_US_NET_PRICE_AMOUNT / BM.DV_CONTRACT_DURATION ) * 12
ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) ,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER=USER
WHERE BM.SERVICE_FLG = 'Y' 
AND BM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND BM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP') /* Removed XAAS as part of Q3FY18 goponnus */
/*AND (WI.BOOKINGS_MEASURE_KEY= BM.BOOKINGS_MEASURE_KEY AND WI.BKGS_MEASURE_TRANS_TYPE_CODE= BM.BKGS_MEASURE_TRANS_TYPE_CODE AND WI.BOOKINGS_PROCESS_DATE= BM.BOOKINGS_PROCESS_DATE)
AND (
(WI.DV_CONTRACT_DURATION IS NULL AND BM.DV_CONTRACT_DURATION IS NOT NULL  )
OR (WI.DV_CONTRACT_DURATION IS NOT NULL AND BM.DV_CONTRACT_DURATION IS  NULL  )
OR (WI.DV_CONTRACT_DURATION <>BM.DV_CONTRACT_DURATION   )
)
/*AND (WI.DV_CONTRACT_DURATION<>BM.DV_CONTRACT_DURATION )*/
/*AND (CAST(BM.RU_SERVICE_CONTRACT_END_DTM AS DATE )-CAST(BM.RU_SERVICE_CONTRACT_START_DTM AS DATE))IS NULL 
;

/*ICPM END*/

/*KGUVVALA - SOT XAAS - ADDED FOR Q1FY17 LP*/
UPDATE NBM   
FROM    $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,   (
SELECT  NBM.BOOKINGS_MEASURE_KEY,
            NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
            NBM.BOOKINGS_PROCESS_DATE,
               
                      
              COALESCE(      CASE            WHEN  NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='AR'  THEN NSL.BK_DEAL_ID                                                       
                WHEN    NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP' THEN NSL.BK_DEAL_ID                                                       
                WHEN    NBM.BKGS_MEASURE_TRANS_TYPE_CODE= 'SLS_ADJ'  THEN COALESCE(SALES_ADJ_LINE.BK_DEAL_ID,'-9999')                                                        
                WHEN    NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS_ADJ'  THEN NPTL.BK_DEAL_ID                                                       
                WHEN    NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'   THEN COALESCE(NPTL.BK_DEAL_ID,NBTL.BK_DEAL_ID)                                    
                WHEN  NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'  THEN NXSSIS.BK_DEAL_ID                                                                                      
            END ,
            CAST(-9999 AS VARCHAR(50)))  AS DV_DEAL_ID   
    FROM    $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM   
    LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER NSL   
        ON NBM.SALES_ORDER_KEY=NSL.SALES_ORDER_KEY   
    LEFT JOIN $$SLSORDVWDB.N_POS_TRANSACTION_LINE NPTL   
        ON NBM.BK_POS_TRANSACTION_ID_INT=NPTL.BK_POS_TRANSACTION_ID_INT   
    LEFT JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE NBTL   
        ON NBM.BK_POS_TRANSACTION_ID_INT=NBTL.BK_POS_TRANSACTION_ID_INT   
    LEFT JOIN (
        SELECT  NDL.BK_DEAL_ID BK_DEAL_ID,
                SALES_ADJ.BK_SALES_ADJ_LINE_NUMBER_INT BK_SALES_ADJ_LINE_NUMBER_INT   
        FROM    $$SLSORDVWDB.N_SALES_ADJUSTMENT_LINE SALES_ADJ 
        INNER JOIN $$SLSORDVWDB.N_DEAL NDL   
            ON TRIM(SALES_ADJ.IDE_IFC_IDE_REPORTED_DEAL_ID)=NDL.BK_DEAL_ID
            WHERE BK_SALES_ADJ_LINE_NUMBER_INT IN (SEL BOOKINGS_MEASURE_KEY FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE
            WHERE BOOKINGS_PROCESS_DATE IN (
        SELECT  CALENDAR_DATE
        FROM    $$STGDB.ST_N_BKGS_FISCAL_MTH_MAX ST, $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FISCAL
        WHERE ST.DV_FISCAL_YEAR_MTH_NUMBER_INT=FISCAL.FISCAL_YEAR_MONTH_INT )   )
        )  SALES_ADJ_LINE   
        ON NBM.BOOKINGS_MEASURE_KEY=SALES_ADJ_LINE.BK_SALES_ADJ_LINE_NUMBER_INT   
    LEFT JOIN $$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX  NXSSIS   
        ON NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY=NXSSIS.SO_SBSCRPTN_ITM_SLS_TRX_KEY  
    WHERE    NBM.BOOKINGS_PROCESS_DATE IN (
        SELECT  CALENDAR_DATE
        FROM    $$STGDB.ST_N_BKGS_FISCAL_MTH_MAX ST, $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FISCAL
        WHERE ST.DV_FISCAL_YEAR_MTH_NUMBER_INT=FISCAL.FISCAL_YEAR_MONTH_INT ) ) AS TEMP   
SET    DV_DEAL_ID=TEMP.DV_DEAL_ID,
          EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)        
WHERE   NBM.BOOKINGS_MEASURE_KEY=TEMP.BOOKINGS_MEASURE_KEY   
    AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = TEMP.BKGS_MEASURE_TRANS_TYPE_CODE   
    AND NBM.BOOKINGS_PROCESS_DATE=TEMP.BOOKINGS_PROCESS_DATE   
    AND NBM.DV_DEAL_ID <> TEMP.DV_DEAL_ID;

/* Q4FY18 RTR ATTRIBUTION: SALES-DI@CISCO.COM */

--performance changes 11Mar2021
CREATE MULTISET VOLATILE TABLE INTERIM_NBM AS ( 
SELECT   NBM.BOOKINGS_MEASURE_KEY,  NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
            NBM.BOOKINGS_PROCESS_DATE, NBM.DV_SALES_ORDER_LINE_KEY, NBM.SK_OFFER_ATTRIBUTION_ID_INT,
            NBM.DV_ATTRIBUTION_CD  , NBM.SK_SALES_MOTION_ATTRIB_KEY , NBM.DV_PRODUCT_KEY
    FROM    $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM  
    WHERE   NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP' 
        AND NBM.BOOKINGS_PROCESS_DATE >= '2015-07-31'  
        AND NOT EXISTS ( 
        SELECT  1 
        FROM    $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG 
        WHERE   NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY 
            AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE 
            AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE )   
            )  
WITH DATA 
PRIMARY INDEX ( BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE,BOOKINGS_PROCESS_DATE )  
    ON COMMIT PRESERVE ROWS; 

COLLECT STATISTICS 
            COLUMN ( BOOKINGS_MEASURE_KEY,BKGS_MEASURE_TRANS_TYPE_CODE,BOOKINGS_PROCESS_DATE ) ,
            COLUMN ( DV_SALES_ORDER_LINE_KEY),
            COLUMN ( DV_ATTRIBUTION_CD),
            COLUMN ( DV_PRODUCT_KEY),
            COLUMN ( SK_OFFER_ATTRIBUTION_ID_INT)
                ON INTERIM_NBM ;


CREATE MULTISET VOLATILE TABLE NBM_SK_SALES_MOTION_UPD AS ( 
SELECT   NBM.BOOKINGS_MEASURE_KEY,  NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
            NBM.BOOKINGS_PROCESS_DATE, NBM.DV_SALES_ORDER_LINE_KEY, NBM.SK_OFFER_ATTRIBUTION_ID_INT,
            CASE 
                WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN ENTERPRISE_SKU_PRDT_KEY  
                ELSE DV_PRODUCT_KEY  
            END DD_PRODUCT_KEY , NBM.SK_SALES_MOTION_ATTRIB_KEY 
    FROM    INTERIM_NBM NBM  
    INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL 
        ON  NSOL.SALES_ORDER_LINE_KEY=NBM.DV_SALES_ORDER_LINE_KEY         
        AND NSOL.SALES_ORDER_LINE_KEY > 0         --AND NSOL.RTNR_ELGIBILITY_FLG <> 'N' 
        AND NSOL.SS_CODE = 'CG' 
    LEFT JOIN $$SLSORDVWDB.N_SOL_OFFER_ATTRIBUTION OA  
        ON NBM.SK_OFFER_ATTRIBUTION_ID_INT = OA.SK_OFFER_ATTRIBUTION_ID_INT    
        AND OA.SK_OFFER_ATTRIBUTION_ID_INT > 0         
    INNER JOIN ( 
        SELECT  SALES_ORDER_LINE_KEY AS DV_SALES_ORDER_LINE_KEY,DV_ENTERPRISE_INV_SKU_ID  
        FROM    $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT 
        WHERE   DV_TRX_TYPE = 'ERP'  --AND AS_TS_CODE <> 'UNK' 
            AND MT.SK_OFFER_ATTRIBUTION_ID_INT < 0 
            AND END_TV_DTM = '3500-01-01 00:00:00' 
            AND EXISTS ( 
            SELECT  1 
            FROM    $$WORKDB.W_BOOKINGS_MEASURE WBM 
            WHERE   WBM.DV_SALES_ORDER_LINE_KEY = MT.SALES_ORDER_LINE_KEY 
                AND BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'                         ) 
        GROUP BY 1,2 
        UNION   
        SELECT  SALES_ORDER_LINE_KEY DV_SALES_ORDER_LINE_KEY, DV_ENTERPRISE_INV_SKU_ID  
        FROM    $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION  
        WHERE   DV_TRX_TYPE = 'ERP'  
            AND END_TV_DTM = '3500-01-01 00:00:00' --AND AS_TS_CODE = 'UNK'
            AND SK_OFFER_ATTRIBUTION_ID_INT < 0   
            AND EDW_UPDATE_DTM > ( 
            SELECT  LAST_EXTRACT_DATE 
            FROM    $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES                              
            WHERE   JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE' 
                AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_ERP' ) ) WI 
        ON NBM.DV_SALES_ORDER_LINE_KEY = WI.DV_SALES_ORDER_LINE_KEY  
        AND  CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN OA.ENTERPRISE_SKU_PRDT_KEY  
                ELSE NBM.DV_PRODUCT_KEY END  = WI.DV_ENTERPRISE_INV_SKU_ID  
                            )  
WITH DATA 
PRIMARY INDEX ( BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE,BOOKINGS_PROCESS_DATE )  
    ON COMMIT PRESERVE ROWS; 


COLLECT STATS ON NBM_SK_SALES_MOTION_UPD INDEX ( BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE, BOOKINGS_PROCESS_DATE ) ; 
COLLECT STATS ON NBM_SK_SALES_MOTION_UPD COLUMN ( DV_SALES_ORDER_LINE_KEY , DD_PRODUCT_KEY )  ;  
COLLECT STATS ON NBM_SK_SALES_MOTION_UPD COLUMN ( SK_SALES_MOTION_ATTRIB_KEY )  ;

/*FOR UPDATING NON-OA*/
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, 
( SELECT WI.BOOKINGS_MEASURE_KEY, WI.BOOKINGS_PROCESS_DATE, WI.BKGS_MEASURE_TRANS_TYPE_CODE, 
COALESCE(SMC.SK_SALES_MOTION_ATTRIB_KEY,-999) SK_SALES_MOTION_ATTRIB_KEY
FROM NBM_SK_SALES_MOTION_UPD WI
LEFT JOIN $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION SMC /*MADE LEFT JOIN IN ORDER TO FIX THE DIFFERENCE AMONG MULTIPLE SERVICE CATEGORIES*/
ON WI.DV_SALES_ORDER_LINE_KEY = SMC.DV_TRANSACTION_ID
AND WI.DD_PRODUCT_KEY = SMC.DV_ENTERPRISE_INV_SKU_ID
AND SMC.END_TV_DTM = '3500-01-01 00:00:00'
AND SMC.DV_TRX_TYPE = 'ERP' 
--AND SMC.AS_TS_CODE='UNK' /* ERP and XAAS Bookings post sql SMA key update change - for accommodating OA ID grain  - Day1 FY21 */
AND SMC.SK_OFFER_ATTRIBUTION_ID_INT < 0
/* WHERE  WI.SK_SALES_MOTION_ATTRIB_KEY <> COALESCE(SMC.SK_SALES_MOTION_ATTRIB_KEY,-999) */ /* commented as part of ACV Q4FY21 Aug*/
GROUP BY 1,2,3,4
) WI
SET SK_SALES_MOTION_ATTRIB_KEY = WI.SK_SALES_MOTION_ATTRIB_KEY,
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
AND  NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE  
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE;
--AND NBM.SK_SALES_MOTION_ATTRIB_KEY < 0; /* Added to Qualify Bundle, Standalone and Offset Records */ 

/*UPDATE NBM FOR OA*/
--Performance changes 11Mar2021
CREATE MULTISET VOLATILE TABLE NBM_SK_SALES_MOTION_UPD_OA 
AS
 ( 
    SELECT   
NBM.BOOKINGS_MEASURE_KEY, 
 NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
            NBM.BOOKINGS_PROCESS_DATE,
 NBM.DV_SALES_ORDER_LINE_KEY, 
            CASE 
                WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN NBM.SK_OFFER_ATTRIBUTION_ID_INT 
                ELSE -9999 
            END SK_OFFER_ATTRIBUTION_ID_INT, 
            CASE 
                WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN ENTERPRISE_SKU_PRDT_KEY  
                ELSE DV_PRODUCT_KEY  
            END DD_PRODUCT_KEY ,
 NBM.SK_SALES_MOTION_ATTRIB_KEY 
    FROM    INTERIM_NBM NBM    
    INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL            
        ON NSOL.SALES_ORDER_LINE_KEY = NBM.DV_SALES_ORDER_LINE_KEY                         
        AND NSOL.SALES_ORDER_LINE_KEY > 0                            
 --AND NSOL.RTNR_ELGIBILITY_FLG <> 'N' 
        AND NSOL.SS_CODE = 'CG' 
    LEFT JOIN $$SLSORDVWDB.N_SOL_OFFER_ATTRIBUTION OA  
        ON NBM.SK_OFFER_ATTRIBUTION_ID_INT = OA.SK_OFFER_ATTRIBUTION_ID_INT    
        AND OA.SK_OFFER_ATTRIBUTION_ID_INT > 0         
        
    INNER JOIN ( 
        SELECT  SALES_ORDER_LINE_KEY AS DV_SALES_ORDER_LINE_KEY,DV_ENTERPRISE_INV_SKU_ID  
        FROM    $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT 
        WHERE   DV_TRX_TYPE = 'ERP'  
--AND AS_TS_CODE <> 'UNK' 
            AND MT.SK_OFFER_ATTRIBUTION_ID_INT > 0  
            AND END_TV_DTM = '3500-01-01 00:00:00' 
            AND EXISTS ( 
            SELECT  1 
            FROM    $$WORKDB.W_BOOKINGS_MEASURE WBM 
            WHERE   WBM.DV_SALES_ORDER_LINE_KEY = MT.SALES_ORDER_LINE_KEY 
                AND BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
                         ) 
        GROUP BY 1,2                                                            
        UNION   
        SELECT  SALES_ORDER_LINE_KEY DV_SALES_ORDER_LINE_KEY,
DV_ENTERPRISE_INV_SKU_ID 
        FROM    $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION  
        WHERE   DV_TRX_TYPE = 'ERP' 
 --AND AS_TS_CODE <> 'UNK'
            AND SK_OFFER_ATTRIBUTION_ID_INT > 0  
            AND END_TV_DTM = '3500-01-01 00:00:00' 
            AND EDW_UPDATE_DTM > ( 
            SELECT  LAST_EXTRACT_DATE 
            FROM    $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES                              
            WHERE   JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE' 
                AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_ERP' )
 ) WI 
                
        ON NBM.DV_SALES_ORDER_LINE_KEY = WI.DV_SALES_ORDER_LINE_KEY  
        AND CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN OA.ENTERPRISE_SKU_PRDT_KEY  
                ELSE NBM.DV_PRODUCT_KEY END  = WI.DV_ENTERPRISE_INV_SKU_ID 
            )  
WITH DATA  
PRIMARY INDEX ( BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE, BOOKINGS_PROCESS_DATE )  
    ON COMMIT PRESERVE ROWS;


COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_OA INDEX ( BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE, BOOKINGS_PROCESS_DATE ) ; 
COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_OA COLUMN ( DV_SALES_ORDER_LINE_KEY , DD_PRODUCT_KEY )  ;  
COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_OA COLUMN ( SK_SALES_MOTION_ATTRIB_KEY )  ;

UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, 
( SELECT WI.BOOKINGS_MEASURE_KEY, WI.BOOKINGS_PROCESS_DATE, WI.BKGS_MEASURE_TRANS_TYPE_CODE, 
COALESCE(SMC.SK_SALES_MOTION_ATTRIB_KEY,-999) SK_SALES_MOTION_ATTRIB_KEY
FROM NBM_SK_SALES_MOTION_UPD_OA WI
LEFT JOIN $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION SMC
ON WI.DV_SALES_ORDER_LINE_KEY = SMC.DV_TRANSACTION_ID
AND WI.DD_PRODUCT_KEY = SMC.DV_ENTERPRISE_INV_SKU_ID
AND WI.SK_OFFER_ATTRIBUTION_ID_INT=SMC.SK_OFFER_ATTRIBUTION_ID_INT
AND SMC.END_TV_DTM = '3500-01-01 00:00:00'
AND SMC.DV_TRX_TYPE = 'ERP' 
--AND SMC.AS_TS_CODE <> 'UNK'
AND SMC.SK_OFFER_ATTRIBUTION_ID_INT > 0 /* ERP and XAAS Bookings post sql SMA key update change - for accommodating OA ID grain  - Day1 FY21 */
/* WHERE  WI.SK_SALES_MOTION_ATTRIB_KEY <> COALESCE(SMC.SK_SALES_MOTION_ATTRIB_KEY,-999)   */ /* compared as part of FY21 AUG ACV */
GROUP BY 1,2,3,4
) WI
SET SK_SALES_MOTION_ATTRIB_KEY = WI.SK_SALES_MOTION_ATTRIB_KEY,
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
AND  NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE  
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE 
AND NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED';
	 
/* --UPDATE FOR N_BOOKINGS_MEASURE -- ERP --*/

UPDATE NBM  
FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,		
$$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
( SELECT SALES_ORDER_LINE_KEY FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL	
WHERE NSOL.SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND NSOL.SS_CODE = 'CG'
AND EDW_UPDATE_DATETIME >= ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES WHERE JOB_STREAM_ID ='wf_N_BOOKINGS_MEASURE' AND TABLE_NAME = 'N_SALES_ORDER_LINE' )	
UNION SELECT W.DV_SALES_ORDER_LINE_KEY
FROM $$WORKDB.W_BOOKINGS_MEASURE W,
$$SLSORDVWDB.N_SALES_ORDER_LINE NSOL 
WHERE W.DV_SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY 
AND NSOL.SALES_ORDER_LINE_KEY > 0 AND NSOL.RTNR_ELGIBILITY_FLG = 'N'	AND NSOL.SS_CODE = 'CG'
) SOL	
SET SK_SALES_MOTION_ATTRIB_KEY = -777,		
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)		
WHERE NBM.DV_SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY	
AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
AND  FDY.FISCAL_YEAR_NUMBER_INT >= 2016	
AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> -777		
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ 
					WHERE NBM.DV_SALES_ORDER_LINE_KEY = SQ.SALES_ORDER_LINE_KEY
					  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' ) ; /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */	
 

UPDATE CTL
FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
(SELECT MAX(EDW_UPDATE_DATETIME) MAX_UPDATE_DTM 
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE 
) WI  
SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE' 
AND TABLE_NAME = 'N_SALES_ORDER_LINE' ;

/*FOR RTR-XAAS*/

CREATE MULTISET VOLATILE TABLE NBM_SK_SALES_MOTION_UPD_XAAS
AS
(
SELECT 
NBM.BOOKINGS_MEASURE_KEY, 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_PROCESS_DATE,
NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY,
NBM.SK_OFFER_ATTRIBUTION_ID_INT,
CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN ENTERPRISE_SKU_PRDT_KEY 
ELSE DV_PRODUCT_KEY 
END DD_PRODUCT_KEY ,
NBM.SK_SALES_MOTION_ATTRIB_KEY
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
LEFT JOIN $$SLSORDVWDB.N_XAAS_SO_SBSCRPTN_ATTRBTN OA 
ON NBM.SK_OFFER_ATTRIBUTION_ID_INT = OA.BK_OFFER_ATTRIBUTION_ID_INT   
AND OA.BK_OFFER_ATTRIBUTION_ID_INT > 0
INNER JOIN ( SELECT DV_TRANSACTION_ID AS DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY,DV_ENTERPRISE_INV_SKU_ID 
FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
WHERE DV_TRX_TYPE = 'XAAS' 
--AND AS_TS_CODE <> 'UNK' /* XAAS Bookings post sql SMA key update change - for accommodating OA ID grain  - Day1 FY21 */
AND MT.SK_OFFER_ATTRIBUTION_ID_INT < 0
AND END_TV_DTM = '3500-01-01 00:00:00'
AND EXISTS ( SELECT 1 FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
WHERE WBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY = MT.DV_TRANSACTION_ID
AND BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'                        
)
GROUP BY 1,2
UNION  
SELECT DV_TRANSACTION_ID DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY,
DV_ENTERPRISE_INV_SKU_ID 
FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION 
WHERE DV_TRX_TYPE = 'XAAS' 
AND END_TV_DTM = '3500-01-01 00:00:00'
--AND AS_TS_CODE = 'UNK'
AND SK_OFFER_ATTRIBUTION_ID_INT < 0  /*XAAS Bookings post sql SMA key update change - for accommodating OA ID grain  - Day1 FY21 */
AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
							WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_ERP' )
) WI
ON NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY = WI.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY 
AND CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN OA.ENTERPRISE_SKU_PRDT_KEY 
ELSE NBM.DV_PRODUCT_KEY END  = WI.DV_ENTERPRISE_INV_SKU_ID
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
AND NBM.BOOKINGS_PROCESS_DATE >= '2015-07-31'
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE ) 
) 
WITH DATA PRIMARY INDEX ( BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE, BOOKINGS_PROCESS_DATE ) 
ON COMMIT PRESERVE ROWS ; 

COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_XAAS INDEX ( BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE, BOOKINGS_PROCESS_DATE ) ; 
COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_XAAS COLUMN ( DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY , DD_PRODUCT_KEY )  ;  
COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_XAAS COLUMN ( SK_SALES_MOTION_ATTRIB_KEY )  ;

/*FOR UPDATING XAAS TRX*/
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, 
( SELECT WI.BOOKINGS_MEASURE_KEY, WI.BOOKINGS_PROCESS_DATE, WI.BKGS_MEASURE_TRANS_TYPE_CODE, 
COALESCE(SMC.SK_SALES_MOTION_ATTRIB_KEY,-999) SK_SALES_MOTION_ATTRIB_KEY
FROM NBM_SK_SALES_MOTION_UPD_XAAS WI
LEFT JOIN $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION SMC /*MADE LEFT JOIN IN ORDER TO FIX THE DIFFERENCE AMONG MULTIPLE SERVICE CATEGORIES*/
ON WI.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY = SMC.DV_TRANSACTION_ID
AND WI.DD_PRODUCT_KEY = SMC.DV_ENTERPRISE_INV_SKU_ID
AND SMC.END_TV_DTM = '3500-01-01 00:00:00'
AND SMC.DV_TRX_TYPE = 'XAAS' 
--AND SMC.AS_TS_CODE='UNK' /* XAAS Bookings post sql SMA key update change - for accommodating OA ID grain  - Day1 FY21 */
AND SMC.SK_OFFER_ATTRIBUTION_ID_INT < 0
/* WHERE  WI.SK_SALES_MOTION_ATTRIB_KEY <> COALESCE(SMC.SK_SALES_MOTION_ATTRIB_KEY,-999)  */ /* commented as part of AUG FY21 ACV*/
GROUP BY 1,2,3,4
) WI
SET SK_SALES_MOTION_ATTRIB_KEY = WI.SK_SALES_MOTION_ATTRIB_KEY,
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
AND  NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE  
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE;
--AND NBM.SK_SALES_MOTION_ATTRIB_KEY < 0; /* Added to Qualify Bundle, Standalone and Offset Records */

/*UPDATE NBM XAAS FOR OA*/
CREATE MULTISET VOLATILE TABLE NBM_SK_SALES_MOTION_UPD_XAAS_OA
AS
(
SELECT 
NBM.BOOKINGS_MEASURE_KEY, 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_PROCESS_DATE,
NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY,
CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN NBM.SK_OFFER_ATTRIBUTION_ID_INT
ELSE -9999
END SK_OFFER_ATTRIBUTION_ID_INT,
CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN ENTERPRISE_SKU_PRDT_KEY 
ELSE DV_PRODUCT_KEY 
END DD_PRODUCT_KEY ,
NBM.SK_SALES_MOTION_ATTRIB_KEY
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM 
LEFT JOIN $$SLSORDVWDB.N_XAAS_SO_SBSCRPTN_ATTRBTN OA 
ON NBM.SK_OFFER_ATTRIBUTION_ID_INT = OA.BK_OFFER_ATTRIBUTION_ID_INT   
AND OA.BK_OFFER_ATTRIBUTION_ID_INT > 0        
INNER JOIN ( SELECT DV_TRANSACTION_ID DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY,DV_ENTERPRISE_INV_SKU_ID 
FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
WHERE DV_TRX_TYPE = 'XAAS' 
--AND AS_TS_CODE <> 'UNK' /* XAAS Bookings post sql SMA key update change - for accommodating OA ID grain  - Day1 FY21 */
AND MT.SK_OFFER_ATTRIBUTION_ID_INT > 0 
AND END_TV_DTM = '3500-01-01 00:00:00'
AND EXISTS ( SELECT 1 FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
WHERE WBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY = MT.DV_TRANSACTION_ID
AND BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'                        
)
GROUP BY 1,2                                                           
UNION  
SELECT DV_TRANSACTION_ID DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY,
DV_ENTERPRISE_INV_SKU_ID
FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION 
WHERE DV_TRX_TYPE = 'XAAS' 
--AND AS_TS_CODE <> 'UNK'
AND SK_OFFER_ATTRIBUTION_ID_INT > 0 /* XAAS Bookings post sql SMA key update change - for accommodating OA ID grain  - Day1 FY21 */
AND END_TV_DTM = '3500-01-01 00:00:00'
AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
							WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_ERP' )
) WI
ON NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY = WI.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY 
AND CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN OA.ENTERPRISE_SKU_PRDT_KEY 
ELSE NBM.DV_PRODUCT_KEY END  = WI.DV_ENTERPRISE_INV_SKU_ID
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
AND NBM.BOOKINGS_PROCESS_DATE >= '2015-07-31'
AND NOT EXISTS ( SELECT 1 FROM $$STGDB.ST_SMR_ENT_SKU_FIX_BMK STG
WHERE NBM.BOOKINGS_MEASURE_KEY = STG.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = STG.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE = STG.BOOKINGS_PROCESS_DATE )  
)
WITH DATA PRIMARY INDEX (BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE, BOOKINGS_PROCESS_DATE) 
ON COMMIT PRESERVE ROWS ;

COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_XAAS_OA INDEX (BOOKINGS_MEASURE_KEY, BKGS_MEASURE_TRANS_TYPE_CODE,BOOKINGS_PROCESS_DATE); 
COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_XAAS_OA COLUMN (DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY,DD_PRODUCT_KEY);  
COLLECT STATS ON NBM_SK_SALES_MOTION_UPD_XAAS_OA COLUMN (SK_SALES_MOTION_ATTRIB_KEY);

UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
(SELECT WI.BOOKINGS_MEASURE_KEY, WI.BOOKINGS_PROCESS_DATE, WI.BKGS_MEASURE_TRANS_TYPE_CODE,
COALESCE(SMC.SK_SALES_MOTION_ATTRIB_KEY,-999) SK_SALES_MOTION_ATTRIB_KEY
FROM NBM_SK_SALES_MOTION_UPD_XAAS_OA WI
LEFT JOIN $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION SMC
ON WI.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY = SMC.DV_TRANSACTION_ID
AND WI.DD_PRODUCT_KEY = SMC.DV_ENTERPRISE_INV_SKU_ID
AND WI.SK_OFFER_ATTRIBUTION_ID_INT=SMC.SK_OFFER_ATTRIBUTION_ID_INT
AND SMC.END_TV_DTM = '3500-01-01 00:00:00'
AND SMC.DV_TRX_TYPE = 'XAAS'
--AND SMC.AS_TS_CODE <> 'UNK'
AND SMC.SK_OFFER_ATTRIBUTION_ID_INT > 0 /* XAAS Bookings post sql SMA key update change - for accommodating OA ID grain  - Day1 FY21 */
/* WHERE  WI.SK_SALES_MOTION_ATTRIB_KEY <> COALESCE(SMC.SK_SALES_MOTION_ATTRIB_KEY,-999)  */ /*  Commented as part of Q1FY21 Aug ACV */
GROUP BY 1,2,3,4
) WI
SET SK_SALES_MOTION_ATTRIB_KEY = WI.SK_SALES_MOTION_ATTRIB_KEY,EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE  
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED';

UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, 
$$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
(SELECT DV_TRX_TYPE, SK_SALES_MOTION_ATTRIB_KEY
FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION MT
WHERE END_TV_DTM <= CURRENT_TIMESTAMP(0)
AND EDW_UPDATE_DTM >= ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
							WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_ERP' )
AND NOT EXISTS ( SELECT SK_SALES_MOTION_ATTRIB_KEY
FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION  MT_INNER
WHERE MT_INNER.END_TV_DTM = '3500-01-01 00:00:00'
AND MT.SK_SALES_MOTION_ATTRIB_KEY = MT_INNER.SK_SALES_MOTION_ATTRIB_KEY)
GROUP BY 1,2
) WI
SET SK_SALES_MOTION_ATTRIB_KEY = -999, EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE NBM.SK_SALES_MOTION_ATTRIB_KEY = WI.SK_SALES_MOTION_ATTRIB_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.DV_TRX_TYPE
AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
AND FDY.FISCAL_YEAR_NUMBER_INT >= 2016;

UPDATE CTL 
FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
     ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
	    FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION 
      ) WI  
SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE' 
AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_ERP' ;

/* SMR AS-F, AS-T , TRAINING UPDATE */

UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM ,
(SELECT ITEM_KEY
FROM $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY
WHERE BK_ALLOCATED_SERVC_GROUP_ID IN ('AS TRANSACTION','TRAINING','AS FIXED')
GROUP BY 1
) SFH
SET SK_SALES_MOTION_ATTRIB_KEY= 193004064 ,
EDW_CREATE_USER='AS-F-AS-T-DEFAULT-NEW',
EDW_UPDATE_USER='AS-F-AS-T-DEFAULT-NEW',
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.PRODUCT_KEY=SFH.ITEM_KEY
AND NBM.BOOKINGS_PROCESS_DATE > '2019-07-27'
AND NBM.DV_ATTRIBUTION_CD IN ('STANDALONE','ATTRIBUTED')
AND NOT EXISTS (SEL 1 FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION RTR
WHERE RTR.SK_SALES_MOTION_ATTRIB_KEY = NBM.SK_SALES_MOTION_ATTRIB_KEY
AND RTR.SALES_MOTION_CD = 'NEW'
AND RTR.END_TV_DTM > CURRENT_TIMESTAMP(0));

/*ADDED AS PART OF PR20609- ACV MAY RELEASE*/
DELETE FROM $$STGDB.WI_SALES_ORDER_LINE_INV_COMP;

INSERT INTO $$STGDB.WI_SALES_ORDER_LINE_INV_COMP
SELECT SALES_ORDER_LINE_KEY,DV_INV_DTM,SS_CODE,EDW_UPDATE_DATETIME
FROM $$SLSORDVWDB.N_SALES_ORDER_LINE_TV SOL
WHERE SOL.DV_INV_DTM IS NOT NULL
AND SOL.SS_CODE NOT IN ('OPL')
AND SOL.EDW_UPDATE_DATETIME>(SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES
WHERE JOB_STREAM_ID='wf_N_SALES_ORDER_LINE_OPL'
AND TABLE_NAME ='N_SALES_ORDER_LINE_TV');
          
COLLECT STATS ON $$STGDB.WI_SALES_ORDER_LINE_INV_COMP;

UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, $$STGDB.WI_SALES_ORDER_LINE_INV_COMP WIC
SET
DV_INV_DTM = WIC.DV_INV_DTM,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0),
EDW_UPDATE_USER = USER
WHERE NBM.DV_SALES_ORDER_LINE_KEY = WIC.SALES_ORDER_LINE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP')
AND COALESCE(NBM.DV_INV_DTM,CAST('3500/01/01 00:00:00' AS TIMESTAMP(0)))<>WIC.DV_INV_DTM
AND WIC.SS_CODE NOT IN ('OPL')
AND WIC.DV_INV_DTM IS NOT NULL
AND NBM.DV_INV_DTM IS NULL
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT>=201801;

/*ADDED AS PART OF PR20338*/

DELETE FROM $$STGDB.WI_XAAS_SO_SBCR_TRX_INV_DT;

INSERT INTO $$STGDB.WI_XAAS_SO_SBCR_TRX_INV_DT
SELECT NBM.BOOKINGS_MEASURE_KEY,NBM.BKGS_MEASURE_TRANS_TYPE_CODE,NBM.BOOKINGS_PROCESS_DATE,
       NBM.DV_ATTRIBUTION_CD,TRX.SO_SBSCRPTN_ITM_SLS_TRX_KEY,TRX.WEB_ORDER_ID,TRX.DV_INV_DTM,
	   TRX.BOOKING_VERSION_INT,TRX.LAST_UPDATE_DTM
FROM   $$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX_TV TRX
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
ON TRX.SO_SBSCRPTN_ITM_SLS_TRX_KEY = NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY
WHERE  TRX.END_TV_DTM=CAST('3500/01/01 00:00:00' AS TIMESTAMP(0))
AND    TRX.DV_INV_DTM IS NOT NULL
AND    NBM.DV_INV_DTM IS NULL
AND    NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS')
AND    NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT>=201801;


UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$STGDB.WI_XAAS_SO_SBCR_TRX_INV_DT WIC
SET
DV_INV_DTM = WIC.DV_INV_DTM,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0),
EDW_UPDATE_USER = USER
WHERE NBM.BOOKINGS_MEASURE_KEY = WIC.BOOKINGS_MEASURE_KEY
AND   NBM.BOOKINGS_PROCESS_DATE = WIC.BOOKINGS_PROCESS_DATE 
AND   NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS')
AND   WIC.BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS')
AND   NBM.DV_INV_DTM IS NULL 
AND   WIC.DV_INV_DTM IS NOT NULL
AND   COALESCE(NBM.DV_INV_DTM,CAST('3500/01/01 00:00:00' AS TIMESTAMP(0)))<>WIC.DV_INV_DTM
AND   NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT>=201801;


Source2 Name : SQ_MT_DRVD_NRT_BKG_TRX_DEL


Pre SQL : 



SQL Query : 
SELECT 
MDNBTD.BOOKINGS_MEASURE_KEY, 
MDNBTD.PROCESS_DATE 
FROM
 $$NRTNCRVWDB.MT_DRVD_NRT_BKG_TRX_DEL MDNBTD
WHERE MDNBTD.EDW_UPDATE_DTM > (CAST('$$LastExtractDate' AS TIMESTAMP(0) ) - INTERVAL '1' DAY)


Post SQL : 



Target2 Name : WI_MT_DRVD_NRT_BKG_TRX_DEL


Pre SQL : 
DELETE FROM $$STGDB.WI_MT_DRVD_NRT_BKG_TRX_DEL ALL;


Post SQL : 
DELETE FROM $$STGDB.ST_N_BOOKINGS_MEASURE_DEL WHERE DV_FISCAL_YEAR_MTH_NUMBER_INT NOT IN(SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL );

INSERT INTO $$STGDB.ST_N_BOOKINGS_MEASURE_DEL
SELECT NBM.* FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$STGDB.WI_MT_DRVD_NRT_BKG_TRX_DEL WBM
WHERE 	/*NBM.BOOKINGS_PROCESS_DATE = WBM.PROCESS_DATE AND */
	NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   'ERP';

DELETE NBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$STGDB.WI_MT_DRVD_NRT_BKG_TRX_DEL WBM
WHERE 	/*NBM.BOOKINGS_PROCESS_DATE = WBM.PROCESS_DATE AND */
	NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   'ERP';

DELETE WI
FROM 	$$STGDB.WI_DRVD_ERP_CURR_CC_NBM WI,
	$$STGDB.WI_MT_DRVD_NRT_BKG_TRX_DEL WBM
WHERE 	WI.PROCESS_DATE = WBM.PROCESS_DATE
	AND WI.DRVD_NCR_BKG_TRX_KEY = WBM.BOOKINGS_MEASURE_KEY;


DELETE MT
FROM 	$$SLSORDVWDB.MT_NAMD_ACNT_BKGS_MEASURE MT,
	$$STGDB.WI_MT_DRVD_NRT_BKG_TRX_DEL WBM
WHERE 	/*MT.BOOKINGS_PROCESS_DATE = WBM.PROCESS_DATE AND */
	MT.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND MT.BKGS_MEASURE_TRANS_TYPE_CODE=   'ERP';

	
UPDATE  MDNDT
FROM $$NRTNCRVWDB.MT_DRVD_NRT_DEBOOKINGS_TRX MDNDT,
$$WORKDB.W_BOOKINGS_MEASURE WBM
SET BOOKINGS_PROCESS_DT = WBM.BOOKINGS_PROCESS_DATE         
WHERE WBM.BOOKINGS_MEASURE_KEY = MDNDT.BOOKINGS_MEASURE_KEY
	AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=   'ERP';

	
UPDATE  MDNBT
FROM $$NRTNCRVWDB.MT_DRVD_NRT_BKG_TRX MDNBT,
$$WORKDB.W_BOOKINGS_MEASURE WBM
SET BOOKINGS_PROCESS_DT = WBM.BOOKINGS_PROCESS_DATE         
WHERE WBM.BOOKINGS_MEASURE_KEY = MDNBT.BOOKINGS_MEASURE_KEY
	AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=   'ERP';


Source3 Name : SQ_MT_DRVD_XAAS_BKG_TRX_DEL


Pre SQL : 



SQL Query : 
SELECT 
 XAAS.DRVD_XAAS_BKGS_KEY              AS  BOOKINGS_MEASURE_KEY , 
  CASE WHEN XAAS.ACQUISITION_ORDER_ORIGIN_CD = 'CLOUD-CBM' THEN 'ERP' 
  ELSE 'XAAS' END AS  BKGS_MEASURE_TRANS_TYPE_CODE
 FROM
 $$NRTNCRVWDB.MT_DRVD_XAAS_BKG_TRX_DEL  XAAS
 WHERE XAAS.EDW_UPDATE_DATETIME > ((SELECT LAST_EXTRACT_DATE FROM $$STGDB.WI_XAAS_DELS_DATE_CTL )- INTERVAL '1' DAY)


Post SQL : 



Target3 Name : WI_NBM_XAAS_INTRADAY_DELS


Pre SQL : 
/* Q1FY16 XAAS */
DELETE FROM  $$STGDB.WI_NBM_XAAS_INTRADAY_DELS ;


Post SQL : 
COLLECT STATS ON $$STGDB.WI_NBM_XAAS_INTRADAY_DELS ;
 

 DELETE WI
 FROM  $$STGDB.WI_DRVD_XAAS_CURR_NBM WI,
  $$STGDB.WI_NBM_XAAS_INTRADAY_DELS DELS
 WHERE  WI.DRVD_XAAS_BKGS_KEY             = DELS.BOOKINGS_MEASURE_KEY
   AND WI.BKGS_MEASURE_TRANS_TYPE_CODE = DELS.BKGS_MEASURE_TRANS_TYPE_CODE
   AND WI.BKGS_MEASURE_TRANS_TYPE_CODE IN('XAAS','ERP');

     
 DELETE NBM
 FROM  $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
  $$STGDB.WI_NBM_XAAS_INTRADAY_DELS  DELS
 WHERE  
  NBM.BOOKINGS_MEASURE_KEY = DELS.BOOKINGS_MEASURE_KEY
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = DELS.BKGS_MEASURE_TRANS_TYPE_CODE
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN('XAAS','ERP')
  AND NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY > 0; 

 

 DELETE MT
 FROM  $$SLSORDVWDB.MT_NAMD_ACNT_BKGS_MEASURE MT,
  $$STGDB.WI_NBM_XAAS_INTRADAY_DELS DELS
 WHERE  
  MT.BOOKINGS_MEASURE_KEY = DELS.BOOKINGS_MEASURE_KEY
  AND MT.BKGS_MEASURE_TRANS_TYPE_CODE = DELS.BKGS_MEASURE_TRANS_TYPE_CODE
  AND MT.BKGS_MEASURE_TRANS_TYPE_CODE IN('XAAS','ERP');

 
UPDATE CTL 
  FROM $$STGDB.WI_XAAS_DELS_DATE_CTL  CTL , 
      ( SEL COALESCE(MAX(EDW_UPDATE_DATETIME),CAST('1900-01-01 00:00:00' AS TIMESTAMP(0)))     AS EDW_UPDATE_DATETIME
       FROM $$NRTNCRVWDB.MT_DRVD_XAAS_BKG_TRX_DEL WHERE BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS','ERP')  ) WI
 SET LAST_EXTRACT_DATE = WI.EDW_UPDATE_DATETIME;

 
   COLLECT STATS ON $$STGDB.WI_XAAS_DELS_DATE_CTL ;


Source4 Name : SQ4_WI_BOOKINGS_SW_ANNUALISED_ERP


Pre SQL : 



SQL Query : 
SELECT 
  NBM1.BOOKINGS_MEASURE_KEY,
  NBM1.BOOKINGS_PROCESS_DATE,
  NBM1.BKGS_MEASURE_TRANS_TYPE_CODE ,
  NBM1.CONTRACT_START_DTM,
  NBM1.CONTRACT_END_DTM,
  NBM1.CONTRACT_DURATION,
  NBM1.ANNUALIZED_FLG
  FROM 
  (
  SELECT
  NBM.BOOKINGS_MEASURE_KEY,
  NBM.BOOKINGS_PROCESS_DATE,
  NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
  CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE )   CONTRACT_START_DTM,
  CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE )  CONTRACT_END_DTM,
  ROUND(CASE WHEN ( CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE ) - CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE ) )  IS   NOT NULL 
        THEN  CAST((CAST(CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
                                                  WHEN  NSOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT > 0
                                                                  THEN NSOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
   WHEN ( NP.BK_PRODUCT_ID LIKE 'SWOA%' OR  NP.BK_PRODUCT_ID LIKE '%ADJ%' ) AND NP.BK_PRODUCT_ID NOT LIKE 'SWOA-MX%' THEN NULL
    ELSE CASE
      WHEN NP.PRICING_UNIT_NAME = 'YEAR' THEN NP.PRICING_UNIT_DURATION_INT * 12 
      WHEN NP.PRICING_UNIT_NAME = 'MONTHS' THEN NP.PRICING_UNIT_DURATION_INT 
/* Added as part of June-2018 Meraki scope - goponnus */  
  WHEN NP.PRICING_UNIT_NAME = 'DAYS' THEN ((NP.PRICING_UNIT_DURATION_INT *12)/365) 
   WHEN EL.BIZ_DEF_TERM IS NOT NULL THEN EL.BIZ_DEF_TERM
     WHEN EL.DURATION IS NOT NULL THEN EL.DURATION
   ELSE NULL
     END 
  END ) CONTRACT_DURATION ,  /* ROUNDED as part of FY20 Oct 6th Release*/
    
  CASE WHEN CONTRACT_DURATION IS NULL THEN 'Y' 
   WHEN CONTRACT_DURATION IS NOT NULL THEN
   CASE
     WHEN NP.MONETIZATION_TYPE_CD ='PERPETUAL' AND NP.ELA_FLG = 'Y' THEN 'Y'  
     WHEN COALESCE ( EX.EXCLUDE_FLAG,'N' ) = 'Y' THEN 'Y' 
     WHEN EX.EXCLUDE_FLAG IS NOT NULL AND EX.EXCLUDE_FLAG = 'N'  
     THEN     CASE  WHEN   CONTRACT_DURATION >12   AND NP.MONETIZATION_TYPE_CD <>'USAGE'  THEN 'N' ELSE 'Y' END
	 WHEN NBM.XCAT_FLG ='Y' 
	 AND(NSO.BK_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649') 
OR NBM.DV_DEAL_ID IN (
'16621975','16922373','6922383','16897335','16901905','17684649'))  AND NP.RU_BK_PRODUCT_FAMILY_ID='WBXEE'  THEN 'Y'
     WHEN CONTRACT_DURATION >12 AND NP.MONETIZATION_TYPE_CD <>'USAGE'  /*AND NBM.XCAT_FLG <>'Y'*/ AND FDM.BK_DEAL_ID IS NULL THEN 'N' ELSE 'Y'
   END
  END ANNUALIZED_FLG
    
  FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  
  INNER  JOIN (SELECT 
      DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD,BK_PRDT_ALLCTN_CLSFCTN_CD,ALLOCATION_PCT
      FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN  WHERE  BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS','UNKNOWN')
      GROUP BY 1,2,3,4,5
      QUALIFY RANK()  OVER (PARTITION BY DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD  
      ORDER BY  BK_PRDT_ALLCTN_CLSFCTN_CD DESC  ) = 1
     ) ALCTN
  ON NBM.PRODUCT_KEY= ALCTN.PRODUCT_KEY AND NBM.FISCAL_YEAR_QUARTER_NUMBER_INT=ALCTN.DV_FISCAL_YEAR_QUARTER_NUM_INT
  
  INNER  JOIN 
    $$COMREFVWDB.N_PRODUCT NP
      ON NBM.PRODUCT_KEY=NP.ITEM_KEY
LEFT OUTER JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF ON NP.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID
LEFT OUTER JOIN 
(SELECT SKU,INVENTORY_ITEM_ID,DURATION,BIZ_DEF_TERM FROM $$ETLVWDB.EL_CG1_XXCFIR_PROD_SUBSCR_SKU WHERE END_DATE IS NULL)EL 
	
 ON NP.BK_PRODUCT_ID=EL.SKU
  INNER  JOIN
      $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
             ON NBM.DV_SALES_ORDER_LINE_KEY   =NSOL.SALES_ORDER_LINE_KEY 
  INNER JOIN   
     $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV  NSOLV1
           ON NBM.DV_SALES_ORDER_LINE_KEY   =NSOLV1.SALES_ORDER_LINE_KEY 
  INNER JOIN
     $$SLSORDVWDB.N_SALES_ORDER_TV NSO
	 ON NBM.SALES_ORDER_KEY = NSO.SALES_ORDER_KEY/*ICPM Annualization-svakulab*/		   
      
  LEFT OUTER JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING  FDM
  ON NBM.DV_DEAL_ID = FDM.BK_DEAL_ID
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = FDM.BK_DV_FISCAL_YEAR_MTH_NUM_INT
  
  LEFT OUTER JOIN $$STGDB.WI_ATCCV_EXCLUDE_TRX EX 
  ON EX.EXCLUDE_VALUE =  ( 
       CASE WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN NP.RU_BK_PRODUCT_FAMILY_ID 
                         WHEN EXCLUDE_REF_COLUMN_1 = 'ADJUSTMENT_CODE'  THEN NBM.ADJUSTMENT_CODE
                         WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN NP.BK_PRODUCT_ID 
						 WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
       END ) 
  WHERE NBM.SERVICE_FLG  ='N'
  /*AND NBM.CORPORATE_BOOKINGS_FLG='Y' */
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
  /*AND ALCTN.BK_PRDT_ALLCTN_CLSFCTN_CD IN  ( 'Software'  )*/
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE in ('ERP')
  
  GROUP BY 1,2,3,4,5,6,7
  ) NBM1
  
  INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE MEASURE
  ON NBM1.BOOKINGS_MEASURE_KEY= MEASURE.BOOKINGS_MEASURE_KEY
  AND NBM1.BOOKINGS_PROCESS_DATE= MEASURE.BOOKINGS_PROCESS_DATE
  AND NBM1.BKGS_MEASURE_TRANS_TYPE_CODE= MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE      
  AND MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
  
  WHERE 
  (
  COALESCE(CAST(NBM1.CONTRACT_START_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST( '3500-01-01' AS DATE FORMAT 'YYYY-MM-DD') )<> COALESCE(CAST(MEASURE.RU_SERVICE_CONTRACT_START_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST ('3500-01-01' AS DATE FORMAT 'YYYY-MM-DD'))
  OR COALESCE(CAST(NBM1.CONTRACT_END_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST( '3500-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <> COALESCE(CAST(MEASURE.RU_SERVICE_CONTRACT_END_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST ('3500-01-01' AS DATE FORMAT 'YYYY-MM-DD'))
  OR COALESCE(NBM1.CONTRACT_DURATION,-1)  <>COALESCE(MEASURE.DV_CONTRACT_DURATION,-1)
 OR COALESCE(NBM1.ANNUALIZED_FLG,'=' )  <> COALESCE(MEASURE.DV_ANNUALIZED_FLG,'=' ) 
  )
  AND 1=2


Post SQL : 



Target4 Name : WI_BOOKINGS_SW_ANNUALISED_ERP


Pre SQL : 
DELETE FROM $$STGDB.WI_BOOKINGS_SW_ANNUALISED_ERP ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP  ('$$STGDB','WI_BOOKINGS_SW_ANNUALISED_ERP','D');     
/*
UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$STGDB.WI_BOOKINGS_SW_ANNUALISED_ERP WI
SET
RU_SERVICE_CONTRACT_START_DTM = WI.CONTRACT_START_DTM,
RU_SERVICE_CONTRACT_END_DTM = WI.CONTRACT_END_DTM,
DV_CONTRACT_DURATION = WI.CONTRACT_DURATION,
DV_ANNUALIZED_FLG = WI.ANNUALIZED_FLG,
DV_ANNUALIZED_US_NET_AMT= (CASE WHEN ANNUALIZED_FLG = 'Y' THEN NBM.DD_COMP_US_NET_PRICE_AMOUNT
                                    WHEN ANNUALIZED_FLG = 'N' THEN ( NBM.DD_COMP_US_NET_PRICE_AMOUNT / CONTRACT_DURATION ) * 12
                                    ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
DV_MULTIYEAR_US_NET_AMT = DD_COMP_US_NET_PRICE_AMOUNT - (CASE WHEN ANNUALIZED_FLG = 'Y' THEN NBM.DD_COMP_US_NET_PRICE_AMOUNT
                                    WHEN ANNUALIZED_FLG = 'N' THEN ( NBM.DD_COMP_US_NET_PRICE_AMOUNT / CONTRACT_DURATION ) * 12
                                    ELSE DD_COMP_US_NET_PRICE_AMOUNT END ),
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER = USER         
WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='ERP';
*/


----------------------------------------------------------------------------------------
/*ADDED THE BELOW STATEMENTS AS PART OF ACV Q3FY18 ELA ENRICHMENT*/
----------------------------------------------------------------------------------------
 
 ---------------------------------SELECTING CURRENT MONTHS PERPETUAL,ELA FLAG DATA WITH NULL AS CONTRACT DURATION------------------------------------------------
 

DELETE FROM $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ERP;


INSERT INTO $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ERP
SELECT BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE ,BKGS_MEASURE_TRANS_TYPE_CODE,SALES_ORDER_KEY, NBM.PRODUCT_KEY FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
 INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY = NP.ITEM_KEY
WHERE  NP.MONETIZATION_TYPE_CD='perpetual'
AND NP.ELA_FLG ='Y'
AND  BKGS_MEASURE_TRANS_TYPE_CODE in ('ERP')
 AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)  
 AND DV_CONTRACT_DURATION IS NULL
 AND NBM.SERVICE_FLG = 'N';
 
 COLLECT STATS ON $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ERP INDEX UPI_ST_PERPETUAL_ELA_TERM_ENRICHMENT_ERP;


 --------------------------------SELECTING  MAX CONTRACT DURATION FOR EACH SALES ORDER LINE KEY BY LOOKING UP THE PAST ONE YEAR ERP DATA WITH TERM AS MONETIZATION----------------------------------------------------------------



DELETE FROM $$STGDB.ST_SOL_DURATION_ERP;


INSERT INTO $$STGDB.ST_SOL_DURATION_ERP
  SELECT SALES_ORDER_KEY, ROUND(MAX(DV_CONTRACT_DURATION)) AS DV_CONTRACT_DURATION
   FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
 INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY = NP.ITEM_KEY
WHERE  NP.MONETIZATION_TYPE_CD='TERM'
AND  BKGS_MEASURE_TRANS_TYPE_CODE in ('ERP')
 AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT >= ( SELECT FISCAL_YEAR_MTH_NUMBER_INT-100 FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)  
 AND NBM.SALES_ORDER_KEY IN (SELECT DISTINCT SALES_ORDER_KEY FROM $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ERP WHERE SALES_ORDER_KEY > 0 )
  AND DV_CONTRACT_DURATION IS NOT NULL
  AND NBM.SERVICE_FLG = 'N'
  GROUP BY 1;
  
  
 COLLECT STATS ON $$STGDB.ST_SOL_DURATION_ERP INDEX (SALES_ORDER_KEY);
  -------------------------------------------------------
  /*
  UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_ERP WI 
,$$STGDB.ST_SOL_DURATION_ERP  SOL

   SET
		 RU_SERVICE_CONTRACT_START_DTM = NULL,
		 RU_SERVICE_CONTRACT_END_DTM = NULL,
		 DV_CONTRACT_DURATION = ROUND(SOL.DV_CONTRACT_DURATION),
		 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
		 EDW_UPDATE_USER = USER         
 WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
 AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
 AND WI.SALES_ORDER_KEY=SOL.SALES_ORDER_KEY
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='ERP';*/

------------------------------------------------------------------------------------------------
/*ADDED AS PART OF EDW_FY19 DEC09REL CR11731*/
/*Modified as part of R21947 : EDW_AOV_Metrics_April22_Enablement*/
------------------------------------------------------------------------------------------------
----------- For BUNDLE Lines
DELETE FROM $$STGDB.WI_NBM_INC WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP';
INSERT INTO $$STGDB.WI_NBM_INC 
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
NBM.DV_SALES_ORDER_LINE_KEY,
NBM.BK_POS_TRANSACTION_ID_INT,
NBM.DV_ATTRIBUTION_CD,
NBM.DV_PRODUCT_KEY,
NBM.PRODUCT_KEY,
NBM.SERVICE_FLG,
NBM.FORWARD_REVERSE_FLG,
'AOV' AS AOV_MRR_FLG
FROM
$$WORKDB.W_BOOKINGS_MEASURE NBM 
JOIN $$COMREFVWDB.R_FISCAL_MONTH_TO_YEAR FMP   ON (FMP.FISCAL_YEAR_MONTH_INT = NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT)
LEFT JOIN (SELECT DISTINCT ITEM_KEY,MONETIZATION_TYPE_CD,PRODUCT_CATEGORY_CD,START_TV_DATE,END_TV_DATE  FROM $$COMREFVWDB.N_PRODUCT_TV 
WHERE GOODS_OR_SERVICE_TYPE = 'GOODS'  AND MONETIZATION_TYPE_CD = 'TERM' AND PRODUCT_CATEGORY_CD = 'SOFTWARE') P  ON ( P.ITEM_KEY = NBM.PRODUCT_KEY  AND NBM.BOOKINGS_PROCESS_DATE BETWEEN P.START_TV_DATE AND P.END_TV_DATE)
LEFT JOIN (SELECT 
PRODUCT_KEY,DV_FISCAL_YEAR_QUARTER_NUM_INT,PC.MONETIZATION_TYPE_CD 
FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN PC
WHERE(PC.BK_PRDT_ALLCTN_CLSFCTN_CD ='SOFTWARE'  AND BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS', 'UNKNOWN') AND PC.MONETIZATION_TYPE_CD= 'TERM' )
GROUP BY 1,2,3
) PC ON  ( PC.PRODUCT_KEY = NBM.PRODUCT_KEY AND PC.DV_FISCAL_YEAR_QUARTER_NUM_INT = FMP.FISCAL_YEAR_QUARTER_NUMBER_INT)
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP')
AND NBM.CORPORATE_BOOKINGS_FLG = 'Y'
AND NBM.SERVICE_FLG = 'N'
AND  (NBM.DV_ATTRIBUTION_CD  IN ('STANDALONE','BUNDLE','OFFSET','BIB','BIB OFFSET') ) 
AND COALESCE(PC.PRODUCT_KEY,P.ITEM_KEY) IS NOT NULL
UNION ALL
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
NBM.DV_SALES_ORDER_LINE_KEY,
NBM.BK_POS_TRANSACTION_ID_INT,
NBM.DV_ATTRIBUTION_CD,
NBM.DV_PRODUCT_KEY,
NBM.PRODUCT_KEY,
NBM.SERVICE_FLG,
NBM.FORWARD_REVERSE_FLG,
'AOV' AS AOV_MRR_FLG
FROM
$$WORKDB.W_BOOKINGS_MEASURE NBM 
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
WHERE 1=1
AND NBM.CORPORATE_BOOKINGS_FLG = 'Y'
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP')
AND NBM.SERVICE_FLG = 'Y'
AND NBM.DV_ATTRIBUTION_CD  IN ('STANDALONE','BUNDLE','OFFSET','BIB','BIB OFFSET') 
AND
EXISTS
( SELECT 1 FROM 
    $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH 
    WHERE 
     SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN'
    AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
    AND (  (SFH.BK_SERVICE_CATEGORY_ID   =  'TECHNICAL SUPPORT SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  NOT IN  ( 'TRAINING'  ))
  OR 
  (SFH.BK_SERVICE_CATEGORY_ID ='ADVANCED SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID IN  ( 'AS SUBSCRIPTION'  )) )
  AND  SFH.ITEM_KEY = P.ITEM_KEY );
  
----------- For ATTRIBUTED Lines
INSERT INTO $$STGDB.WI_NBM_INC 
    SELECT
    NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
    NBM.BOOKINGS_MEASURE_KEY,
    NBM.BOOKINGS_PROCESS_DATE,
    NBM.DV_SALES_ORDER_LINE_KEY,
	NBM.BK_POS_TRANSACTION_ID_INT,
    NBM.DV_ATTRIBUTION_CD,
    NBM.DV_PRODUCT_KEY,
    NBM.PRODUCT_KEY,
    NBM.SERVICE_FLG,
    NBM.FORWARD_REVERSE_FLG,
    'MRR' AS AOV_MRR_FLG
    FROM
    $$WORKDB.W_BOOKINGS_MEASURE NBM 
    JOIN $$COMREFVWDB.R_FISCAL_MONTH_TO_YEAR FMP   ON (FMP.FISCAL_YEAR_MONTH_INT = NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT)
    JOIN ( SELECT DISTINCT ITEM_KEY,START_TV_DATE,END_TV_DATE,MONETIZATION_TYPE_CD,PRODUCT_CATEGORY_CD FROM $$COMREFVWDB.N_PRODUCT_TV   )P  ON ( P.ITEM_KEY = NBM.PRODUCT_KEY  AND NBM.BOOKINGS_PROCESS_DATE BETWEEN P.START_TV_DATE AND P.END_TV_DATE)
    LEFT JOIN (SELECT 
    PRODUCT_KEY,DV_FISCAL_YEAR_QUARTER_NUM_INT,PC.MONETIZATION_TYPE_CD 
    FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN PC
    WHERE(PC.BK_PRDT_ALLCTN_CLSFCTN_CD ='SOFTWARE'  AND BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS', 'UNKNOWN'))
    GROUP BY 1,2,3
    ) PC ON  ( PC.PRODUCT_KEY = NBM.PRODUCT_KEY AND PC.DV_FISCAL_YEAR_QUARTER_NUM_INT = FMP.FISCAL_YEAR_QUARTER_NUMBER_INT)
    WHERE 
    1=1
    AND (NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED'
    AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP')
    AND NBM.CORPORATE_BOOKINGS_FLG = 'Y'
    AND (( NBM.SERVICE_FLG = 'N' AND (PC.MONETIZATION_TYPE_CD = 'TERM'  OR (P.MONETIZATION_TYPE_CD = 'TERM' AND P.PRODUCT_CATEGORY_CD = 'SOFTWARE')))
        OR 
        (  NBM.SERVICE_FLG = 'Y'
        AND EXISTS 
         (
           SELECT 1 FROM 
                     $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH 
                     WHERE  SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN' AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
                   AND (  (SFH.BK_SERVICE_CATEGORY_ID   =  'TECHNICAL SUPPORT SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  NOT IN  ( 'TRAINING'  ))
      OR 
      (SFH.BK_SERVICE_CATEGORY_ID ='ADVANCED SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID IN  ( 'AS SUBSCRIPTION'  )) )
      AND  SFH.ITEM_KEY = P.ITEM_KEY )
        )) 
    AND NOT EXISTS  ( 
        SELECT 1 FROM  $$STGDB.WI_NBM_INC INC WHERE   
                   ( INC.DV_SALES_ORDER_LINE_KEY = NBM.DV_SALES_ORDER_LINE_KEY AND INC.DV_ATTRIBUTION_CD NOT IN ('STANDALONE','ATTRIBUTED')
                   AND INC.DV_PRODUCT_KEY = NBM.DV_PRODUCT_KEY AND INC.BOOKINGS_PROCESS_DATE = NBM.BOOKINGS_PROCESS_DATE
                   AND INC.FORWARD_REVERSE_FLG = NBM.FORWARD_REVERSE_FLG)
    ));
COLLECT STATS ON $$STGDB.WI_NBM_INC INDEX ( BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE,BKGS_MEASURE_TRANS_TYPE_CODE) ;
COLLECT STATS ON $$STGDB.WI_NBM_INC COLUMN (DV_SALES_ORDER_LINE_KEY ) ;
COLLECT STATS ON $$STGDB.WI_NBM_INC COLUMN (DV_ATTRIBUTION_CD ) ;
COLLECT STATS ON $$STGDB.WI_NBM_INC COLUMN (DV_PRODUCT_KEY ) ;
COLLECT STATS ON $$STGDB.WI_NBM_INC COLUMN (FORWARD_REVERSE_FLG);
COLLECT STATS ON $$STGDB.WI_NBM_INC COLUMN (SERVICE_FLG);
COLLECT STATS ON $$STGDB.WI_NBM_INC COLUMN (PRODUCT_KEY);
COLLECT STATS ON $$STGDB.WI_NBM_INC COLUMN  (PARTITION);

----------- For Forward Lines
DELETE FROM $$STGDB.WI_SM_NBM_INC_TEMP WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP';
INSERT INTO $$STGDB.WI_SM_NBM_INC_TEMP  
SELECT
NBM_ST.BOOKINGS_MEASURE_KEY,
NBM_ST.BOOKINGS_PROCESS_DATE,
NBM_ST.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM_ST.DV_SALES_ORDER_LINE_KEY,
NBM_ST.BK_POS_TRANSACTION_ID_INT,
NBM_ST.DV_ATTRIBUTION_CD,
NBM_ST.FORWARD_REVERSE_FLG,
NBM_ST.DV_PRODUCT_KEY,
NBM_ST.PRODUCT_KEY,
NBM_ST.NEW_SERVICE_CONTRACT_START_DTM AS DV_ENRICHED_SERVICE_CONTRACT_START_DT, 
NBM_ST.NEW_SERVICE_CONTRACT_END_DTM AS DV_ENRICHED_SERVICE_CONTRACT_END_DT ,
NBM_ST.NEW_CONTRACT_DURATION AS DV_ENRICHED_CONTRACT_DURATION,
NBM_ST.DV_ENRICHMENT_RULE_DESC AS DV_ENRICHMENT_RULE_DESC ,
NBM_ST.SERVICE_FLG,
NBM_ST.DD_COMP_US_NET_PRICE_AMOUNT
FROM
(SELECT
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.DV_SALES_ORDER_LINE_KEY,
NBM.BK_POS_TRANSACTION_ID_INT,
NBM.DV_ATTRIBUTION_CD,
NBM.FORWARD_REVERSE_FLG,
NBM.DV_PRODUCT_KEY,
NBM.PRODUCT_KEY,
NBM.SERVICE_FLG,
NBM.DD_COMP_US_NET_PRICE_AMOUNT,
CASE WHEN BP.PID_TO_TERM_BNDL IS NULL AND BP.BK_PRODUCT_ID = 'XCAT-ELA-5Y-ENG' THEN  60 ELSE BP.PID_TO_TERM_BNDL END AS PID_TO_TERM_BNDL,
CASE WHEN P.PID_TO_TERM_ATTR IS NULL AND P.BK_PRODUCT_ID = 'XCAT-ELA-5Y-ENG' THEN  60 ELSE P.PID_TO_TERM_ATTR END AS PID_TO_TERM_ATTR,
CASE
    WHEN SOL.RU_SERVICE_CONTRACT_START_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') AND SOL.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL AND SOL.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
    THEN Cast(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)
END AS SOL_CONTRACT_START_DT,
CASE
    WHEN SOL.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') AND SOL.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL 
    AND SOL.RU_SERVICE_CONTRACT_END_DTM > SOL.RU_SERVICE_CONTRACT_START_DTM AND Cast(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= Add_Months(Current_Date,240)
    THEN Cast(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE)
END AS SOL_CONTRACT_END_DT,
Cast((SOL_CONTRACT_END_DT - SOL_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12 /365 AS SOL_CONTRACT_DURATION,
CASE 
    WHEN SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <> 0 
    AND SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <= 240 
    THEN  SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT 
END AS SOLV1_CONTRACT_DURATION,
SVC.SVC_CONTRACT_START_DT AS SRVC_CONTRACT_START_DT,
SVC.SVC_CONTRACT_END_DT AS SRVC_CONTRACT_END_DT,
SVC.DV_SVC_CONTRACT_DURATION AS SRVC_CONTRACT_DURATION,
CASE 
    WHEN NBM.RU_SERVICE_CONTRACT_START_DTM NOT IN ('3500-01-01 00:00:00') AND NBM.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL  AND NBM.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00' 
    THEN Cast(NBM.RU_SERVICE_CONTRACT_START_DTM AS DATE) 
END AS BKGS_CONTRACT_START_DT,
CASE 
    WHEN NBM.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') AND NBM.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL AND NBM.RU_SERVICE_CONTRACT_END_DTM > NBM.RU_SERVICE_CONTRACT_START_DTM 
    AND Cast(NBM.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= Add_Months(Current_Date,240) THEN Cast(NBM.RU_SERVICE_CONTRACT_END_DTM AS DATE) 
END AS BKGS_CONTRACT_END_DT,
CASE 
    WHEN BKGS_CONTRACT_START_DT IS NOT NULL AND BKGS_CONTRACT_END_DT IS NOT NULL THEN Cast((BKGS_CONTRACT_END_DT - BKGS_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12/365
    WHEN NBM.DV_CONTRACT_DURATION IS NOT NULL AND  NBM.DV_CONTRACT_DURATION > 0 AND NBM.DV_CONTRACT_DURATION <= 240   
    THEN NBM.DV_CONTRACT_DURATION
END AS BKGS_CONTRACT_DURATION,
CASE 
    WHEN NBM.DD_CISCO_BOOKED_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') 
    THEN Cast(NBM.DD_CISCO_BOOKED_DTM AS DATE)
END AS BKGS_CISCO_BOOKED_DT ,
CASE
    WHEN SOL.PERIODIC_BILLING_START_DT NOT IN ('1900-01-01' ,'3500-01-01') AND SOL.PERIODIC_BILLING_START_DT IS NOT NULL AND SOL.PERIODIC_BILLING_START_DT >= '2000-01-01'
    THEN SOL.PERIODIC_BILLING_START_DT
END AS PB_START_DT,
CASE
    WHEN SOL.PERIODIC_BILLING_END_DT NOT IN ('1900-01-01' , '3500-01-01') AND SOL.PERIODIC_BILLING_END_DT IS NOT NULL AND SOL.PERIODIC_BILLING_END_DT > SOL.PERIODIC_BILLING_START_DT
    THEN SOL.PERIODIC_BILLING_END_DT 
END AS PB_END_DT,
Cast((PB_END_DT - PB_START_DT) AS DECIMAL(15,6)) * 12 /365 AS PB_CONTRACT_DURATION,
SOL.EDW_CREATE_DATETIME AS SOL_CREATION_DATE,
CASE
WHEN (PB_CONTRACT_DURATION IS NOT NULL AND PB_CONTRACT_DURATION > 0 AND Cast( SOL_CREATION_DATE AS DATE) < '2020-08-16') THEN PB_CONTRACT_DURATION
WHEN (PB_CONTRACT_DURATION IS NOT NULL AND PB_CONTRACT_DURATION > 0 AND Cast(SOL_CREATION_DATE AS DATE) >= '2020-08-16' AND SOL_CONTRACT_DURATION > 0 ) THEN SOL_CONTRACT_DURATION 
WHEN (SRVC_CONTRACT_DURATION IS NOT NULL AND SRVC_CONTRACT_DURATION > 0) THEN SRVC_CONTRACT_DURATION
WHEN (SOL_CONTRACT_DURATION IS NOT NULL AND SOL_CONTRACT_DURATION > 0) THEN SOL_CONTRACT_DURATION 
WHEN (SOLV1_CONTRACT_DURATION IS NOT NULL AND SOLV1_CONTRACT_DURATION > 0) THEN SOLV1_CONTRACT_DURATION 
WHEN (BKGS_CONTRACT_DURATION IS NOT NULL AND BKGS_CONTRACT_DURATION > 0) THEN BKGS_CONTRACT_DURATION
WHEN  Coalesce(PID_TO_TERM_BNDL,0) > 0 THEN PID_TO_TERM_BNDL
WHEN CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN Coalesce(PID_TO_TERM_ATTR,0) ELSE 0 END > 0 THEN PID_TO_TERM_ATTR
ELSE  12
END
AS LKP_CONTRACT_DURATION,
-- NEW_CONTRACT_DURATION
CASE WHEN LKP_CONTRACT_DURATION > 0 AND LKP_CONTRACT_DURATION <=1 THEN 1  ELSE LKP_CONTRACT_DURATION END AS NEW_CONTRACT_DURATION,
--NEW_SERVICE_CONTRACT_START_DTM
CASE
    WHEN (PB_CONTRACT_DURATION IS NOT NULL AND PB_CONTRACT_DURATION > 0 AND Cast(SOL_CREATION_DATE AS DATE) < '2020-08-16') THEN PB_START_DT
    WHEN (PB_CONTRACT_DURATION IS NOT NULL AND PB_CONTRACT_DURATION > 0 AND Cast(SOL_CREATION_DATE AS DATE) >= '2020-08-16'  AND SOL_CONTRACT_DURATION > 0 AND SOL_CONTRACT_START_DT IS NOT NULL) THEN SOL_CONTRACT_START_DT 
    WHEN (SRVC_CONTRACT_DURATION IS NOT NULL AND SRVC_CONTRACT_DURATION > 0) THEN SRVC_CONTRACT_START_DT
    WHEN (SOL_CONTRACT_DURATION IS NOT NULL AND SOL_CONTRACT_DURATION > 0) THEN SOL_CONTRACT_START_DT
    WHEN (SOLV1_CONTRACT_DURATION IS NOT NULL AND SOLV1_CONTRACT_DURATION > 0) THEN Coalesce(SOL_CONTRACT_START_DT,BKGS_CISCO_BOOKED_DT,NBM.BOOKINGS_PROCESS_DATE)
    WHEN (BKGS_CONTRACT_START_DT IS NOT NULL AND BKGS_CONTRACT_END_DT IS NOT NULL) THEN BKGS_CONTRACT_START_DT
    ELSE Coalesce(BKGS_CISCO_BOOKED_DT,NBM.BOOKINGS_PROCESS_DATE)
END AS NEW_SERVICE_CONTRACT_START_DTM,
-- NEW_SERVICE_CONTRACT_END_DTM
CASE 
    WHEN Floor(NEW_CONTRACT_DURATION) = Ceil(NEW_CONTRACT_DURATION)
       THEN Add_Months(NEW_SERVICE_CONTRACT_START_DTM, Cast(NEW_CONTRACT_DURATION AS INTEGER)) - 1
    ELSE NEW_SERVICE_CONTRACT_START_DTM + (Round((NEW_CONTRACT_DURATION / 12.000000) * 365))
END
AS NEW_SERVICE_CONTRACT_END_DTM,
CASE 
    WHEN PB_CONTRACT_DURATION IS NOT NULL AND PB_CONTRACT_DURATION > 0 AND Cast(SOL_CREATION_DATE AS DATE) < '2020-08-16' THEN 'Periodic Billing Term'
    WHEN PB_CONTRACT_DURATION IS NOT NULL AND PB_CONTRACT_DURATION > 0 AND Cast(SOL_CREATION_DATE AS DATE) >= '2020-08-16'  AND SOL_CONTRACT_DURATION > 0 AND SOL_CONTRACT_START_DT IS NOT NULL THEN 'Periodic Billing Term' 
    WHEN (SRVC_CONTRACT_DURATION IS NOT NULL AND SRVC_CONTRACT_DURATION > 0) THEN 'SRVC CNTRCT Dates to Term'
    WHEN (SOL_CONTRACT_DURATION IS NOT NULL AND SOL_CONTRACT_DURATION > 0) THEN 'SOL Dates to Term' 
    WHEN (SOLV1_CONTRACT_DURATION IS NOT NULL AND SOLV1_CONTRACT_DURATION > 0) THEN 'SOL Term'
    WHEN BKGS_CONTRACT_START_DT IS NOT NULL AND BKGS_CONTRACT_END_DT IS NOT NULL THEN 'BKGS MSR Dates to Term'
    WHEN BKGS_CONTRACT_DURATION IS NOT NULL AND  BKGS_CONTRACT_DURATION > 0  THEN 'BKGS MSR Term'
    WHEN Coalesce(PID_TO_TERM_BNDL,0) > 0 THEN 'Bundle PID to Term'
    WHEN CASE WHEN NBM.DV_ATTRIBUTION_CD = 'ATTRIBUTED' THEN Coalesce(PID_TO_TERM_ATTR,0) ELSE 0 END > 0 THEN 'Attributed PID to Term'
    ELSE 'Default Term'
END
AS DV_ENRICHMENT_RULE_DESC
FROM
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
JOIN $$STGDB.WI_NBM_INC INC ON (NBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE)
LEFT JOIN ( SELECT DISTINCT ITEM_KEY, BK_PRODUCT_ID,TERMS_AND_CONTENT_CD,
        CASE PRICING_UNIT_NAME WHEN 'YEAR' THEN PRICING_UNIT_DURATION_INT * 12  WHEN 'MONTHS' THEN PRICING_UNIT_DURATION_INT WHEN 'DAYS' THEN (Cast(PRICING_UNIT_DURATION_INT AS DECIMAL(15,6)) * 12)/365
        END AS PID_TO_TERM_ATTR FROM $$COMREFVWDB.N_PRODUCT WHERE GOODS_OR_SERVICE_TYPE = 'GOODS'  ) P ON (P.ITEM_KEY = NBM.PRODUCT_KEY)
LEFT JOIN ( SELECT DISTINCT ITEM_KEY, BK_PRODUCT_ID,TERMS_AND_CONTENT_CD,
        CASE PRICING_UNIT_NAME WHEN 'YEAR' THEN PRICING_UNIT_DURATION_INT * 12 WHEN 'MONTHS' THEN PRICING_UNIT_DURATION_INT WHEN 'DAYS' THEN (Cast(PRICING_UNIT_DURATION_INT AS DECIMAL(15,6)) * 12)/365
        END AS PID_TO_TERM_BNDL FROM $$COMREFVWDB.N_PRODUCT WHERE GOODS_OR_SERVICE_TYPE = 'GOODS'  ) BP ON (BP.ITEM_KEY = NBM.DV_PRODUCT_KEY)
LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV SOL ON ( SOL.SALES_ORDER_LINE_KEY = NBM.DV_SALES_ORDER_LINE_KEY AND SOL.END_TV_DATETIME = '3500-01-01 00:00:00' )
LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV SOLV1 ON ( NBM.DV_SALES_ORDER_LINE_KEY = SOLV1.SALES_ORDER_LINE_KEY AND SOLV1.END_TV_DTM = '3500-01-01 00:00:00' )
LEFT JOIN ( SELECT DISTINCT ITEM_KEY FROM $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC WHERE BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN' AND DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA' AND BK_SERVICE_CATEGORY_ID = ('TECHNICAL SUPPORT SERVICES') AND BK_ALLOCATED_SERVC_GROUP_ID NOT IN ('TRAINING')) TSS
         ON ( NBM.PRODUCT_KEY  = TSS.ITEM_KEY)
LEFT JOIN (SELECT
CNTRCT.SERVICE_SOL_KEY AS SALES_ORDER_LINE_KEY,
CASE 
    WHEN Min(CNTRCT.CONTRACT_LINE_START_DT) NOT IN ( DATE '3500-01-01') 
         AND Min(CNTRCT.CONTRACT_LINE_START_DT) IS NOT NULL 
         AND Min(CNTRCT.CONTRACT_LINE_START_DT) >= DATE '2000-01-01'
    THEN Min(CNTRCT.CONTRACT_LINE_START_DT)
    END AS SVC_CONTRACT_START_DT,
CASE 
    WHEN    Max(CNTRCT.CONTRACT_LINE_END_DT) NOT IN (DATE '1900-01-01' , DATE '3500-01-01') 
    AND     Max(CNTRCT.CONTRACT_LINE_END_DT) IS NOT NULL AND    Max(CNTRCT.CONTRACT_LINE_END_DT) > Min(CNTRCT.CONTRACT_LINE_START_DT)
    AND     Max(CNTRCT.CONTRACT_LINE_END_DT) <= Add_Months(Current_Date,240)
    THEN    Max(CNTRCT.CONTRACT_LINE_END_DT)
END AS SVC_CONTRACT_END_DT,
Cast((SVC_CONTRACT_END_DT - SVC_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12 /365 AS DV_SVC_CONTRACT_DURATION
FROM $$SERVICEVWDB.N_SRVC_CNTRCT_LN_HANA_SRCD  CNTRCT 
           WHERE CNTRCT.SERVICE_SOL_KEY > 0 AND ( (CNTRCT.CONTRACT_LINE_STYLE_ID_INT =  9 AND  SERVICE_SOL_LINKAGE_LOGIC_NAME LIKE '%OKC%') OR CNTRCT.CONTRACT_LINE_STYLE_ID_INT =  7 )
                 AND CNTRCT.CONTRACT_LINE_STATUS_NAME <> 'TERMINATED'
                 AND NOT EXISTS (SELECT 1 FROM $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH 
                                     WHERE  SFH.ITEM_KEY = CNTRCT.SERVICE_PRODUCT_KEY AND SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN'  
                                            AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'AND SFH.BK_SERVICE_CATEGORY_ID = 'ADVANCED SERVICES' AND SFH.ALLOCATION_PERCENTAGE = 1)
GROUP BY SERVICE_SOL_KEY ) SVC ON (SVC.SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY AND ( TSS.ITEM_KEY IS NOT NULL OR  P.TERMS_AND_CONTENT_CD = 'TnC' ))
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP')
AND NBM.FORWARD_REVERSE_FLG IN ('F','=')
AND NBM.CORPORATE_BOOKINGS_FLG = 'Y'
)NBM_ST;

COLLECT STATS ON $$STGDB.WI_SM_NBM_INC_TEMP INDEX ( BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE,BKGS_MEASURE_TRANS_TYPE_CODE) ;

----------- For Reverse Lines
INSERT INTO $$STGDB.WI_SM_NBM_INC_TEMP
SELECT 
NBM_ST.BOOKINGS_MEASURE_KEY,NBM_ST.BOOKINGS_PROCESS_DATE,NBM_ST.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM_ST.DV_SALES_ORDER_LINE_KEY,NBM_ST.BK_POS_TRANSACTION_ID_INT,NBM_ST.DV_ATTRIBUTION_CD,NBM_ST.FORWARD_REVERSE_FLG,
NBM_ST.DV_PRODUCT_KEY,NBM_ST.PRODUCT_KEY,NBM_ST.DV_ENRICHED_SERVICE_CONTRACT_START_DT, 
NBM_ST.DV_ENRICHED_SERVICE_CONTRACT_END_DT ,NBM_ST.DV_ENRICHED_CONTRACT_DURATION,
NBM_ST.DV_ENRICHMENT_RULE_DESC ,
NBM_ST.SERVICE_FLG ,NBM_ST.DD_COMP_US_NET_PRICE_AMOUNT 
FROM
(
SELECT
NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE,NBM_R.BOOKINGS_MEASURE_KEY,
NBM_R.BOOKINGS_PROCESS_DATE,NBM_R.TRANSACTION_DATETIME,
NBM_R.BOOKINGS_SPLIT_PCT,NBM_R.DV_SALES_ORDER_LINE_KEY,
NBM_R.BK_POS_TRANSACTION_ID_INT,NBM_R.DV_ATTRIBUTION_CD,
NBM_R.FORWARD_REVERSE_FLG,NBM_R.DV_PRODUCT_KEY,
NBM_R.PRODUCT_KEY,NBM_R.SERVICE_FLG,
NBM_R.DD_COMP_US_NET_PRICE_AMOUNT,
Coalesce(NBM_F.BOOKINGS_MEASURE_KEY,NBM.BOOKINGS_MEASURE_KEY,NBM_F_MIS.BOOKINGS_MEASURE_KEY)  AS REF_BOOKINGS_MEASURE_KEY,
Coalesce(NBM_F.BOOKINGS_PROCESS_DATE, NBM.BOOKINGS_PROCESS_DATE, NBM_F_MIS.BOOKINGS_PROCESS_DATE) AS REF_BOOKINGS_PROCESS_DATE,
Coalesce(NBM_F.TRANSACTION_DATETIME, NBM.TRANSACTION_DATETIME , NBM_F_MIS.TRANSACTION_DATETIME) AS REF_TRANSACTION_DATETIME,
Coalesce(NBM_F.DV_ENRICHED_SERVICE_CONTRACT_START_DT, NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,NBM_F_MIS.DV_ENRICHED_SERVICE_CONTRACT_START_DT, NBM_R.DEFAULT_CONTRACT_ST_DT) AS DV_ENRICHED_SERVICE_CONTRACT_START_DT,
Coalesce(NBM_F.DV_ENRICHED_SERVICE_CONTRACT_END_DT, NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,NBM_F_MIS.DV_ENRICHED_SERVICE_CONTRACT_END_DT, NBM_R.DEFAULT_CONTRACT_END_DT) AS DV_ENRICHED_SERVICE_CONTRACT_END_DT,
Coalesce(NBM_F.DV_ENRICHED_CONTRACT_DURATION, NBM.DV_ENRICHED_CONTRACT_DURATION,NBM_F_MIS.DV_ENRICHED_CONTRACT_DURATION, NBM_R.DEFAULT_TERM ) AS DV_ENRICHED_CONTRACT_DURATION,
(Coalesce(NBM_F.DV_ENRICHMENT_RULE_DESC, NBM.DV_ENRICHMENT_RULE_DESC,NBM_F_MIS.DV_ENRICHMENT_RULE_DESC, NBM_R.DEFAULT_ENRICHMENT_RULE_DESC)||'-Original') AS DV_ENRICHMENT_RULE_DESC
FROM (
SELECT NBM_1.* , NBM_1.BOOKINGS_PROCESS_DATE AS DEFAULT_CONTRACT_ST_DT,
12.000000 AS DEFAULT_TERM,
DEFAULT_CONTRACT_ST_DT + Round((DEFAULT_TERM / 12.000000) * 365) AS DEFAULT_CONTRACT_END_DT,
'Default Term' AS DEFAULT_ENRICHMENT_RULE_DESC
FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_1 
JOIN $$STGDB.WI_NBM_INC INC
ON ( INC.BOOKINGS_MEASURE_KEY = NBM_1.BOOKINGS_MEASURE_KEY 
      AND INC.BOOKINGS_PROCESS_DATE = NBM_1.BOOKINGS_PROCESS_DATE 
      AND INC.BKGS_MEASURE_TRANS_TYPE_CODE = NBM_1.BKGS_MEASURE_TRANS_TYPE_CODE)
WHERE NBM_1.FORWARD_REVERSE_FLG = 'R' AND INC.FORWARD_REVERSE_FLG ='R'
AND NBM_1.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
) NBM_R
LEFT JOIN 
(
SELECT NBM_2.*
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_2 
WHERE  NBM_2.FORWARD_REVERSE_FLG = 'F' 
AND NBM_2.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND NBM_2.DV_SALES_ORDER_LINE_KEY IN ( SELECT DV_SALES_ORDER_LINE_KEY FROM $$STGDB.WI_NBM_INC WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP' GROUP BY 1)
)NBM
ON ( NBM.DV_SALES_ORDER_LINE_KEY = NBM_R.DV_SALES_ORDER_LINE_KEY 
AND -1* NBM.BOOKINGS_MEASURE_KEY = NBM_R.BOOKINGS_MEASURE_KEY
)
LEFT JOIN 
(
SELECT NBM_3.*
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_3 
WHERE  NBM_3.FORWARD_REVERSE_FLG = 'F' 
AND NBM_3.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND NBM_3.DV_SALES_ORDER_LINE_KEY IN ( SELECT DV_SALES_ORDER_LINE_KEY FROM $$STGDB.WI_NBM_INC WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP' GROUP BY 1)
)NBM_F
ON (NBM.BOOKINGS_MEASURE_KEY IS  NULL AND NBM_F.DV_SALES_ORDER_LINE_KEY =  NBM_R.DV_SALES_ORDER_LINE_KEY
AND NBM_F.BKGS_MEASURE_TRANS_TYPE_CODE =  NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE AND NBM_F.BOOKINGS_PROCESS_DATE <= NBM_R.BOOKINGS_PROCESS_DATE
AND NBM_F.SALES_TERRITORY_KEY = NBM_R.SALES_TERRITORY_KEY AND NBM_F.SALES_REP_NUMBER = NBM_R.SALES_REP_NUMBER
AND NBM_F.DV_ATTRIBUTION_CD = NBM_R.DV_ATTRIBUTION_CD AND NBM_F.SK_OFFER_ATTRIBUTION_ID_INT =  NBM_R.SK_OFFER_ATTRIBUTION_ID_INT
AND NBM_F.PRODUCT_KEY = NBM_R.PRODUCT_KEY AND NBM_F.CORPORATE_BOOKINGS_FLG =  NBM_R.CORPORATE_BOOKINGS_FLG
AND NBM_F.DD_COMP_US_NET_PRICE_AMOUNT = -1.000000 *  NBM_R.DD_COMP_US_NET_PRICE_AMOUNT
AND NBM_F.BOOKINGS_SPLIT_PCT = NBM_R.BOOKINGS_SPLIT_PCT AND NBM_F.TRANSACTION_DATETIME <= NBM_R.TRANSACTION_DATETIME
)
LEFT JOIN  (SELECT NBM_4.*
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_4 
WHERE  NBM_4.FORWARD_REVERSE_FLG IN ('F','=') 
AND NBM_4.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND NBM_4.DV_SALES_ORDER_LINE_KEY IN ( SELECT DV_SALES_ORDER_LINE_KEY FROM $$STGDB.WI_NBM_INC WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP' GROUP BY 1)
)NBM_F_MIS
ON 
(  NBM.DV_ENRICHMENT_RULE_DESC IS  NULL   AND NBM_F.DV_ENRICHMENT_RULE_DESC IS NULL
AND NBM_F_MIS.DV_SALES_ORDER_LINE_KEY =  NBM_R.DV_SALES_ORDER_LINE_KEY AND NBM_F_MIS.BKGS_MEASURE_TRANS_TYPE_CODE =  NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM_F_MIS.BOOKINGS_PROCESS_DATE <= NBM_R.BOOKINGS_PROCESS_DATE AND NBM_F_MIS.SALES_TERRITORY_KEY = NBM_R.SALES_TERRITORY_KEY
AND NBM_F_MIS.SALES_REP_NUMBER = NBM_R.SALES_REP_NUMBER AND NBM_F_MIS.DV_ATTRIBUTION_CD = NBM_R.DV_ATTRIBUTION_CD
AND NBM_F_MIS.SK_OFFER_ATTRIBUTION_ID_INT =  NBM_R.SK_OFFER_ATTRIBUTION_ID_INT AND NBM_F_MIS.PRODUCT_KEY = NBM_R.PRODUCT_KEY
AND NBM_F_MIS.CORPORATE_BOOKINGS_FLG =  NBM_R.CORPORATE_BOOKINGS_FLG AND NBM_F_MIS.BOOKINGS_SPLIT_PCT = NBM_R.BOOKINGS_SPLIT_PCT
)
WHERE NBM_R.CORPORATE_BOOKINGS_FLG = 'Y'
AND NBM_R.FORWARD_REVERSE_FLG = 'R' 
AND NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
QUALIFY Row_Number () Over (PARTITION BY NBM_R.BOOKINGS_MEASURE_KEY, NBM_R.BOOKINGS_PROCESS_DATE, NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE 
ORDER BY 
Coalesce(NBM_F.BOOKINGS_PROCESS_DATE, NBM.BOOKINGS_PROCESS_DATE,NBM_F_MIS.BOOKINGS_PROCESS_DATE) DESC,
Coalesce(NBM_F.TRANSACTION_DATETIME, NBM.TRANSACTION_DATETIME,NBM_F_MIS.TRANSACTION_DATETIME) DESC, 
Coalesce(NBM_F.BOOKINGS_MEASURE_KEY, NBM.BOOKINGS_MEASURE_KEY,NBM_F_MIS.BOOKINGS_MEASURE_KEY) DESC) <= CASE WHEN NBM_R.CANCELLED_FLG = 'Y' THEN 1 ELSE 2 END 
) NBM_ST
QUALIFY Row_Number () Over (PARTITION BY NBM_ST.BOOKINGS_MEASURE_KEY, NBM_ST.BOOKINGS_PROCESS_DATE, NBM_ST.BKGS_MEASURE_TRANS_TYPE_CODE 
ORDER BY REF_TRANSACTION_DATETIME ASC, REF_BOOKINGS_PROCESS_DATE ASC,REF_BOOKINGS_MEASURE_KEY ASC) = 1;

-- ALL attributed lines
INSERT INTO $$STGDB.WI_SM_NBM_INC_TEMP 
SELECT 
 NBM.BOOKINGS_MEASURE_KEY          
,NBM.BOOKINGS_PROCESS_DATE         
,NBM.BKGS_MEASURE_TRANS_TYPE_CODE  
,NBM.DV_SALES_ORDER_LINE_KEY       
,NBM.BK_POS_TRANSACTION_ID_INT               
,NBM.DV_ATTRIBUTION_CD             
,NBM.FORWARD_REVERSE_FLG           
,NBM.DV_PRODUCT_KEY                
,NBM.PRODUCT_KEY                   
,SUB.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,SUB.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,SUB.DV_ENRICHED_CONTRACT_DURATION 
,SUB.DV_ENRICHMENT_RULE_DESC       
,NBM.SERVICE_FLG  
,NBM.DD_COMP_US_NET_PRICE_AMOUNT                 
 FROM  $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
JOIN  (SELECT DISTINCT WI.DV_SALES_ORDER_LINE_KEY,WI.DV_PRODUCT_KEY, WI.BOOKINGS_PROCESS_DATE, WI.BKGS_MEASURE_TRANS_TYPE_CODE, WI.FORWARD_REVERSE_FLG,
BOOKINGS_SPLIT_PCT ,SALES_TERRITORY_KEY,SALES_REP_NUMBER,  TRANSACTION_DATETIME ,WI.DV_ENRICHED_SERVICE_CONTRACT_START_DT ,WI.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,WI.DV_ENRICHED_CONTRACT_DURATION ,WI.DV_ENRICHMENT_RULE_DESC 
 FROM $$STGDB.WI_SM_NBM_INC_TEMP WI 
JOIN  $$WORKDB.W_BOOKINGS_MEASURE NBM 
ON NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND WI.DV_ATTRIBUTION_CD = 'BUNDLE') SUB
ON NBM.DV_SALES_ORDER_LINE_KEY = SUB.DV_SALES_ORDER_LINE_KEY
AND NBM.DV_PRODUCT_KEY = SUB.DV_PRODUCT_KEY
AND NBM.BOOKINGS_PROCESS_DATE = SUB.BOOKINGS_PROCESS_DATE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = SUB.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.FORWARD_REVERSE_FLG = SUB.FORWARD_REVERSE_FLG
AND NBM.SALES_TERRITORY_KEY = SUB.SALES_TERRITORY_KEY
AND NBM.SALES_REP_NUMBER = SUB.SALES_REP_NUMBER
AND NBM.BOOKINGS_SPLIT_PCT = SUB.BOOKINGS_SPLIT_PCT
AND NBM.TRANSACTION_DATETIME = SUB.TRANSACTION_DATETIME
WHERE 1=1 
AND NBM.DV_ATTRIBUTION_CD IN ('ATTRIBUTED')
AND NOT EXISTS ( SEL 1 FROM $$STGDB.WI_SM_NBM_INC_TEMP WI
WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE)
QUALIFY Row_Number () Over (PARTITION BY NBM.BOOKINGS_MEASURE_KEY, NBM.BOOKINGS_PROCESS_DATE, NBM.BKGS_MEASURE_TRANS_TYPE_CODE 
ORDER BY NBM.BOOKINGS_PROCESS_DATE DESC, NBM.BOOKINGS_MEASURE_KEY DESC) = 1;

COLLECT STATS ON $$STGDB.WI_SM_NBM_INC_TEMP INDEX ( BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE,BKGS_MEASURE_TRANS_TYPE_CODE) ;

----- Update in NBM for Enriched columns
UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
(SELECT * FROM $$STGDB.WI_SM_NBM_INC_TEMP
WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
QUALIFY ROW_NUMBER() OVER(PARTITION BY BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE,BKGS_MEASURE_TRANS_TYPE_CODE ORDER BY BOOKINGS_PROCESS_DATE DESC) = 1) WI,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL
SET DV_ENRICHED_SERVICE_CONTRACT_START_DT=WI.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=WI.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=WI.DV_ENRICHED_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=WI.DV_ENRICHMENT_RULE_DESC,
DV_MTHLY_RCR_REV_TRXL_USD_AMT=COALESCE(CAST((NBM.DD_COMP_US_NET_PRICE_AMOUNT/NULLIFZERO(WI.DV_ENRICHED_CONTRACT_DURATION)) AS DECIMAL(18,6)),0),
DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=COALESCE(CAST(((NBM.DD_COMP_US_NET_PRICE_AMOUNT/NULLIFZERO(WI.DV_ENRICHED_CONTRACT_DURATION))*12.000000) AS DECIMAL(18,6)),0),
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP' AND WI.BKGS_MEASURE_TRANS_TYPE_CODE = 'ERP'
AND NBM.BOOKINGS_MEASURE_KEY=WI.BOOKINGS_MEASURE_KEY
AND NBM.BOOKINGS_PROCESS_DATE=WI.BOOKINGS_PROCESS_DATE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WI.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT; 
/*Modified as part of R21947 : EDW_AOV_Metrics_April22_Enablement*/

/* Update for enriched end customer key columns*/
UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$WORKDB.W_BOOKINGS_MEASURE WBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL
SET ENRICHED_END_CUSTOMER_KEY=NBM.DV_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC='Bookings End Customer',
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)   /* CHG0454670 Adding WHO col updates*/
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP')
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND coalesce(WBM.ENRICHED_END_CUSTOMER_KEY, -999) <> coalesce(NBM.DV_END_CUSTOMER_KEY, -999);


Source5 Name : SQ_WI_BOOKINGS_SW_ANNUALISED_XAAS


Pre SQL : 



SQL Query : 
SELECT
   NBM1.BOOKINGS_MEASURE_KEY          ,
   NBM1.BOOKINGS_PROCESS_DATE         ,
   NBM1.BKGS_MEASURE_TRANS_TYPE_CODE  ,
   NBM1.MRR                           ,
   NBM1.IMRR                          ,
    NBM1.NEW_CONTRACT_START_DTM            ,
    NBM1.NEW_CONTRACT_END_DTM              ,
   NBM1.CONTRACT_DURATION ,
   NBM1.ORIG_SUB_DAYS                 ,
   NBM1.FULFILLMENT_TERM_DAYS     ,
   NBM1.MONTHLY_RATE                  ,
   NBM1.DAILY_RATE_FROM_MONTHLY       ,
   NBM1.DAILY_RATE                    ,
   NBM1.FORWARD_REVERSE_FLG           ,
   NBM1.BOOK_NET                      ,
   NBM1.ANNUALIZED_FLG                ,
   NBM1.ANNUAL_AMOUNT                 ,
   NBM1.MULTI_YEAR_AMOUNT             
   FROM
   (
   SELECT 
   NBM.BOOKINGS_MEASURE_KEY        
   , NBM.BOOKINGS_PROCESS_DATE      
   ,NBM.BKGS_MEASURE_TRANS_TYPE_CODE                                     
   ,NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT   MRR 
 ,NBM.DV_INCRML_MTHY_RCRR_RV_USD_AMT IMRR 
   ,NSOL.RU_SERVICE_CONTRACT_START_DTM  AS NEW_CONTRACT_START_DTM
   ,NSOL.RU_SERVICE_CONTRACT_END_DTM AS NEW_CONTRACT_END_DTM
   , ROUND(CASE 
  WHEN NXSSIST.BK_SALES_ORDER_TYPE_CD = 'AUTO-RENEWAL' THEN NXSSIST.RENEWAL_TERM_MTHS_CNT 
 WHEN NXSSIST.INITIAL_TERM_DUR_MTHS_CNT > 0 THEN NXSSIST.INITIAL_TERM_DUR_MTHS_CNT
   WHEN ( NP.BK_PRODUCT_ID LIKE 'SWOA%' OR  NP.BK_PRODUCT_ID LIKE '%ADJ%' ) AND NP.BK_PRODUCT_ID NOT LIKE 'SWOA-MX%' THEN NULL
   ELSE 
    CASE 
  WHEN NP.PRICING_UNIT_NAME = 'YEAR' THEN NP.PRICING_UNIT_DURATION_INT * 12 
      WHEN NP.PRICING_UNIT_NAME = 'MONTHS' THEN NP.PRICING_UNIT_DURATION_INT 
 /* Added as part of June-2018 Meraki scope - goponnus */  
   WHEN NP.PRICING_UNIT_NAME = 'DAYS' THEN ((NP.PRICING_UNIT_DURATION_INT *12)/365)
    WHEN EL.BIZ_DEF_TERM IS NOT NULL THEN EL.BIZ_DEF_TERM
    WHEN EL.DURATION IS NOT NULL THEN EL.DURATION
     ELSE NULL
    END
   END) /*ROUNDED as part of FY20 Oct 6th Release*/
   CONTRACT_DURATION
 , ( COALESCE (CAST(CONTRACT_DURATION AS DECIMAL(15,6)),12) / 12) * 365 ORIG_SUB_DAYS
   , 
 CASE WHEN NXSSIST.BK_SALES_ORDER_TYPE_CD IN ('REPLACE') AND NXSSIST.BK_SALES_ORDER_SELL_TYPE_CD IN ('UPSELL') /*AND NXSSIST.ACTION_CD = 'ADD'*/ THEN 0
  WHEN NXSSIST.BK_SALES_ORDER_TYPE_CD IN ('MODIFY') AND NXSSIST.BK_SALES_ORDER_SELL_TYPE_CD IN ('UPSELL') /*AND NXSSIST.ACTION_CD IN ('ADD','REMOVE')*/ THEN 0
  ELSE  NXSSIST.FULFILLMENT_TERM_DAYS_CNT 
  END FULFILLMENT_TERM_DAYS 
  ,CASE
    WHEN NXSSIST.BK_SALES_ORDER_TYPE_CD IN ('REPLACE','MODIFY') AND NXSSIST.BK_SALES_ORDER_SELL_TYPE_CD IN ('UPSELL','DOWNSELL','NOCHANGE') /*AND NXSSIST.ACTION_CD = 'ADD'*/ THEN MRR
    WHEN NXSSIST.BK_SALES_ORDER_TYPE_CD IN ('NEW' ) AND NXSSIST.BK_SALES_ORDER_SELL_TYPE_CD IN ('NOCHANGE') AND NXSSIST.ACTION_CD = 'ADD' THEN MRR
    WHEN NXSSIST.BK_SALES_ORDER_TYPE_CD = 'AUTO-RENEWAL' THEN MRR 
    ELSE IMRR
   END MONTHLY_RATE
   , MONTHLY_RATE * 12 / 365 DAILY_RATE_FROM_MONTHLY
   , CASE WHEN NXSSIST.BK_SALES_ORDER_TYPE_CD IN ('MODIFY') AND NXSSIST.BK_SALES_ORDER_SELL_TYPE_CD IN ('UPSELL')
  THEN CASE WHEN ORIG_SUB_DAYS - NXSSIST.FULFILLMENT_TERM_DAYS_CNT <= 0  THEN 0
    ELSE BOOK_NET / ( ORIG_SUB_DAYS - NXSSIST.FULFILLMENT_TERM_DAYS_CNT ) 
   END
  WHEN ORIG_SUB_DAYS - FULFILLMENT_TERM_DAYS <= 0  THEN 0
        ELSE  BOOK_NET / ( ORIG_SUB_DAYS - FULFILLMENT_TERM_DAYS ) 
  END  AS DAILY_RATE
 , FORWARD_REVERSE_FLG
 , NBM.DD_COMP_US_NET_PRICE_AMOUNT /* * COALESCE(SWFTR.ALLOCATION_PCT,1) */BOOK_NET 
   ,
   CASE 
   WHEN NXSSIST.ATCCV_FLG = 'Y' THEN 'Y'
   WHEN CONTRACT_DURATION IS NULL THEN 'Y' 
    WHEN CONTRACT_DURATION IS NOT NULL THEN 
    CASE    
     WHEN COALESCE ( EX.EXCLUDE_FLAG,'N' ) = 'Y' THEN 'Y' 
     WHEN EX.EXCLUDE_FLAG IS NOT NULL AND EX.EXCLUDE_FLAG = 'N'  
     THEN     CASE  WHEN   CONTRACT_DURATION >12   AND NP.MONETIZATION_TYPE_CD <>'USAGE'  THEN 'N' ELSE 'Y' END
  WHEN NBM.XCAT_FLG ='Y' AND(NSO.BK_DEAL_ID IN (
 '16621975','16922373','6922383','16897335','16901905','17684649') OR NBM.DV_DEAL_ID IN (
 '16621975','16922373','6922383','16897335','16901905','17684649'))  AND NP.RU_BK_PRODUCT_FAMILY_ID='WBXEE'  THEN 'Y'
     WHEN CONTRACT_DURATION >12 AND NP.MONETIZATION_TYPE_CD <>'USAGE'  /*AND NBM.XCAT_FLG <>'Y' *//*svakulab*/AND FDM.BK_DEAL_ID IS NULL THEN 'N' ELSE 'Y'
    END
   
   END ANNUALIZED_FLG,
   
  CASE 
  WHEN  ANNUALIZED_FLG = 'N' AND NXSSIST.BK_SALES_ORDER_TYPE_CD IN ('MODIFY') AND NXSSIST.BK_SALES_ORDER_SELL_TYPE_CD IN ('UPSELL') AND ((DV_FISCAL_YEAR_MTH_NUMBER_INT - (CSM.FISCAL_YEAR_MONTH_INT)) MOD 100) = 0 AND (((ORIG_SUB_DAYS - NXSSIST.FULFILLMENT_TERM_DAYS_CNT)/365)*12)<=12
     THEN BOOK_NET
  WHEN ANNUALIZED_FLG = 'N' AND ( DV_FISCAL_YEAR_MTH_NUMBER_INT - CSM.FISCAL_YEAR_MONTH_INT )  = 0  AND FULFILLMENT_TERM_DAYS <> 0 
      THEN ( 365.000 - FULFILLMENT_TERM_DAYS ) * DAILY_RATE 
  WHEN  ANNUALIZED_FLG = 'N'  /*AND ((DV_FISCAL_YEAR_MTH_NUMBER_INT - (CSM.FISCAL_YEAR_MONTH_INT)) MOD 100) = 0*/ AND (((ORIG_SUB_DAYS - FULFILLMENT_TERM_DAYS)/365)*12)<=12 
     THEN BOOK_NET 
  WHEN ANNUALIZED_FLG = 'N' AND ( ( DV_FISCAL_YEAR_MTH_NUMBER_INT - CSM.FISCAL_YEAR_MONTH_INT ) MOD 100 ) = 0  AND FULFILLMENT_TERM_DAYS > 365 
      THEN   ( ( (365.000) - ( FULFILLMENT_TERM_DAYS MOD (365.000) ) ) ) * DAILY_RATE 
  WHEN ANNUALIZED_FLG = 'N' AND ( ( DV_FISCAL_YEAR_MTH_NUMBER_INT - CSM.FISCAL_YEAR_MONTH_INT ) MOD 100 ) = 0  AND CSM.WORKDAY_IN_FISCAL_MONTH_NUM = 25 AND ( FULFILLMENT_TERM_DAYS BETWEEN 0 AND 364 ) AND ( 365 - FULFILLMENT_TERM_DAYS ) < 35  
      THEN   ( ( (365.000) - ( FULFILLMENT_TERM_DAYS) ) + 365 )  * DAILY_RATE  
  WHEN ANNUALIZED_FLG = 'N' AND ( ( DV_FISCAL_YEAR_MTH_NUMBER_INT - CSM.FISCAL_YEAR_MONTH_INT ) MOD 100 ) = 0  AND FULFILLMENT_TERM_DAYS <> 0 
      THEN   ( ( (365.000/12.000) - ( FULFILLMENT_TERM_DAYS MOD (365.000/12.000) ) ) + 365 ) * DAILY_RATE 
  WHEN ANNUALIZED_FLG = 'N' AND ( ( DV_FISCAL_YEAR_MTH_NUMBER_INT - CSM.FISCAL_YEAR_MONTH_INT ) MOD 100 ) = 0  AND FULFILLMENT_TERM_DAYS = 0 
      THEN   ( 365 ) * DAILY_RATE  
  WHEN ANNUALIZED_FLG = 'N' AND ( ( DV_FISCAL_YEAR_MTH_NUMBER_INT - CSM.FISCAL_YEAR_MONTH_INT ) MOD 100 ) <> 0 AND FULFILLMENT_TERM_DAYS = 365 
      THEN 0
  WHEN ANNUALIZED_FLG = 'N' 
      THEN ( ( 365 - ( FULFILLMENT_TERM_DAYS MOD 365 ) ) ) * DAILY_RATE
  WHEN ANNUALIZED_FLG = 'Y' 
      THEN BOOK_NET  
   END
   ANNUAL_AMOUNT ,
  BOOK_NET - ANNUAL_AMOUNT AS MULTI_YEAR_AMOUNT
   
   FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE  NBM
   INNER JOIN $$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX NXSSIST ON NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY=NXSSIST.SO_SBSCRPTN_ITM_SLS_TRX_KEY 
    INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL ON NXSSIST.MINOR_LN_EXAAS_SUBSCR_SOL_KEY =NSOL.SALES_ORDER_LINE_KEY
 AND NSOL.END_TV_DATETIME='3500-01-01 00:00:00'
 INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_TV    NSO 
    ON (NBM.SALES_ORDER_KEY = NSO.SALES_ORDER_KEY)/*ICPM ANNUALIZATION-SVAKULAB*/
   INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR CSM  ON  ( NBM.BOOKINGS_PROCESS_DATE  - FULFILLMENT_TERM_DAYS )  = CSM.CALENDAR_DATE 
  
  /*LEFT OUTER JOIN (SELECT MNR_LN_EXAAS_SBSCRN_SO_LN_KEY,BK_EXAAS_SUBSCRIPTION_NUM FROM $$EXAASVWDB.N_EXAAS_SUBSCRIPTION_LINE_TV WHERE END_TV_DT = '3500-01-01 00:00:00'  GROUP BY 1,2)NESLT 
  ON NESLT.MNR_LN_EXAAS_SBSCRN_SO_LN_KEY=NXSSIST.MINOR_LN_EXAAS_SUBSCR_SOL_KEY 
  LEFT OUTER JOIN  $$EXAASVWDB.N_EXAAS_SUBSCRIPTION NEST ON NEST.BK_EXAAS_SUBSCRIPTION_NUM     =NESLT.BK_EXAAS_SUBSCRIPTION_NUM     */   
   INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY = NP.ITEM_KEY
  LEFT OUTER JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF ON NP.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID
 LEFT OUTER JOIN 
 (SELECT SKU,INVENTORY_ITEM_ID,DURATION,BIZ_DEF_TERM FROM $$ETLVWDB.EL_CG1_XXCFIR_PROD_SUBSCR_SKU WHERE END_DATE IS NULL)EL 
  ON NP.BK_PRODUCT_ID=EL.SKU
   INNER  JOIN ( SELECT 
        DV_FISCAL_YEAR_QUARTER_NUM_INT, PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD, BK_PRDT_ALLCTN_CLSFCTN_CD, ALLOCATION_PCT 
        FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN  WHERE  BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS','UNKNOWN')
        GROUP BY 1,2,3,4,5
        QUALIFY RANK()  OVER (PARTITION BY DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD  
            ORDER BY  BK_PRDT_ALLCTN_CLSFCTN_CD DESC  ) = 1
      ) ALCTN
   ON NBM.PRODUCT_KEY= ALCTN.PRODUCT_KEY AND NBM.FISCAL_YEAR_QUARTER_NUMBER_INT=ALCTN.DV_FISCAL_YEAR_QUARTER_NUM_INT
   
  INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR CEM  ON  CEM.CALENDAR_DATE =
  CASE WHEN NXSSIST.BK_SALES_ORDER_TYPE_CD IN ('MODIFY') AND NXSSIST.BK_SALES_ORDER_SELL_TYPE_CD IN ('UPSELL')
        THEN ( NBM.BOOKINGS_PROCESS_DATE  + ( ORIG_SUB_DAYS - NXSSIST.FULFILLMENT_TERM_DAYS_CNT) ) 
        ELSE ( NBM.BOOKINGS_PROCESS_DATE  + ( ORIG_SUB_DAYS - FULFILLMENT_TERM_DAYS) )
        END
 
   LEFT OUTER JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING  FDM ON NBM.DV_DEAL_ID = FDM.BK_DEAL_ID AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = FDM.BK_DV_FISCAL_YEAR_MTH_NUM_INT 
   LEFT OUTER JOIN $$STGDB.WI_ATCCV_EXCLUDE_TRX EX 
   ON EX.EXCLUDE_VALUE =  (  
       CASE WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN NP.RU_BK_PRODUCT_FAMILY_ID 
                          WHEN EXCLUDE_REF_COLUMN_1 = 'ADJUSTMENT_CODE'  THEN NBM.ADJUSTMENT_CODE
                          WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN NP.BK_PRODUCT_ID      
        WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
   END ) 
   WHERE 
 --   NBM.SERVICE_FLG='N' AND /* Commented as part of XaaS serviceannualization enablement goponnus */
   NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
     AND 
	 NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
   AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='XAAS'
   ) NBM1
 
    INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE MEASURE
   ON NBM1.BOOKINGS_MEASURE_KEY= MEASURE.BOOKINGS_MEASURE_KEY
   AND NBM1.BOOKINGS_PROCESS_DATE= MEASURE.BOOKINGS_PROCESS_DATE
   AND NBM1.BKGS_MEASURE_TRANS_TYPE_CODE= MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE      
   AND MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
   WHERE 		
      (
	  COALESCE(NBM1.NEW_CONTRACT_START_DTM,CAST('3500-01-01 00:00:00' AS TIMESTAMP(0))) <>  COALESCE(MEASURE.RU_SERVICE_CONTRACT_START_DTM,CAST('3500-01-01 00:00:00' AS TIMESTAMP(0))) /*APRIL Q4fy19 change*/
    OR COALESCE(NBM1.NEW_CONTRACT_END_DTM,CAST('3500-01-01 00:00:00' AS TIMESTAMP(0)))<> COALESCE(MEASURE.RU_SERVICE_CONTRACT_END_DTM,CAST('3500-01-01 00:00:00' AS TIMESTAMP(0)))/*APRIL Q4fy19 change*/
    OR COALESCE(NBM1.CONTRACT_DURATION,1)  <>COALESCE(MEASURE.DV_CONTRACT_DURATION,1) /*APRIL Q4fy19 change*/
    OR NBM1.ANNUALIZED_FLG  <>  MEASURE.DV_ANNUALIZED_FLG
    ) AND 1=2


Post SQL : 



Target5 Name : WI_BOOKINGS_SW_ANNUALISED_XAAS1


Pre SQL : 
DELETE FROM $$STGDB.WI_BOOKINGS_SW_ANNUALISED_XAAS ALL;


Post SQL : 
CALL COLLECT_STATS_WRAP  ('$$STGDB','WI_BOOKINGS_SW_ANNUALISED_XAAS','D');     
/*
UPDATE NBM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
 ,$$STGDB.WI_BOOKINGS_SW_ANNUALISED_XAAS WI
 SET
 RU_SERVICE_CONTRACT_START_DTM = WI.CONTRACT_START_DTM,
 RU_SERVICE_CONTRACT_END_DTM = WI.CONTRACT_END_DTM,
 DV_CONTRACT_DURATION = WI.CONTRACT_DURATION,
 DV_ANNUALIZED_FLG = WI.ANNUALIZED_FLG,
 DV_ANNUALIZED_US_NET_AMT= WI.ANNUAL_AMOUNT , 
 DV_MULTIYEAR_US_NET_AMT = WI.MULTI_YEAR_AMOUNT ,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER = USER       
 WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
 AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='XAAS'
 ;*/


/*ADDED AS PART OF EDW_FY19 DEC09REL CR11731*/

DELETE FROM $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP WHERE BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS');

INSERT INTO  $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
'SOFTWARE' AS DV_SERVICE_PRODUCT_FLAG
FROM
$$WORKDB.W_BOOKINGS_MEASURE NBM
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS')
AND NBM.SERVICE_FLG = 'N'
AND P.MONETIZATION_TYPE_CD = 'TERM'
AND 
EXISTS
(SELECT 1 FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN PC 
WHERE PC.PRODUCT_KEY = NBM.PRODUCT_KEY 
AND PC.DV_FISCAL_YEAR_QUARTER_NUM_INT = NBM.FISCAL_YEAR_QUARTER_NUMBER_INT
AND PC.BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS', 'UNKNOWN')
AND PC.BK_PRDT_ALLCTN_CLSFCTN_CD = 'SOFTWARE') 
UNION ALL
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
'SERVICE' AS DV_SERVICE_PRODUCT_FLAG
FROM
$$WORKDB.W_BOOKINGS_MEASURE NBM
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS')
AND NBM.SERVICE_FLG = 'Y'
AND
EXISTS 
( SELECT 1 FROM 
    $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH 
    WHERE 
     SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN'
    AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
    AND (  (SFH.BK_SERVICE_CATEGORY_ID   =  'TECHNICAL SUPPORT SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  NOT IN  ( 'TRAINING'  ))
  OR 
  (SFH.BK_SERVICE_CATEGORY_ID   =  'ADVANCED SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID IN  ( 'AS SUBSCRIPTION'  )) )
  AND  SFH.ITEM_KEY = P.ITEM_KEY  ); /* MODIFIED AS PART OF EDW_FY19 JUNE09REL PR18352 */
  

------------------------------------------------------------------

DELETE FROM $$STGDB.WI_BOOKINGS_MEASURE_SUB_MET_XAAS;

INSERT INTO $$STGDB.WI_BOOKINGS_MEASURE_SUB_MET_XAAS
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
NBM.SALES_TERRITORY_KEY,
NBM.SALES_REP_NUMBER,
-- ACV Policy Flg
CASE 
WHEN NSO.ACQUISITION_ORDER_ORIGIN_CD='ACQ-BSFT' AND WBM.SERVICE_FLG ='Y' THEN 'N' -- BSFT Change
WHEN NBM.SERVICE_FLG = 'N' AND EX.SERVICE_FLG='N' AND  COALESCE (EX.EXCLUDE_FLAG,'N') = 'Y' THEN 'Y'
WHEN NBM.SERVICE_FLG = 'Y' AND  COALESCE (EX.EXCLUDE_FLAG,'N') = 'Y' THEN 'Y'
WHEN NBM.XCAT_FLG ='Y' AND P.RU_BK_PRODUCT_FAMILY_ID = 'WBXEE'
AND(NSO.BK_DEAL_ID IN ('16621975','16922373','6922383','16897335','16901905','17684649') 
OR NBM.DV_DEAL_ID IN ('16621975','16922373','6922383','16897335','16901905','17684649')) THEN 'Y'
WHEN FDM.BK_DEAL_ID IS NOT NULL THEN 'Y'
ELSE 'N'
END
AS ACV_POLICY_FLG,

-- PID to Term
CASE WHEN DV_SERVICE_PRODUCT_FLAG = 'SOFTWARE' THEN 
(CASE          
WHEN P.PRICING_UNIT_NAME = 'YEAR'   THEN P.PRICING_UNIT_DURATION_INT * 12
WHEN P.PRICING_UNIT_NAME = 'MONTHS' THEN P.PRICING_UNIT_DURATION_INT
WHEN P.PRICING_UNIT_NAME = 'DAYS'   THEN (CAST(P.PRICING_UNIT_DURATION_INT AS DECIMAL(15,6)) * 12)/365
END)
WHEN DV_SERVICE_PRODUCT_FLAG = 'SERVICE' THEN NULL
ELSE NULL
END AS PID_TO_TERM_1,

CASE WHEN PID_TO_TERM_1 IS NULL AND P.BK_PRODUCT_ID = 'XCAT-ELA-5Y-ENG' THEN  60
ELSE PID_TO_TERM_1
END AS PID_TO_TERM,

-- SOL look up
CASE
--WHEN SOL.RU_SERVICE_CONTRACT_START_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')  Latest chagnes
WHEN SOL.RU_SERVICE_CONTRACT_START_DTM <>  '3500-01-01 00:00:00'
AND SOL.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
AND SOL.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL
THEN CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)
END 
AS SOL_CONTRACT_START_DT,

--CASE WHEN (SOL.CUST_EXPECTED_START_DT <> '1900-01-01' AND SOL.CUST_EXPECTED_START_DT <> '3500-01-01') THEN SOL.CUST_EXPECTED_START_DT END Latest Changes
CASE WHEN (SOL.CUST_EXPECTED_START_DT >= '2000-01-01' AND SOL.CUST_EXPECTED_START_DT <> '3500-01-01') THEN SOL.CUST_EXPECTED_START_DT END
AS SOL_REQUESTED_START_DT,

CASE
WHEN SOL.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
AND SOL.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL
and CAST (SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= add_months(current_date,240)
AND SOL.RU_SERVICE_CONTRACT_END_DTM > SOL.RU_SERVICE_CONTRACT_START_DTM
THEN CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE)
END 
AS SOL_CONTRACT_END_DT,

CAST((SOL_CONTRACT_END_DT - SOL_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12 / 365
AS DV_SOL_CONTRACT_DURATION,

CASE WHEN (SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <> 0  AND SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <=240) THEN SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT END 
AS SOLV1_CONTRACT_DURATION,

-- SVCL Line look up
CASE 
--WHEN SVCL.SERVICE_CONTRACT_START_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') latest changes
WHEN SVCL.SERVICE_CONTRACT_START_DTM <> '3500-01-01 00:00:00'
and SVCL.SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
AND SVCL.SERVICE_CONTRACT_START_DTM IS NOT NULL 
THEN CAST(SVCL.SERVICE_CONTRACT_START_DTM AS DATE)
END
AS SVC_CONTRACT_START_DT,

CASE 
WHEN SVCL.SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
AND SVCL.SERVICE_CONTRACT_END_DTM IS NOT NULL
AND CAST(SVCL.SERVICE_CONTRACT_END_DTM AS DATE)<= add_months(current_date,240)
AND SVCL.SERVICE_CONTRACT_END_DTM > SVCL.SERVICE_CONTRACT_START_DTM
THEN CAST(SVCL.SERVICE_CONTRACT_END_DTM AS DATE)
END
AS SVC_CONTRACT_END_DT,

CAST((SVC_CONTRACT_END_DT - SVC_CONTRACT_START_DT) AS DECIMAL(15,6)) * 12 / 365
AS DV_SVC_CONTRACT_DURATION,

-- SUB look up
--CASE WHEN (SUB.TERM_START_DT <> '1900-01-01' AND SUB.TERM_START_DT <> '3500-01-01') THEN SUB.TERM_START_DT END latest changes
CASE WHEN (SUB.TERM_START_DT >='2000-01-01' AND SUB.TERM_START_DT <> '3500-01-01') THEN SUB.TERM_START_DT END
AS SUB_TERM_START_DT,
--CASE WHEN (SUB.TERM_END_DT <> '1900-01-01' AND SUB.TERM_END_DT <> '3500-01-01') THEN SUB.TERM_END_DT END  - Latest Changes
CASE WHEN (SUB.TERM_END_DT <> '1900-01-01' AND SUB.TERM_END_DT <> '3500-01-01' AND SUB.TERM_END_DT <= add_months(current_date,240) ) THEN SUB.TERM_END_DT END
AS SUB_TERM_END_DT,
--CASE WHEN (SUB.SUBSCRIPTION_END_DT <> '1900-01-01' AND SUB.SUBSCRIPTION_END_DT <> '3500-01-01') THEN SUB.SUBSCRIPTION_END_DT END Latest changes
CASE WHEN (SUB.SUBSCRIPTION_END_DT <> '1900-01-01' AND SUB.SUBSCRIPTION_END_DT <> '3500-01-01' AND SUB.SUBSCRIPTION_END_DT <= add_months(current_date,240) ) THEN SUB.SUBSCRIPTION_END_DT END 
AS SUB_END_DT,

SUB.INITIAL_TERM_MONTHS_CNT AS SUB_INITIAL_TERM,
SUB.RENEWAL_TERM_MONTHS_CNT AS SUB_RENEWAL_TERM,
SUB.SUBSCRIPTION_RENEW_CNT AS SUB_RENEWAL_CNT,
CASE WHEN SUB_RENEWAL_CNT > 0 THEN SUB_RENEWAL_TERM ELSE SUB_INITIAL_TERM END AS SUB_CURRENT_TERM,

-- TSL look up
TSL.BK_SALES_ORDER_TYPE_CD AS TSL_ORDER_TYPE,
TSL.BK_SALES_ORDER_SELL_TYPE_CD AS TSL_SELL_TYPE,
TSL.ACTION_CD AS TSL_ACTION_CODE,

CASE WHEN TSL.INITIAL_TERM_DUR_MTHS_CNT <> -999 AND TSL.INITIAL_TERM_DUR_MTHS_CNT <> 0  and  TSL.INITIAL_TERM_DUR_MTHS_CNT <= 240 THEN TSL.INITIAL_TERM_DUR_MTHS_CNT END
AS TSL_INITIAL_TERM,
CASE WHEN TSL.RENEWAL_TERM_MTHS_CNT <> -999 AND TSL.RENEWAL_TERM_MTHS_CNT <=240 THEN TSL.RENEWAL_TERM_MTHS_CNT END 
AS TSL_RENEWAL_TERM,
TSL.RENEWAL_CNT AS TSL_RENEWAL_CNT,

CASE WHEN TSL_RENEWAL_CNT > 0  THEN COALESCE(SUB_RENEWAL_TERM, TSL_RENEWAL_TERM) ELSE COALESCE(SUB_INITIAL_TERM, TSL_INITIAL_TERM) END
AS TSL_CURRENT_TERM,


ROUND((CAST(COALESCE(TSL_INITIAL_TERM,0) AS DECIMAL(15,6)) / 12) * 365)
AS TSL_INITIAL_DAYS,
ROUND((CAST(COALESCE(TSL_RENEWAL_TERM,0) AS DECIMAL(15,6)) / 12) * 365)
AS TSL_RENEWAL_DAYS,
ROUND((CAST(COALESCE(TSL_CURRENT_TERM, 0) AS DECIMAL(15,6)) / 12) * 365)
AS TSL_CURRENT_TERM_DAYS,
TSL_INITIAL_DAYS + (COALESCE(TSL_RENEWAL_CNT, 0) * TSL_RENEWAL_DAYS)
AS TSL_TOTAL_DAYS,

CASE 
WHEN NSO.ACQUISITION_ORDER_ORIGIN_CD='ACQ-BSFT' AND WBM.SERVICE_FLG ='Y' THEN NULL 
WHEN TSL.BOOKING_TERM_MONTHS_CNT <> 0 AND NOT(TSL_ORDER_TYPE IN ('REPLACE') AND TSL_ACTION_CODE IN ('REMOVE', 'CANCEL') )
THEN TSL.BOOKING_TERM_MONTHS_CNT END 
AS TSL_BOOKING_TERM, -- BSFT Change


      ROUND((CAST(COALESCE(TSL_BOOKING_TERM,0) AS DECIMAL(15,6)) / 12) * 365)
                   AS TSL_BOOKING_DAYS,
             
CASE 
WHEN TSL_ORDER_TYPE IN ('REPLACE') AND TSL_ACTION_CODE NOT IN ('REMOVE', 'CANCEL') THEN 0
ELSE COALESCE(TSL.FULFILLMENT_TERM_DAYS_CNT, 0)
END
AS TSL_FULFILLMENT_DAYS,

CASE 
WHEN TSL_FULFILLMENT_DAYS < TSL_CURRENT_TERM_DAYS THEN (TSL_CURRENT_TERM_DAYS - TSL_FULFILLMENT_DAYS)
WHEN TSL_FULFILLMENT_DAYS >= TSL_CURRENT_TERM_DAYS AND TSL_FULFILLMENT_DAYS < TSL_TOTAL_DAYS THEN (TSL_TOTAL_DAYS - TSL_FULFILLMENT_DAYS)
WHEN TSL_FULFILLMENT_DAYS >= TSL_CURRENT_TERM_DAYS AND TSL_FULFILLMENT_DAYS >= TSL_TOTAL_DAYS THEN 0
END
AS TSL_REMAINING_DAYS,

CASE 
WHEN NSO.ACQUISITION_ORDER_ORIGIN_CD='ACQ-BSFT' AND WBM.SERVICE_FLG ='Y' THEN NULL
WHEN TSL_REMAINING_DAYS > 0 THEN CAST(TSL_REMAINING_DAYS AS DECIMAL(15,6)) * 12 / 365
END 
AS TSL_REMAINING_TERM, -- BSFT Change

CASE WHEN TSL_CURRENT_TERM_DAYS >= TSL_REMAINING_DAYS
THEN (TSL_CURRENT_TERM_DAYS - TSL_REMAINING_DAYS)
END
AS DV_FULFILLMENT_DAYS,

-- TSL Contract Duratiom
CASE 
WHEN NSO.ACQUISITION_ORDER_ORIGIN_CD='ACQ-BSFT' AND WBM.SERVICE_FLG ='Y' THEN NULL 
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM >= TSL_REMAINING_TERM THEN TSL_BOOKING_TERM
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM < TSL_REMAINING_TERM  AND TSL_FULFILLMENT_DAYS = 0 THEN TSL_BOOKING_TERM
WHEN TSL_REMAINING_TERM >= 0 AND TSL_FULFILLMENT_DAYS > 0 THEN TSL_REMAINING_TERM
ELSE TSL_CURRENT_TERM
END
AS TSL_CONTRACT_DURATION, -- BSFT Change

-- Look up duration
CASE
WHEN (CASE WHEN NSO.ACQUISITION_ORDER_ORIGIN_CD='ACQ-BSFT' AND WBM.SERVICE_FLG ='Y' THEN 'BSFT' ELSE 'NOT' END ='NOT') AND TSL_CONTRACT_DURATION >= 0 THEN TSL_CONTRACT_DURATION
WHEN DV_SVC_CONTRACT_DURATION > 0 THEN DV_SVC_CONTRACT_DURATION
WHEN DV_SOL_CONTRACT_DURATION > 0 THEN DV_SOL_CONTRACT_DURATION 
WHEN SOLV1_CONTRACT_DURATION > 0 THEN SOLV1_CONTRACT_DURATION 
WHEN COALESCE(PID_TO_TERM,0) > 0 THEN PID_TO_TERM
ELSE 12
END
AS LKP_CONTRACT_DURATION -- BSFT Change

FROM  $$WORKDB.W_BOOKINGS_MEASURE WBM 
INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC ON (WBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE
AND INC.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS')

INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM 
                    ON (WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
                          AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE
                          AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE)
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_TV NSO ON NBM.SALES_ORDER_KEY = NSO.SALES_ORDER_KEY 
LEFT JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF ON P.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID
LEFT JOIN $$STGDB.WI_SUBMET_ATCCV_EXCLUDE_CNFG EX 
ON EX.EXCLUDE_VALUE =  ( 
       CASE WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN P.RU_BK_PRODUCT_FAMILY_ID 
            WHEN EXCLUDE_REF_COLUMN_1 = 'ADJUSTMENT_CODE'  THEN NBM.ADJUSTMENT_CODE
            WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN P.BK_PRODUCT_ID 
			WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
       END 
	   )
	   
LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV SOL ON (SOL.SALES_ORDER_LINE_KEY = NBM.DV_SALES_ORDER_LINE_KEY AND SOL.END_TV_DATETIME = '3500-01-01 00:00:00')
LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV SOLV1 ON (NBM.DV_SALES_ORDER_LINE_KEY = SOLV1.SALES_ORDER_LINE_KEY AND SOLV1.END_TV_DTM = '3500-01-01 00:00:00')
LEFT JOIN $$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX TSL ON (TSL.SO_SBSCRPTN_ITM_SLS_TRX_KEY = NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY)

LEFT JOIN (SELECT
CNTRCT.SERVICE_SOL_KEY AS SALES_ORDER_LINE_KEY
,Min(Cast (CNTRCT.CONTRACT_LINE_START_DT AS TIMESTAMP(0))) AS SERVICE_CONTRACT_START_DTM
,Max(Cast(CNTRCT.CONTRACT_LINE_END_DT AS TIMESTAMP(0))) AS SERVICE_CONTRACT_END_DTM
FROM 
$$SERVICEVWDB.N_SRVC_CNTRCT_LN_HANA_SRCD  CNTRCT
WHERE CNTRCT.SERVICE_SOL_KEY > 0 
AND  
(  CNTRCT.CONTRACT_LINE_STYLE_ID_INT =  9 AND  SERVICE_SOL_LINKAGE_LOGIC_NAME LIKE '%OKC%' 
  OR CNTRCT.CONTRACT_LINE_STYLE_ID_INT =  7 )
AND CNTRCT.CONTRACT_LINE_STATUS_NAME <> 'TERMINATED'
AND NOT EXISTS  (
SELECT 1 FROM  $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH
WHERE  1=1
AND SFH.ITEM_KEY = CNTRCT.SERVICE_PRODUCT_KEY
AND SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN'  AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
AND SFH.BK_SERVICE_CATEGORY_ID = 'ADVANCED SERVICES' AND SFH.ALLOCATION_PERCENTAGE = 1
)
GROUP BY SERVICE_SOL_KEY 
 ) SVCL
ON (SVCL.SALES_ORDER_LINE_KEY = SOL.SALES_ORDER_LINE_KEY)

LEFT JOIN (
SELECT * FROM $$EXAASVWDB.N_EXAAS_SUBSCRIPTION_TV
WHERE SUBSCRIPTION_REF_ID <> 'UNKNOWN'
QUALIFY ROW_NUMBER() OVER (PARTITION BY
SUBSCRIPTION_REF_ID,
BK_EXAAS_SUBSCRIPTION_NUM,
SUBSCRIPTION_RENEW_CNT
ORDER BY SUBSCRIPTION_END_DT DESC) = 1
) SUB
ON ( SUB.SUBSCRIPTION_REF_ID = TSL.SUBSCRIPTION_REFERENCE_ID
AND SUB.BK_EXAAS_SUBSCRIPTION_NUM = TSL.SRC_RPTD_SBSCRPTN_CD 
AND SUB.SUBSCRIPTION_RENEW_CNT = TSL.RENEWAL_CNT 
)
LEFT JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING FDM ON (NBM.DV_DEAL_ID = FDM.BK_DEAL_ID AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = FDM.BK_DV_FISCAL_YEAR_MTH_NUM_INT)
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS')
AND NBM.FORWARD_REVERSE_FLG <> 'R';


--------------------------

UPDATE  NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM, 
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(
SELECT 
BKGS_MEASURE_TRANS_TYPE_CODE,
BOOKINGS_MEASURE_KEY,
BOOKINGS_PROCESS_DATE,
-- Subscription Effective Date
CASE 
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM >= TSL_REMAINING_TERM THEN (SUB_TERM_START_DT + DV_FULFILLMENT_DAYS)
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM < TSL_REMAINING_TERM AND TSL_FULFILLMENT_DAYS = 0 THEN (SUB_TERM_END_DT - TSL_BOOKING_DAYS)
WHEN TSL_REMAINING_TERM > 0 AND TSL_FULFILLMENT_DAYS > 0 THEN  (SUB_TERM_START_DT + DV_FULFILLMENT_DAYS)
WHEN TSL_REMAINING_TERM = 0 AND SUB_END_DT >= SUB_TERM_END_DT THEN SUB_END_DT 
ELSE  SUB_TERM_START_DT
END
AS SUB_EFFECTIVE_DATE,

-- Enriched Duration
CASE 
WHEN ACV_POLICY_FLG = 'Y' THEN 12 
ELSE  LKP_CONTRACT_DURATION
END
AS NEW_CONTRACT_DURATION,

-- Enriched Start Date
CASE 
WHEN TSL_CONTRACT_DURATION >= 0 THEN COALESCE( SUB_EFFECTIVE_DATE, (COALESCE(SOL_CONTRACT_START_DT,SOL_REQUESTED_START_DT)+DV_FULFILLMENT_DAYS),  BOOKINGS_PROCESS_DATE) /* MODIFIED AS PART OF EDW_FY19 JUNE09REL PR18352 */
WHEN  DV_SVC_CONTRACT_DURATION > 0 THEN SVC_CONTRACT_START_DT
WHEN  DV_SOL_CONTRACT_DURATION > 0 THEN SOL_CONTRACT_START_DT
WHEN  SOLV1_CONTRACT_DURATION > 0 THEN COALESCE( SOL_CONTRACT_START_DT, SOL_REQUESTED_START_DT, BOOKINGS_PROCESS_DATE)
ELSE  BOOKINGS_PROCESS_DATE
END
AS NEW_SERVICE_CONTRACT_START_DTM, -- BSFT Change


-- Enriched End Date
CASE 
WHEN  ACV_POLICY_FLG = 'Y' AND NEW_CONTRACT_DURATION = 12 THEN ADD_MONTHS( NEW_SERVICE_CONTRACT_START_DTM, 12) - 1
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM >= TSL_REMAINING_TERM AND SUB_TERM_START_DT IS NOT NULL THEN (SUB_TERM_START_DT + DV_FULFILLMENT_DAYS + TSL_BOOKING_DAYS)
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM < TSL_REMAINING_TERM AND TSL_FULFILLMENT_DAYS = 0 AND SUB_TERM_END_DT IS NOT NULL THEN SUB_TERM_END_DT
WHEN TSL_REMAINING_TERM > 0 AND TSL_FULFILLMENT_DAYS > 0 AND SUB_TERM_END_DT IS NOT NULL THEN SUB_TERM_END_DT
WHEN TSL_REMAINING_TERM = 0 AND SUB_END_DT >= SUB_TERM_END_DT THEN SUB_END_DT 
WHEN TSL_REMAINING_TERM IS NULL AND DV_SVC_CONTRACT_DURATION > 0 THEN  SVC_CONTRACT_END_DT
WHEN TSL_REMAINING_TERM IS NULL AND DV_SOL_CONTRACT_DURATION > 0 THEN  SOL_CONTRACT_END_DT
ELSE
(
CASE
WHEN FLOOR( NEW_CONTRACT_DURATION) = CEIL( NEW_CONTRACT_DURATION) AND NEW_CONTRACT_DURATION <> 0
THEN ADD_MONTHS( NEW_SERVICE_CONTRACT_START_DTM, CAST( NEW_CONTRACT_DURATION AS INTEGER)) - 1
ELSE NEW_SERVICE_CONTRACT_START_DTM + ROUND((CAST( NEW_CONTRACT_DURATION AS DECIMAL(15,6)) / 12) * 365)
END
)
END
AS NEW_SERVICE_CONTRACT_END_DTM -- BSFT Change
,


-- Enrichment Rule
CASE 
WHEN  ACV_POLICY_FLG = 'Y' THEN 'ACV Policy'
WHEN  TSL_CONTRACT_DURATION IS NOT NULL AND  TSL_CONTRACT_DURATION >= 0 THEN 
(   
CASE 
WHEN TSL_BOOKING_TERM > 0 AND TSL_BOOKING_TERM > TSL_REMAINING_TERM THEN 'BKGS SOR - Booking Term'
WHEN TSL_REMAINING_TERM > 0 AND TSL_FULFILLMENT_DAYS > 0 THEN 'BKGS SOR - Fulfillment Term'
WHEN TSL_RENEWAL_CNT > 0 THEN 'BKGS SOR - Renewal Term'
ELSE 'BKGS SOR - Initial Term'
END
)
WHEN ( DV_SVC_CONTRACT_DURATION IS NOT NULL AND  DV_SVC_CONTRACT_DURATION > 0) THEN 'SRVC CNTRCT Dates to Term'
WHEN ( DV_SOL_CONTRACT_DURATION IS NOT NULL AND  DV_SOL_CONTRACT_DURATION > 0) THEN 'SOL Dates to Term' 
WHEN ( SOLV1_CONTRACT_DURATION IS NOT NULL AND  SOLV1_CONTRACT_DURATION > 0) THEN 'SOL Term' 
WHEN COALESCE( PID_TO_TERM,0) > 0 THEN 'PID to Term'
ELSE 'Default Term'
END
AS DV_ENRICHMENT_RULE_DESC -- BSFT Change
FROM
$$STGDB.WI_BOOKINGS_MEASURE_SUB_MET_XAAS
)WBM
SET 
DV_ENRICHED_SERVICE_CONTRACT_START_DT= WBM.NEW_SERVICE_CONTRACT_START_DTM,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=WBM.NEW_SERVICE_CONTRACT_END_DTM,                                                        
DV_ENRICHED_CONTRACT_DURATION=WBM.NEW_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=WBM.DV_ENRICHMENT_RULE_DESC,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)   /* CHG0454670 Adding WHO col updates*/
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE='XAAS'
AND NBM.FORWARD_REVERSE_FLG <> 'R'
AND  NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND 
(
coalesce(NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,timestamp '1900-01-01 00:00:00')           <>  COALESCE(WBM.NEW_SERVICE_CONTRACT_START_DTM,timestamp '1900-01-01 00:00:00')
OR
coalesce(NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,timestamp '1900-01-01 00:00:00') <> COALESCE(WBM.NEW_SERVICE_CONTRACT_END_DTM,timestamp '1900-01-01 00:00:00')
OR
coalesce(NBM.DV_ENRICHED_CONTRACT_DURATION, 0.00) <> COALESCE(WBM.NEW_CONTRACT_DURATION,0.00)
OR
COALESCE(NBM.DV_ENRICHMENT_RULE_DESC, 'NA' ) <> COALESCE(WBM.DV_ENRICHMENT_RULE_DESC, 'NA')
);

/*REVERSE LINE UPDATE*/

UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(
SELECT Q.*
FROM
(
SELECT
NBM_R.DV_SALES_ORDER_LINE_KEY,
NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM_R.FORWARD_REVERSE_FLG,
NBM_R.BOOKINGS_MEASURE_KEY,
NBM_R.BOOKINGS_PROCESS_DATE,
NBM_F.BOOKINGS_MEASURE_KEY AS FWD_BOOKINGS_MEASURE_KEY,
NBM_F.BOOKINGS_PROCESS_DATE AS FWD_BOOKINGS_PROCESS_DATE,
NBM_R.SO_SBSCRPTN_ITM_SLS_TRX_KEY,
NBM_R.SALES_TERRITORY_KEY,
NBM_R.SALES_REP_NUMBER,
NBM_R.DV_ATTRIBUTION_CD,
NBM_R.SK_OFFER_ATTRIBUTION_ID_INT,
NBM_R.PRODUCT_KEY,
NBM_R.CORPORATE_BOOKINGS_FLG,
NBM_R.DD_COMP_US_NET_PRICE_AMOUNT,

NBM_F.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
NBM_F.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
NBM_F.DV_ENRICHED_CONTRACT_DURATION,
NBM_F.DV_ENRICHMENT_RULE_DESC,
NBM_F.DV_MTHLY_RCR_REV_TRXL_USD_AMT,
NBM_F.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT

FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_R
JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC  
ON NBM_R.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM_R.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE
AND INC.BKGS_MEASURE_TRANS_TYPE_CODE='XAAS'
JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_F
ON ( NBM_F.FORWARD_REVERSE_FLG <> 'R'
AND NBM_F.DV_SALES_ORDER_LINE_KEY = NBM_R.DV_SALES_ORDER_LINE_KEY 
AND NBM_F.BKGS_MEASURE_TRANS_TYPE_CODE = NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE
AND CASE WHEN NBM_F.BOOKINGS_PROCESS_DATE = NBM_R.BOOKINGS_PROCESS_DATE THEN NBM_F.BOOKINGS_MEASURE_KEY ELSE 0 END < CASE WHEN NBM_F.BOOKINGS_PROCESS_DATE = NBM_R.BOOKINGS_PROCESS_DATE THEN NBM_R.BOOKINGS_MEASURE_KEY ELSE 1 END
AND NBM_F.BOOKINGS_PROCESS_DATE <= NBM_R.BOOKINGS_PROCESS_DATE
AND NBM_F.SO_SBSCRPTN_ITM_SLS_TRX_KEY = NBM_R.SO_SBSCRPTN_ITM_SLS_TRX_KEY
AND NBM_F.SALES_TERRITORY_KEY = NBM_R.SALES_TERRITORY_KEY
AND NBM_F.SALES_REP_NUMBER = NBM_R.SALES_REP_NUMBER
AND NBM_F.DV_ATTRIBUTION_CD = NBM_R.DV_ATTRIBUTION_CD
AND NBM_F.SK_OFFER_ATTRIBUTION_ID_INT = NBM_R.SK_OFFER_ATTRIBUTION_ID_INT
AND NBM_F.PRODUCT_KEY = NBM_R.PRODUCT_KEY
AND NBM_F.CORPORATE_BOOKINGS_FLG = NBM_R.CORPORATE_BOOKINGS_FLG
AND NBM_F.DD_COMP_US_NET_PRICE_AMOUNT = -1.000000 * NBM_R.DD_COMP_US_NET_PRICE_AMOUNT)

WHERE NBM_R.FORWARD_REVERSE_FLG = 'R'
AND NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE='XAAS'
QUALIFY ROW_NUMBER () OVER (PARTITION BY NBM_R.BOOKINGS_MEASURE_KEY, NBM_R.BOOKINGS_PROCESS_DATE, NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE 
ORDER BY NBM_F.BOOKINGS_PROCESS_DATE DESC, NBM_F.BOOKINGS_MEASURE_KEY DESC) <= CASE WHEN NBM_R.CANCELLED_FLG = 'Y' THEN 1 ELSE 2 END
) Q

QUALIFY ROW_NUMBER () OVER (PARTITION BY Q.BOOKINGS_MEASURE_KEY, Q.BOOKINGS_PROCESS_DATE, Q.BKGS_MEASURE_TRANS_TYPE_CODE 
ORDER BY Q.FWD_BOOKINGS_PROCESS_DATE ASC, Q.FWD_BOOKINGS_MEASURE_KEY ASC) = 1
) WBM
SET 
DV_ENRICHED_SERVICE_CONTRACT_START_DT=WBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=WBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=WBM.DV_ENRICHED_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=WBM.DV_ENRICHMENT_RULE_DESC ||'-Original',
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
AND NBM.FORWARD_REVERSE_FLG = 'R'
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT;


/* Update for enriched end customer key columns*/

UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$WORKDB.W_BOOKINGS_MEASURE WBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL
SET ENRICHED_END_CUSTOMER_KEY=NBM.DV_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC='Bookings End Customer',
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)   /* CHG0454670 Adding WHO col updates*/
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('XAAS')
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT
AND coalesce(WBM.ENRICHED_END_CUSTOMER_KEY, -999) <> coalesce(NBM.DV_END_CUSTOMER_KEY, -999);


/*ADDED AS PART OF APR 2019 RELEASE FOR CISCO_BOOKED_DATE ISSUE-SIGORANT*/
UPDATE NBM
         FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
         $$SLSORDVWDB.N_SALES_ORDER NSO
         SET DD_CISCO_BOOKED_DTM=NSO.RU_CISCO_BOOKED_DATETIME   ,
             EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)   
         WHERE NBM.SALES_ORDER_KEY=NSO.SALES_ORDER_KEY
         AND (NBM.DD_CISCO_BOOKED_DTM IS NULL OR NBM.DD_CISCO_BOOKED_DTM='3500/01/01 00:00:00')
         AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='XAAS' 
         AND NSO.SALES_ORDER_KEY NOT IN (-6666)
         AND 
		 COALESCE(NSO.RU_CISCO_BOOKED_DATETIME,CAST('3500/01/01 00:00:00' AS TIMESTAMP(0)))
		 <>'3500/01/01 00:00:00';

 /* UPDATE Added as part of ACV APPD Q2FY20 NOV 17th Release */
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
     $$SLSORDVWDB.MT_SEC_BKGS_TRX_ACV ACV,
	 $$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
     $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_ORIG,
	 $$NRTNCRVWDB.N_SALES_ADJUSTMENT_NRT NSA
SET
SK_SALES_MOTION_ATTRIB_KEY = NBM_ORIG.SK_SALES_MOTION_ATTRIB_KEY, 
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE NBM.BOOKINGS_MEASURE_KEY=ACV.BK_SALES_ADJ_LINE_NUMBER_INT
AND ACV.LINKED_BOOKINGS_MEASURE_KEY = NBM_ORIG.BOOKINGS_MEASURE_KEY
AND ACV.DV_FISCAL_YEAR_MTH_NUMBER_INT = NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT
AND ACV.DV_ACV_TRX_TYPE_CD  = NBM_ORIG.BKGS_MEASURE_TRANS_TYPE_CODE 
AND NSA.BK_SALES_ADJ_NUMBER_INT = NBM.BK_SALES_ADJ_NUMBER_INT
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'SLS_ADJ'
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = CNTL.FISCAL_YEAR_MTH_NUMBER_INT 
AND (NBM.SK_SALES_MOTION_ATTRIB_KEY < 0 OR NBM.SK_SALES_MOTION_ATTRIB_KEY  <> NBM_ORIG.SK_SALES_MOTION_ATTRIB_KEY ) 
AND  NSA.SALES_ADJUSTMENT_SOURCE_CODE = 'EDW' ;
/*
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	 $$NRTNCRVWDB.N_SALES_ADJUSTMENT_LINE_NRT NSAL,
	 $$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
	 $$NRTNCRVWDB.N_SALES_ADJUSTMENT_NRT NSA
 SET 
RU_SERVICE_CONTRACT_START_DTM = NSAL.RU_SERVICE_CONTRACT_START_DTM,
RU_SERVICE_CONTRACT_END_DTM = NSAL.RU_SERVICE_CONTRACT_END_DTM,
DV_CONTRACT_DURATION = NSAL.DV_CONTRACT_DURATION,
DV_ANNUALIZED_FLG  = NSAL.DV_ANNUALIZED_FLG          ,
DV_ANNUALIZED_US_NET_AMT  = NSAL.DV_ANNUALIZED_US_NET_AMT    ,
DV_MULTIYEAR_US_NET_AMT  = NSAL.DV_MULTI_YEAR_US_NET_AMT     ,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) 
WHERE NBM.BOOKINGS_MEASURE_KEY = NSAL.BK_SALES_ADJ_LINE_NUMBER_INT
AND NSAL.BK_SALES_ADJ_NUMBER_INT  = NSA.BK_SALES_ADJ_NUMBER_INT
AND( NBM.RU_SERVICE_CONTRACT_START_DTM IS NULL OR NBM.RU_SERVICE_CONTRACT_END_DTM IS NULL
OR NBM.DV_CONTRACT_DURATION IS NULL)
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT 
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'SLS_ADJ'
AND NBM.BOOKINGS_MEASURE_KEY < 0
AND  NSA.SALES_ADJUSTMENT_SOURCE_CODE = 'EDW';*/

 /* Added as part of the ACV PILOT Sep 26th Release */ 
 /*
UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
SET  RU_SERVICE_CONTRACT_END_DTM = NULL,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)   
WHERE NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP',  'XAAS' )
AND NBM.RU_SERVICE_CONTRACT_END_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00') ;


UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
SET  RU_SERVICE_CONTRACT_START_DTM = NULL,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)   /*CHG0454670 Adding WHO col updates
WHERE NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('ERP',  'XAAS' )
AND  NBM.RU_SERVICE_CONTRACT_START_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00')  ;
*/


/*ADDED AS PART OF Q1FY21 ACV AUG Release*/

DELETE FROM $$STGDB.WI_XAAS_SO_SOL_RETRO_UPDATE;

INSERT INTO $$STGDB.WI_XAAS_SO_SOL_RETRO_UPDATE
SELECT
NBM.BOOKINGS_MEASURE_KEY,
NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY,
NBM.DV_SALES_ORDER_LINE_KEY,
NBM.SALES_ORDER_KEY,
COALESCE(NSOL.SALES_ORDER_LINE_KEY,-6666) AS RT_SALES_ORDER_LINE_KEY ,
COALESCE(NSOL.SALES_ORDER_KEY,-6666) AS RT_SALES_ORDER_KEY,
NBM.BOOKINGS_PROCESS_DATE,
NBM.BKGS_MEASURE_TRANS_TYPE_CODE
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
INNER JOIN $$SLSORDVWDB.N_XAAS_SO_SBSCR_ITM_SLS_TRX_TV NXS
ON NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY=NXS.SO_SBSCRPTN_ITM_SLS_TRX_KEY
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
ON NSOL.SALES_ORDER_LINE_KEY=NXS.MINOR_LN_EXAAS_SUBSCR_SOL_KEY
WHERE CAST(NXS.END_TV_DTM AS DATE)='3500/01/01' AND CAST(NSOL.END_TV_DATETIME AS DATE)='3500/01/01'
AND ((NBM.DV_SALES_ORDER_LINE_KEY<0 OR NBM.SALES_ORDER_KEY<0) AND (NXS.MINOR_LN_EXAAS_SUBSCR_SOL_KEY >0))
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS';


UPDATE NBM FROM
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$STGDB.WI_XAAS_SO_SOL_RETRO_UPDATE WSOL
SET
SALES_ORDER_LINE_KEY = WSOL.RT_SALES_ORDER_LINE_KEY,
DV_SALES_ORDER_LINE_KEY = WSOL.RT_SALES_ORDER_LINE_KEY,
SALES_ORDER_KEY=WSOL.RT_SALES_ORDER_KEY,
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BOOKINGS_MEASURE_KEY=WSOL.BOOKINGS_MEASURE_KEY
AND NBM.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY = WSOL.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY
AND NBM.BOOKINGS_PROCESS_DATE = WSOL.BOOKINGS_PROCESS_DATE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WSOL.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
AND ((NBM.DV_SALES_ORDER_LINE_KEY<>WSOL.RT_SALES_ORDER_LINE_KEY)
OR (NBM.SALES_ORDER_KEY <> WSOL.RT_SALES_ORDER_KEY)) ;

/*Added as part of FY21Q2 ICPM Athena-OFFER */
UPDATE NBM FROM
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
 SET
 DV_RECURRING_OFFER_CD  = CAST (TRIM(NBM.PRODUCT_KEY) || '~' || TRIM(COALESCE(NBM.DV_PRODUCT_KEY,-999)) ||  '~' || 
                          TRIM(NBM.SALES_ORDER_KEY) ||  '~' || TRIM(COALESCE(NBM.SK_OFFER_ATTRIBUTION_ID_INT,-9999)) AS VARCHAR(70)) ,
 EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
 WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'XAAS'
 AND NBM.SALES_ORDER_KEY <> TRIM(STRTOK (DV_RECURRING_OFFER_CD,'~',3)) 
 AND NBM.BOOKINGS_PROCESS_DATE IN (SELECT BOOKINGS_PROCESS_DATE FROM $$STGDB.WI_XAAS_SO_SOL_RETRO_UPDATE GROUP BY 1)
 ;


UPDATE CEL FROM
$$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CEL,
(SELECT MAX(EDW_UPDATE_DATETIME) AS MAX_UPD_DT FROM $$STGDB.WI_SALES_ORDER_LINE_INV_COMP) WI
SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPD_DT,CEL.LAST_EXTRACT_DATE)
WHERE CEL.JOB_STREAM_ID='wf_N_SALES_ORDER_LINE_OPL'
AND   CEL.TABLE_NAME ='N_SALES_ORDER_LINE_TV';