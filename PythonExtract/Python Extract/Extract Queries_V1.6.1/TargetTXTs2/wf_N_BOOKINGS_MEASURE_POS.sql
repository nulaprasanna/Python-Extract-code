


Source1 Name : SQ_W_BOOKINGS_MEASURE1


Pre SQL : 
/*PRE SQL UPDATE IN W BOOKINGS MEASURE FOR CLOSED MONTHS*/

UPDATE WBM FROM 
$$WORKDB.W_BOOKINGS_MEASURE WBM, 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
SET 
RU_SERVICE_CONTRACT_START_DTM = NBM.RU_SERVICE_CONTRACT_START_DTM,
RU_SERVICE_CONTRACT_END_DTM = NBM.RU_SERVICE_CONTRACT_END_DTM,
DV_CONTRACT_DURATION = NBM.DV_CONTRACT_DURATION,
DV_ANNUALIZED_FLG = NBM.DV_ANNUALIZED_FLG,
DV_ANNUALIZED_US_NET_AMT = NBM.DV_ANNUALIZED_US_NET_AMT,
DV_MULTIYEAR_US_NET_AMT = NBM.DV_MULTIYEAR_US_NET_AMT,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
EDW_UPDATE_USER=USER	
WHERE   NBM.BOOKINGS_MEASURE_KEY  =   WBM.BOOKINGS_MEASURE_KEY  
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE   
AND NBM.BOOKINGS_PROCESS_DATE = WBM.BOOKINGS_PROCESS_DATE 
/*AND NBM.SERVICE_FLG = 'Y'*/ /*Commented as part of ATCCV Products SW annualization */
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT <(SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL) 
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS';

/* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */

UPDATE WBM
FROM
$$WORKDB.W_BOOKINGS_MEASURE WBM,
 ( SELECT 
    SK_SALES_MOTION_ATTRIB_KEY,
	DV_TRANSACTION_ID,
	DV_ENTERPRISE_INV_SKU_ID,
	DV_TRX_TYPE ,
	NSOL.RTNR_ELGIBILITY_FLG RTNR_ELGIBILITY_FLG 	
	FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION  MT
INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  ON CASE WHEN MT.SALES_ORDER_LINE_KEY < 0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END = NSOL.SALES_ORDER_LINE_KEY	
	WHERE DV_TRX_TYPE = 'POS'
      AND END_TV_DTM  ='3500-01-01 00:00:00' 
	  AND NSOL.SS_CODE = 'CG'
	  --AND NSOL.RTNR_ELGIBILITY_FLG <> 'N' /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
	GROUP BY 1,2,3,4,5
  ) MT
SET SK_SALES_MOTION_ATTRIB_KEY=MT.SK_SALES_MOTION_ATTRIB_KEY
WHERE MT.DV_TRANSACTION_ID = WBM.BK_POS_TRANSACTION_ID_INT
AND MT.DV_ENTERPRISE_INV_SKU_ID = WBM.DV_PRODUCT_KEY
AND MT.DV_TRX_TYPE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE  
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS' ;
--AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY ; /* Commented as part of ACV FY21 AUG 16 rel to allow incr updates even if SMA key is same */

/* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */


UPDATE WBM 
  FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
 (SELECT BK_POS_TRANSACTION_ID_INT 
    FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
   WHERE SALES_ORDER_LINE_KEY IN (SELECT SALES_ORDER_LINE_KEY  FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
                                  WHERE SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND NSOL.SS_CODE = 'CG'
								    AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
														WHERE SQ.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
														  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' ) /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
  								  )
     AND END_TV_DTM = '3500-01-01 00:00:00'
   GROUP BY 1) SOL
SET SK_SALES_MOTION_ATTRIB_KEY = -777,		
    EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE WBM.BK_POS_TRANSACTION_ID_INT=SOL.BK_POS_TRANSACTION_ID_INT
 AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS'
 AND WBM.SK_SALES_MOTION_ATTRIB_KEY <> -777 ;


SQL Query : 
SELECT 
  W_BOOKINGS_MEASURE.BOOKINGS_MEASURE_KEY,
  W_BOOKINGS_MEASURE.SALES_ORDER_KEY,
  W_BOOKINGS_MEASURE.SALES_ORDER_LINE_KEY,
  W_BOOKINGS_MEASURE.PRODUCT_KEY,
  W_BOOKINGS_MEASURE.AR_TRX_LINE_KEY,
  W_BOOKINGS_MEASURE.AR_TRX_KEY,
  W_BOOKINGS_MEASURE.END_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.BILL_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.SHIP_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.SOLD_TO_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.DV_END_CUSTOMER_KEY,
  W_BOOKINGS_MEASURE.TRANSACTION_DATETIME,
  W_BOOKINGS_MEASURE.SALES_TERRITORY_KEY,
  W_BOOKINGS_MEASURE.SALES_REP_NUMBER,
  W_BOOKINGS_MEASURE.BOOKINGS_PROCESS_DATE,
  W_BOOKINGS_MEASURE.DV_FISCAL_YEAR_MTH_NUMBER_INT,
  W_BOOKINGS_MEASURE.BK_POS_TRANSACTION_ID_INT,
  W_BOOKINGS_MEASURE.BK_SALES_ADJ_LINE_NUMBER_INT,
  W_BOOKINGS_MEASURE.BK_SALES_ADJ_NUMBER_INT,
  W_BOOKINGS_MEASURE.ADJUSTMENT_TYPE_CODE,
  W_BOOKINGS_MEASURE.SALES_CHANNEL_CODE,
  W_BOOKINGS_MEASURE.SALES_CREDIT_TYPE_CODE,
  W_BOOKINGS_MEASURE.IDE_ADJUSTMENT_CODE,
  W_BOOKINGS_MEASURE.ADJUSTMENT_CODE,
  W_BOOKINGS_MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE,
  W_BOOKINGS_MEASURE.CANCELLED_FLG,
  W_BOOKINGS_MEASURE.CANCEL_CODE ,
  W_BOOKINGS_MEASURE.ACQUISITION_FLG,
  W_BOOKINGS_MEASURE.FORWARD_REVERSE_FLG,
  W_BOOKINGS_MEASURE.DISTRIBUTOR_OFFSET_FLG,
  W_BOOKINGS_MEASURE.CORPORATE_BOOKINGS_FLG,
  W_BOOKINGS_MEASURE.OVERLAY_FLG,
  W_BOOKINGS_MEASURE.IC_REVENUE_FLG,
  W_BOOKINGS_MEASURE.CHARGES_FLG,
  W_BOOKINGS_MEASURE.SALESREP_FLG,
  W_BOOKINGS_MEASURE.MISC_FLG,
  W_BOOKINGS_MEASURE.SERVICE_FLG,
  W_BOOKINGS_MEASURE.INTERNATIONAL_DEMO_FLG,
  W_BOOKINGS_MEASURE.REPLACEMENT_DEMO_FLG,
  W_BOOKINGS_MEASURE.REVENUE_FLG,
  W_BOOKINGS_MEASURE.RMA_FLG,
  W_BOOKINGS_MEASURE.TRADE_IN_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_NET_PRICE_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_LIST_PRICE_AMOUNT,
  W_BOOKINGS_MEASURE.DD_COMP_US_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DD_EXTENDED_QUANTITY,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_NET_PRICE_AMT,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_LIST_PRICE_AMT,
  W_BOOKINGS_MEASURE.DD_COMP_US_HOLD_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DD_EXTENDED_HOLD_QUANTITY,
  W_BOOKINGS_MEASURE.DD_COMP_US_STANDARD_PRICE_AMT,
  W_BOOKINGS_MEASURE.WIPS_ORIGINATOR_ID_INT,
  W_BOOKINGS_MEASURE.EDW_CREATE_USER,
  W_BOOKINGS_MEASURE.EDW_UPDATE_USER,
  W_BOOKINGS_MEASURE.EDW_CREATE_DATETIME,
  W_BOOKINGS_MEASURE.EDW_UPDATE_DATETIME,  
  W_BOOKINGS_MEASURE.CONVERSION_RT, 
  W_BOOKINGS_MEASURE.CONVERSION_DT,
  W_BOOKINGS_MEASURE.DD_BK_SO_NUMBER_INT, 
  W_BOOKINGS_MEASURE.DD_CISCO_BOOKED_DTM, 
  W_BOOKINGS_MEASURE.DD_SALES_ORDER_CATEGORY_TYPE,
  W_BOOKINGS_MEASURE.DD_SLS_ORD_OPERATING_UNIT_CD, 
  W_BOOKINGS_MEASURE.DD_TRX_CURRENCY_CD,
  W_BOOKINGS_MEASURE.DV_TRANSACTION_TYPE,
  W_BOOKINGS_MEASURE.ADJUSTMENT_DESCR_KEY,
  W_BOOKINGS_MEASURE.DV_TRANSACTION_NAME,   /**R9**/
  W_BOOKINGS_MEASURE.BOOKINGS_SPLIT_PCT ,    /**R9**/
  W_BOOKINGS_MEASURE.DV_REVENUE_RECOGNITION_FLG,   /* Added as part of true demand bkgs definition*/    
  W_BOOKINGS_MEASURE.DV_NET_SPREAD_FLG ,     /* Added as part of true demand bkgs definition*/  
  W_BOOKINGS_MEASURE.REVENUE_TRANSFER_KEY,  /* vetalla : Added as part of Q3FY14 RTE*/
  /* Added as part of OFFER ATTRIBUTION Q3FY14*/
  W_BOOKINGS_MEASURE.DV_ATTRIBUTION_CD,
  W_BOOKINGS_MEASURE.DV_PRODUCT_KEY,
  W_BOOKINGS_MEASURE.DV_SALES_ORDER_LINE_KEY,
  W_BOOKINGS_MEASURE.SK_OFFER_ATTRIBUTION_ID_INT ,
  W_BOOKINGS_MEASURE.DV_FMV_FLG , /* Q1FY15 FMV */
  W_BOOKINGS_MEASURE.RU_SERVICE_CONTRACT_START_DTM     ,
  W_BOOKINGS_MEASURE.RU_SERVICE_CONTRACT_END_DTM       ,
  W_BOOKINGS_MEASURE.DV_CONTRACT_DURATION              ,
  W_BOOKINGS_MEASURE.DV_ANNUALIZED_FLG                 ,
  W_BOOKINGS_MEASURE.DV_ANNUALIZED_US_NET_AMT          ,
  W_BOOKINGS_MEASURE.DV_MULTIYEAR_US_NET_AMT ,
  W_BOOKINGS_MEASURE.SO_SBSCRPTN_ITM_SLS_TRX_KEY, /* Added as part of XAAS-Q3FY15 */
  W_BOOKINGS_MEASURE.DSV_FLG, /* Added as part of DSV-Q1FY16 */
  W_BOOKINGS_MEASURE.DV_SOURCE_ORDER_NUM_INT, /* Added as part of DSV-Q1FY16 */
  W_BOOKINGS_MEASURE.DV_SO_SBSCRPTN_ITM_SLS_TRX_KEY, /* Added as part of OA-Q1FY16*/
  W_BOOKINGS_MEASURE.FISCAL_YEAR_QUARTER_NUMBER_INT, /* ADDED AS PART OF sep 27TH CD RELEASE */
  W_BOOKINGS_MEASURE.DV_AR_TRX_LINE_KEY,/*Added as part of Q3FY16-Offer Attribution*/
  W_BOOKINGS_MEASURE.XAAS_OFFER_ATRBTN_REV_LINE_KEY, /*Added as part of Q3FY16-Offer Attribution*/
  W_BOOKINGS_MEASURE.DV_DEAL_ID, /*Added as part of Q4FY16 -XAAS*/
 W_BOOKINGS_MEASURE.TSS_COUNTRY_FACTOR_KEY,
  W_BOOKINGS_MEASURE.DV_BKG_GROSS_MGN_AMOUNT,
  W_BOOKINGS_MEASURE.DV_BGM_FX_COST_AMOUNT,
  W_BOOKINGS_MEASURE.DV_FX_NET_PRICE_AMT /*BGM Changes Q1FY17*/
  /*Added the below columns as part of RO project for Q3FY17 */
  ,W_BOOKINGS_MEASURE.XCAT_FLG
  ,W_BOOKINGS_MEASURE.BK_OFFER_TYPE_NAME
  ,W_BOOKINGS_MEASURE.RECURRING_OFFER_FLG
  ,W_BOOKINGS_MEASURE.ELA_FLG
  ,W_BOOKINGS_MEASURE.DV_LOCAL_EXTND_LIST_PRICE_AMT 
,W_BOOKINGS_MEASURE.LOCAL_UNIT_LIST_PRICE_AMT     
,W_BOOKINGS_MEASURE.DV_UNIT_LIST_PRICE_USD_AMT
-- ,CAST(0.0 AS DECIMAL(18,6))DV_TOTAL_CNTRCT_VAL_USD_AMT  
,W_BOOKINGS_MEASURE.DV_ORDER_VALUE_USD_AMOUNT
,W_BOOKINGS_MEASURE.DV_MTHLY_RCR_REV_TRXL_USD_AMT /* modified as part of Sub Metrics FY19 May2Rel R18396*/
 ,CAST(0.0 AS DECIMAL(18,6))DV_INCRML_MTHY_RCRR_RV_USD_AMT 
,W_BOOKINGS_MEASURE.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT /* modified as part of Sub Metrics FY19 May2Rel R18396*/
 ,CAST(0.0 AS DECIMAL(18,6))DV_INCRML_ANNL_RCRR_RV_USD_AMT 
 ,CAST (TRIM(W_BOOKINGS_MEASURE.PRODUCT_KEY) || '~' || TRIM(COALESCE(W_BOOKINGS_MEASURE.DV_PRODUCT_KEY,-999)) ||  '~' || TRIM(W_BOOKINGS_MEASURE.SALES_ORDER_KEY) ||  '~' || TRIM(COALESCE(W_BOOKINGS_MEASURE.SK_OFFER_ATTRIBUTION_ID_INT,-9999))AS VARCHAR(70)) 
  AS DV_RECURRING_OFFER_CD /*  added as part of June29th2017 */
  ,W_BOOKINGS_MEASURE.DV_PURCHASE_ADJ_DSCNT_USD_AMT/*Q1FY18*/
  ,W_BOOKINGS_MEASURE.DV_BGM_NON_STANDARD_COST_AMT /*added as part product BGM - Q1FY18 release */
,W_BOOKINGS_MEASURE.POB_TYPE_CD
,W_BOOKINGS_MEASURE.DV_BKG_REBATE_AMT
,W_BOOKINGS_MEASURE.DV_FX_REBATE_PRICE_AMT
,W_BOOKINGS_MEASURE.SK_SALES_MOTION_ATTRIB_KEY /* Added as part of SALES FY18 May12Rel */
,W_BOOKINGS_MEASURE.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,W_BOOKINGS_MEASURE.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,W_BOOKINGS_MEASURE.DV_ENRICHED_CONTRACT_DURATION
,W_BOOKINGS_MEASURE.DV_ENRICHMENT_RULE_DESC
/* added as part of 10th March release*/
,W_BOOKINGS_MEASURE.ENRICHED_END_CUSTOMER_KEY
,W_BOOKINGS_MEASURE.DV_ENRICHED_UNK_END_CUST_RULE_DESC
/* added as part of ACV - MAY release */
,W_BOOKINGS_MEASURE.BOOKINGS_POLICY_CD
,W_BOOKINGS_MEASURE.DV_INV_DTM
,W_BOOKINGS_MEASURE.DV_COMPENSATION_DTM
  FROM
  $$WORKDB.W_BOOKINGS_MEASURE W_BOOKINGS_MEASURE
  WHERE W_BOOKINGS_MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS' /* Added as part of BKGS REFRESH  changes Q4FY15 CR */


Post SQL : 



Target1 Name : N_BOOKINGS_MEASURE


Pre SQL : 
/*ADDED AS PART OF EDW_FY19 NOV08REL CR11701*/
UPDATE WBM
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM,
(SELECT
NBM.BOOKINGS_MEASURE_KEY
,NBM.BOOKINGS_PROCESS_DATE
,NBM.BKGS_MEASURE_TRANS_TYPE_CODE
,NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT
,NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT
,NBM.DV_ENRICHED_CONTRACT_DURATION
,NBM.DV_ENRICHMENT_RULE_DESC
,NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT
,NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT
,NBM.ENRICHED_END_CUSTOMER_KEY     
,NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC 
,NBM.DV_END_CUSTOMER_KEY
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
ON (WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
    AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
                AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE)
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS')
)NBM
SET
DV_ENRICHED_SERVICE_CONTRACT_START_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=NBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=NBM.DV_ENRICHED_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=NBM.DV_ENRICHMENT_RULE_DESC,
DV_MTHLY_RCR_REV_TRXL_USD_AMT=NBM.DV_MTHLY_RCR_REV_TRXL_USD_AMT,
DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=NBM.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT,
ENRICHED_END_CUSTOMER_KEY=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN WBM.DV_END_CUSTOMER_KEY ELSE NBM.ENRICHED_END_CUSTOMER_KEY END,/*Modified as part of PR18952*/
DV_ENRICHED_UNK_END_CUST_RULE_DESC=CASE WHEN WBM.DV_END_CUSTOMER_KEY <> NBM.DV_END_CUSTOMER_KEY THEN 'Bookings End Customer' ELSE NBM.DV_ENRICHED_UNK_END_CUST_RULE_DESC END/*Modified as part of PR18952*/
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'
	AND WBM.BOOKINGS_MEASURE_KEY=NBM.BOOKINGS_MEASURE_KEY
    AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE
	AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE;


DELETE FROM $$STGDB.WI_W_NBM_PROCESS_DATES ALL;

INSERT INTO $$STGDB.WI_W_NBM_PROCESS_DATES
SELECT WBM.BOOKINGS_PROCESS_DATE
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM
WHERE WBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'
GROUP BY 1;

/*this is to update edw_create_datetime for older transactions*/

UPDATE WBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$WORKDB.W_BOOKINGS_MEASURE WBM,
	$$STGDB.WI_W_NBM_PROCESS_DATES PD
SET     EDW_CREATE_DATETIME=NBM.EDW_CREATE_DATETIME
WHERE 	NBM.BOOKINGS_PROCESS_DATE = PD.PROCESS_DATE  
	AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'  /*Added as part of BKGS REFRESH changes */;

DELETE NBM
FROM 	$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
	$$WORKDB.W_BOOKINGS_MEASURE WBM,
	$$STGDB.WI_W_NBM_PROCESS_DATES PD
WHERE 	NBM.BOOKINGS_PROCESS_DATE = PD.PROCESS_DATE  
	AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=   WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'  /*Added as part of BKGS REFRESH changes */;


Post SQL : 
/*RETRO UPDATE FOR NBM DSV_BKG CUSTOMERS*/
 
 UPDATE NB
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NB,
 $$SLSORDVWDB.N_DRVD_SCA_POS_ADJ_DETAILS POS_DETAIL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FD,
 $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE P
 SET
 BILL_TO_CUSTOMER_KEY = P.BK_BILL_TO_WIPS_SITE_USE_KEY,
 SHIP_TO_CUSTOMER_KEY=P.BK_SHIP_TO_WIPS_SITE_USE_KEY,
 SOLD_TO_CUSTOMER_KEY=P.BK_SOLD_TO_WIPS_SITE_USE_KEY,
 END_CUSTOMER_KEY=P.BK_END_USER_WIPS_SITE_USE_KEY,
 DV_END_CUSTOMER_KEY= CASE 
                                                 WHEN POS_DETAIL.DISTRIBUTOR_OFFSET_FLAG = 'Y'
                                                 THEN CAST (-888 AS INTEGER)
                                                 ELSE BK_END_USER_WIPS_SITE_USE_KEY END,
 WIPS_ORIGINATOR_ID_INT=P.BK_WIPS_ORIGINATOR_ID_INT,
 EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
 WHERE 1=1
 AND NB.BOOKINGS_PROCESS_DATE = FD.CALENDAR_DATE
 AND FD.FISCAL_YEAR_MONTH_INT = NB.DV_FISCAL_YEAR_MTH_NUMBER_INT
 AND NB.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS','POS_ADJ')
 AND NB.BK_POS_TRANSACTION_ID_INT = P.BK_POS_TRANSACTION_ID_INT
 AND P.BK_SOLD_TO_WIPS_SITE_USE_KEY <> NB.SOLD_TO_CUSTOMER_KEY
 AND POS_DETAIL.ALLOCATED_POS_ADJ_KEY=NB.BOOKINGS_MEASURE_KEY
 AND FD.CURRENT_FISCAL_MONTH_FLAG='Y';
 
 
 /*RETRO UPDATE FOR NBM POS CUSTOMERS*/
 
 UPDATE NB
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NB,
 $$SLSORDVWDB.N_DRVD_SCA_POS_ADJ_DETAILS POS_DETAIL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FD,
 $$SLSORDVWDB.N_POS_TRANSACTION_LINE P
 SET
 BILL_TO_CUSTOMER_KEY = P.BK_BILL_TO_WIPS_SITE_USE_KEY,
 SHIP_TO_CUSTOMER_KEY=P.BK_SHIP_TO_WIPS_SITE_USE_KEY,
 SOLD_TO_CUSTOMER_KEY=P.BK_SOLD_TO_WIPS_SITE_USE_KEY,
 END_CUSTOMER_KEY=P.BK_END_USER_WIPS_SITE_USE_KEY,
 DV_END_CUSTOMER_KEY= CASE 
                                                 WHEN POS_DETAIL.DISTRIBUTOR_OFFSET_FLAG = 'Y'
                                                 THEN CAST (-888 AS INTEGER)
                                                 ELSE BK_END_USER_WIPS_SITE_USE_KEY END,
 WIPS_ORIGINATOR_ID_INT=P.BK_WIPS_ORIGINATOR_ID_INT,
 EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
 WHERE 1=1
 AND NB.BOOKINGS_PROCESS_DATE = FD.CALENDAR_DATE
 AND FD.FISCAL_YEAR_MONTH_INT = NB.DV_FISCAL_YEAR_MTH_NUMBER_INT
 AND NB.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS','POS_ADJ')
 AND NB.BK_POS_TRANSACTION_ID_INT = P.BK_POS_TRANSACTION_ID_INT
 AND P.BK_SOLD_TO_WIPS_SITE_USE_KEY <> NB.SOLD_TO_CUSTOMER_KEY
 AND POS_DETAIL.ALLOCATED_POS_ADJ_KEY=NB.BOOKINGS_MEASURE_KEY
 AND FD.CURRENT_FISCAL_MONTH_FLAG='Y';      


/* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */

UPDATE NBM
 FROM
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
  ( SELECT SK_SALES_MOTION_ATTRIB_KEY,
           DV_TRANSACTION_ID,
		   DV_ENTERPRISE_INV_SKU_ID,
		   DV_TRX_TYPE,
		   NSOL.RTNR_ELGIBILITY_FLG RTNR_ELGIBILITY_FLG 
		   FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION  MT
		   INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
			ON CASE WHEN MT.SALES_ORDER_LINE_KEY < 0 THEN -7777 ELSE MT.SALES_ORDER_LINE_KEY END  = NSOL.SALES_ORDER_LINE_KEY
		    WHERE DV_TRX_TYPE = 'POS'
			  AND END_TV_DTM  ='3500-01-01 00:00:00'
			  AND  NSOL.SS_CODE = 'CG'
			  --AND  NSOL.RTNR_ELGIBILITY_FLG <> 'N' /*SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging*/
              AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
                                WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_POS' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_pos' ) 
			GROUP BY 1,2,3,4,5
   ) MT
SET SK_SALES_MOTION_ATTRIB_KEY = MT.SK_SALES_MOTION_ATTRIB_KEY,
    EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
	EDW_UPDATE_USER = USER
WHERE MT.DV_TRANSACTION_ID=NBM.BK_POS_TRANSACTION_ID_INT
AND MT.DV_ENTERPRISE_INV_SKU_ID =NBM.DV_PRODUCT_KEY
AND MT.DV_TRX_TYPE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE  
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS'
AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
AND FDY.FISCAL_YEAR_NUMBER_INT >= 2016;
--AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> MT.SK_SALES_MOTION_ATTRIB_KEY ; /* Commented as part of ACV FY21 AUG 16 rel to allow incr updates even if SMA key is same */


/* Update added on Dec 18th 2019 as part of Sales Motion NA fix */

UPDATE NBM 
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
      $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
(SELECT DV_TRANSACTION_ID BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION  MT
		   INNER JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
			ON MT.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
			AND MT.SALES_ORDER_LINE_KEY > 0
		    WHERE DV_TRX_TYPE = 'POS'
			  AND END_TV_DTM  ='3500-01-01 00:00:00'
			  AND  NSOL.SS_CODE = 'CG'
			  AND  NSOL.RTNR_ELGIBILITY_FLG = 'N'
              AND EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES 
                                WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_POS' AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_pos' )
			  AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
								WHERE SQ.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
								  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' ) /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
	GROUP BY 1
	) SOL
	 SET SK_SALES_MOTION_ATTRIB_KEY = -777,		
		EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
	 WHERE NBM.BK_POS_TRANSACTION_ID_INT=SOL.BK_POS_TRANSACTION_ID_INT
	  AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
	 AND  FDY.FISCAL_YEAR_NUMBER_INT >= 2016
	 AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> -777
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS' ;



UPDATE CTL 
FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
     ( SELECT MAX(EDW_UPDATE_DTM) MAX_UPDATE_DTM 
	    FROM $$SLSORDVWDB.MT_BKG_SLS_MOTION_ATTRIBUTION 
      ) WI  
SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_POS' 
AND TABLE_NAME = 'MT_BKG_SLS_MOTION_ATTRIBUTION_pos' ;

/* Q4FY18 RTR ATTRIBUTION: sales-di@cisco.com */


/* UPDATE FOR N_BOOKINGS_MEASURE -- POS --*/

UPDATE NBM 
 FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
      $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FDY,
(SELECT BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_POS_TRX_LN_AS_NEW_OR_RNWL_TV 
  WHERE SALES_ORDER_LINE_KEY IN (SELECT SALES_ORDER_LINE_KEY  FROM $$SLSORDVWDB.N_SALES_ORDER_LINE NSOL
  WHERE SALES_ORDER_LINE_KEY > 0 AND RTNR_ELGIBILITY_FLG = 'N' AND NSOL.SS_CODE = 'CG'
	AND EDW_UPDATE_DATETIME >= ( SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES
	 WHERE JOB_STREAM_ID ='WF_N_BOOKINGS_MEASURE_POS'
	 AND TABLE_NAME = 'N_SALES_ORDER_LINE')
	 AND NOT EXISTS ( SEL 1 FROM $$SLSORDVWDB.MT_SUMMARY_QUOTE_SOL_ALLOC SQ
					WHERE NSOL.SALES_ORDER_LINE_KEY = SQ.SALES_ORDER_LINE_KEY
					  AND SQ.DV_EXPIRATION_DTM = '3500-01-01 00:00:00' ) /* SMA KEY updates change for RTNR ELGIBILITY FLG restriction removal for SQ tagging */
	 )
	AND END_TV_DTM = '3500-01-01 00:00:00'
	 GROUP BY 1) SOL
	 SET SK_SALES_MOTION_ATTRIB_KEY = -777,		
		EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
	 WHERE NBM.BK_POS_TRANSACTION_ID_INT=SOL.BK_POS_TRANSACTION_ID_INT
	  AND NBM.BOOKINGS_PROCESS_DATE = FDY.CALENDAR_DATE
	 AND  FDY.FISCAL_YEAR_NUMBER_INT >= 2016
	 AND NBM.SK_SALES_MOTION_ATTRIB_KEY <> -777
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS' ;

UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES CTL,
      ( SELECT MAX(EDW_UPDATE_DATETIME) MAX_UPDATE_DTM 
      FROM $$SLSORDVWDB.N_SALES_ORDER_LINE 
       ) WI  
 SET LAST_EXTRACT_DATE = COALESCE(WI.MAX_UPDATE_DTM,CTL.LAST_EXTRACT_DATE) 
 WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_POS' 
 AND TABLE_NAME = 'N_SALES_ORDER_LINE' ;

 
 
/* to UPDATE INVOICE DTM for DSV-BKG data */

UPDATE NBM 
FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
( SELECT NBKG.BK_POS_TRANSACTION_ID_INT, NPOS.POS_TRX_LINE_POSTED_DATE AS DV_INV_DTM,NPOS.BK_BOOKING_POS_TRX_ID_INT
FROM $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE  NBKG
INNER  JOIN $$SLSORDVWDB.N_POS_TRANSACTION_LINE NPOS
ON NBKG.BK_POS_TRANSACTION_ID_INT=NPOS.BK_BOOKING_POS_TRX_ID_INT
AND NPOS.DSV_OR_POS_TYPE_CD='DSV_POS'
----AND NBKG.EDW_UPDATE_DTM > ( SELECT LAST_EXTRACT_DATE FROM $$STGDB.WI_POS_DSVBKG_INV)
group by 1,2,3 
    QUALIFY RANK() OVER (PARTITION BY BK_BOOKING_POS_TRX_ID_INT  ORDER BY NPOS.POS_TRX_LINE_POSTED_DATE DESC)=1
) INV
SET DV_INV_DTM= CAST (INV.DV_INV_DTM AS TIMESTAMP(0)),
EDW_UPDATE_DATETIME=CURRENT_TIMESTAMP(0)
WHERE NBM.BK_POS_TRANSACTION_ID_INT=INV.BK_POS_TRANSACTION_ID_INT
AND NBM.DSV_FLG='Y'
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='POS'
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT>=201801
AND NBM.DV_INV_DTM IS NULL;


Source2 Name : SQ_WI_BOOKINGS_MSR_INTRAD_DEL


Pre SQL : 
DELETE FROM $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL WHERE  BKGS_MEASURE_TRANS_TYPE_CODE   = 'POS';


SQL Query : 
SELECT 
MDSPD.ALLOCATED_POS_ADJ_KEY  AS  BOOKINGS_MEASURE_KEY , 
MDSPD.PROCESS_DT AS PROCESS_DATE  ,
'POS'  AS  BKGS_MEASURE_TRANS_TYPE_CODE,
MDSPD.EDW_UPDATE_DTM AS EDW_UPDATE_DATETIME
FROM
$$SLSORDVWDB.MT_DRVD_SCA_POS_ADJ_DTLS_DEL MDSPD
WHERE MDSPD.EDW_UPDATE_DTM > (SELECT LAST_EXTRACT_DATE FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES WHERE JOB_STREAM_ID='wf_N_BOOKINGS_MEASURE_POS' AND TABLE_NAME='MT_DRVD_SCA_POS_ADJ_DTLS_DEL')


Post SQL : 



Target2 Name : WI_BOOKINGS_MSR_INTRAD_DEL1


Pre SQL : 



Post SQL : 
COLLECT STATS ON $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL ;

/* To delete the data from Measure table for both POS, SLS_ADJ and POS_ADJ*/
DELETE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE  NBM,
	 $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL WBM
WHERE NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY           
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS';
	
DELETE MT
FROM $$SLSORDVWDB.MT_NAMD_ACNT_BKGS_MEASURE MT,
	 $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL WBM
WHERE 	
	MT.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
	AND MT.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
	AND MT.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS';

	
/* To update the last_extract_date in the control table  for POS data */
UPDATE CTL 
 FROM $$ETLVWDB.CTL_ETL_LAST_EXTRACT_DATES  CTL , 
     ( SEL MAX(EDW_UPDATE_DATETIME) AS EDW_UPDATE_DATETIME FROM $$STGDB.WI_BOOKINGS_MSR_INTRAD_DEL WHERE BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'  ) WI
SET LAST_EXTRACT_DATE = COALESCE(WI.EDW_UPDATE_DATETIME,CTL.LAST_EXTRACT_DATE)
WHERE JOB_STREAM_ID = 'wf_N_BOOKINGS_MEASURE_POS' AND TABLE_NAME='MT_DRVD_SCA_POS_ADJ_DTLS_DEL';


Source3 Name : SQ3_WI_BOOKINGS_SW_ANNUALISED_POS


Pre SQL : 



SQL Query : 
SELECT 
  NBM1.BOOKINGS_MEASURE_KEY,
  NBM1.BOOKINGS_PROCESS_DATE,
  NBM1.BKGS_MEASURE_TRANS_TYPE_CODE ,
  NBM1.CONTRACT_START_DTM,
  NBM1.CONTRACT_END_DTM,
  NBM1.CONTRACT_DURATION,
  NBM1.ANNUALIZED_FLG
  
  FROM 
  (
  SELECT
  NBM.BOOKINGS_MEASURE_KEY,
  NBM.BK_POS_TRANSACTION_ID_INT,
  NBM.BOOKINGS_PROCESS_DATE,
  NBM.BKGS_MEASURE_TRANS_TYPE_CODE ,
  CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE ) AS  CONTRACT_START_DTM,
  CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE ) AS CONTRACT_END_DTM,
	CASE WHEN SERVICE_FLG='N'			  
		THEN
  CASE 
  	WHEN ( CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  > 0 
                 THEN  CAST((CAST(CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
     WHEN  NSOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT > 0    THEN NSOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
   WHEN ( NP.BK_PRODUCT_ID LIKE 'SWOA%' OR  NP.BK_PRODUCT_ID LIKE '%ADJ%' )AND NP.BK_PRODUCT_ID NOT LIKE 'SWOA-MX%'  THEN NULL
   ELSE CASE
      WHEN NP.PRICING_UNIT_NAME = 'YEAR' THEN NP.PRICING_UNIT_DURATION_INT * 12 
      WHEN NP.PRICING_UNIT_NAME = 'MONTHS' THEN NP.PRICING_UNIT_DURATION_INT  
	  /* Added as part of June-2018 Meraki scope - goponnus */  
  WHEN NP.PRICING_UNIT_NAME = 'DAYS' THEN ((NP.PRICING_UNIT_DURATION_INT *12)/365)
 WHEN EL.BIZ_DEF_TERM IS NOT NULL THEN EL.BIZ_DEF_TERM
      WHEN EL.DURATION IS NOT NULL THEN EL.DURATION
    ELSE NULL
     END 
			  END  
		ELSE
		CASE 
  	WHEN ( CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE ) - CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE ) )  > 0
                 THEN  CAST((CAST(CAST(NSOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) -  CAST(NSOL.RU_SERVICE_CONTRACT_START_DTM AS DATE) AS INTEGER)*12(FLOAT))/365 AS DECIMAL(15,6) )
     WHEN  NSOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT > 0    THEN NSOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT
END 
END			  CONTRACT_DURATION ,
    
  CASE WHEN CONTRACT_DURATION IS NULL THEN 'Y' 
   WHEN CONTRACT_DURATION IS NOT NULL THEN
   CASE
     WHEN NP.MONETIZATION_TYPE_CD ='PERPETUAL' AND NP.ELA_FLG = 'Y' THEN 'Y'  
     WHEN COALESCE ( EX.EXCLUDE_FLAG,'N' ) = 'Y' THEN 'Y' 
     WHEN EX.EXCLUDE_FLAG IS NOT NULL AND EX.EXCLUDE_FLAG = 'N'  
     THEN     CASE  WHEN   CONTRACT_DURATION >12   AND NP.MONETIZATION_TYPE_CD <>'USAGE'  THEN 'N' ELSE 'Y' END
     WHEN CONTRACT_DURATION >12 AND NP.MONETIZATION_TYPE_CD <>'USAGE'  AND NBM.XCAT_FLG <>'Y' AND FDM.BK_DEAL_ID IS NULL THEN 'N' ELSE 'Y'
   END
  END ANNUALIZED_FLG
    
  FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  /*INNER  JOIN (SELECT 
      DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD,BK_PRDT_ALLCTN_CLSFCTN_CD,ALLOCATION_PCT
      FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN  WHERE  BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS','UNKNOWN')
      GROUP BY 1,2,3,4,5
      QUALIFY RANK()  OVER (PARTITION BY DV_FISCAL_YEAR_QUARTER_NUM_INT,PRODUCT_KEY, BK_PRDT_ALLCTN_METRIC_CD  
      ORDER BY  BK_PRDT_ALLCTN_CLSFCTN_CD DESC  ) = 1
     ) ALCTN
  ON NBM.PRODUCT_KEY= ALCTN.PRODUCT_KEY AND NBM.FISCAL_YEAR_QUARTER_NUMBER_INT=ALCTN.DV_FISCAL_YEAR_QUARTER_NUM_INT*/
  
  INNER JOIN 
    $$COMREFVWDB.N_PRODUCT NP
      ON NBM.PRODUCT_KEY=NP.ITEM_KEY
   LEFT OUTER JOIN 
  ( 
SELECT  
BKG_POS.BK_POS_TRANSACTION_ID_INT,
TRNWL.SALES_ORDER_LINE_KEY
 FROM   $$SLSORDVWDB.N_POS_TRANSACTION_LINE                      TPOS
INNER JOIN $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL    TRNWL
ON TRNWL.BK_POS_TRANSACTION_ID_INT=  TPOS.BK_POS_TRANSACTION_ID_INT
INNER JOIN $$SLSORDVWDB.N_BKG_POS_TRANSACTION_LINE       BKG_POS
ON BKG_POS.BK_POS_TRANSACTION_ID_INT                =  TPOS.BK_BOOKING_POS_TRX_ID_INT
WHERE TRNWL.MATCHING_MTHD_FOR_TAGGING_NAME  NOT LIKE ALL (		'%GSP%' ,	'%HQ%',  '%GU%')
AND TRNWL.SALES_ORDER_LINE_KEY > 0
UNION

SELECT 
TPOS.BK_POS_TRANSACTION_ID_INT,
TRNWL.SALES_ORDER_LINE_KEY
FROM  $$SLSORDVWDB.N_POS_TRANSACTION_LINE                          TPOS
INNER JOIN $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL        TRNWL
ON TRNWL.BK_POS_TRANSACTION_ID_INT= TPOS.BK_POS_TRANSACTION_ID_INT
WHERE TRNWL.MATCHING_MTHD_FOR_TAGGING_NAME  NOT LIKE ALL (		'%GSP%' ,	'%HQ%',  '%GU%')
AND TRNWL.SALES_ORDER_LINE_KEY > 0
GROUP BY 1,2
 )  SMC
ON NBM.BK_POS_TRANSACTION_ID_INT= SMC.BK_POS_TRANSACTION_ID_INT  
 
  LEFT OUTER   JOIN
      $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL
             ON SMC.SALES_ORDER_LINE_KEY   =NSOL.SALES_ORDER_LINE_KEY
 
 LEFT OUTER  JOIN   
     $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV  NSOLV1
           ON SMC.SALES_ORDER_LINE_KEY   =NSOLV1.SALES_ORDER_LINE_KEY 
  
 LEFT OUTER JOIN $$COMREFVWDB.N_PRODUCT_FAMILY NPF ON NP.RU_BK_PRODUCT_FAMILY_ID=NPF.BK_PRODUCT_FAMILY_ID
  LEFT OUTER JOIN 
 (SELECT SKU,INVENTORY_ITEM_ID,DURATION,BIZ_DEF_TERM FROM $$ETLVWDB.EL_CG1_XXCFIR_PROD_SUBSCR_SKU WHERE END_DATE IS NULL)EL 
  ON NP.BK_PRODUCT_ID=EL.SKU 
  /*LEFT JOIN 
  (SELECT BK_BOOKING_POS_TRX_ID_INT, SERVICE_CONTRACT_NUMBER FROM $$SLSORDVWDB.N_POS_TRANSACTION_LINE WHERE SERVICE_CONTRACT_NUMBER IS NOT NULL  GROUP BY 1,2)NPOS
  ON     NBM.BK_POS_TRANSACTION_ID_INT      = NPOS.BK_BOOKING_POS_TRX_ID_INT*/
       



  LEFT OUTER JOIN $$FINLGLVWDB.N_FCM_DEAL_MAPPING  FDM
  ON NBM.DV_DEAL_ID = FDM.BK_DEAL_ID
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = FDM.BK_DV_FISCAL_YEAR_MTH_NUM_INT
  
  LEFT OUTER JOIN $$STGDB.WI_ATCCV_EXCLUDE_TRX EX 
  ON EX.EXCLUDE_VALUE =  ( 
       CASE WHEN EX.EXCLUDE_REF_COLUMN_1 = 'RU_BK_PRODUCT_FAMILY_ID' THEN NP.RU_BK_PRODUCT_FAMILY_ID 
                         WHEN EXCLUDE_REF_COLUMN_1 = 'ADJUSTMENT_CODE'  THEN NBM.ADJUSTMENT_CODE
                         WHEN EXCLUDE_REF_COLUMN_1 = 'BK_PRODUCT_ID'  THEN NP.BK_PRODUCT_ID 
       WHEN EXCLUDE_REF_COLUMN_1='BK_BUSINESS_UNIT_ID' THEN NPF.BK_BUSINESS_UNIT_ID
       END ) 
  /*WHERE NBM.SERVICE_FLG  ='N'*/  /*COMMENTED AS PART OF ICPM Q1FY19 POS ENRICHMENT*/
  /*AND NBM.CORPORATE_BOOKINGS_FLG='Y' */
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
  /*AND ALCTN.BK_PRDT_ALLCTN_CLSFCTN_CD       IN  ( 'Software'  )*/
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'
  GROUP BY 1,2,3,4,5,6,7,8
  ) NBM1
  
  INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE MEASURE
  ON NBM1.BOOKINGS_MEASURE_KEY= MEASURE.BOOKINGS_MEASURE_KEY
  AND NBM1.BOOKINGS_PROCESS_DATE= MEASURE.BOOKINGS_PROCESS_DATE
  AND NBM1.BKGS_MEASURE_TRANS_TYPE_CODE= MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE      
  AND MEASURE.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'
  
  WHERE 
  (
  COALESCE(CAST(NBM1.CONTRACT_START_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST( '3500-01-01' AS DATE FORMAT 'YYYY-MM-DD') )<> COALESCE(CAST(MEASURE.RU_SERVICE_CONTRACT_START_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST ('3500-01-01' AS DATE FORMAT 'YYYY-MM-DD'))
  OR COALESCE(CAST(NBM1.CONTRACT_END_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST( '3500-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <> COALESCE(CAST(MEASURE.RU_SERVICE_CONTRACT_END_DTM AS DATE FORMAT 'YYYY-MM-DD'),CAST ('3500-01-01' AS DATE FORMAT 'YYYY-MM-DD'))
  OR COALESCE(NBM1.CONTRACT_DURATION,-1)  <>COALESCE(MEASURE.DV_CONTRACT_DURATION,-1)
  OR COALESCE(NBM1.ANNUALIZED_FLG,'=' )  <> COALESCE(MEASURE.DV_ANNUALIZED_FLG,'=' ) 
  )
AND 1=2


Post SQL : 
CALL COLLECT_STATS_WRAP  ('$$STGDB','WI_BOOKINGS_SW_ANNUALISED_POS','D');      
 
/* UPDATE NBM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
 ,$$STGDB.WI_BOOKINGS_SW_ANNUALISED_POS WI
 SET
 RU_SERVICE_CONTRACT_START_DTM = WI.CONTRACT_START_DTM,
 RU_SERVICE_CONTRACT_END_DTM = WI.CONTRACT_END_DTM,
 DV_CONTRACT_DURATION = WI.CONTRACT_DURATION,
 DV_ANNUALIZED_FLG = WI.ANNUALIZED_FLG,
 DV_ANNUALIZED_US_NET_AMT= (CASE WHEN ANNUALIZED_FLG = 'Y' THEN NBM.DD_COMP_US_NET_PRICE_AMOUNT
                                     WHEN ANNUALIZED_FLG = 'N' THEN ( NBM.DD_COMP_US_NET_PRICE_AMOUNT / CONTRACT_DURATION ) * 12
                                     ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
 DV_MULTIYEAR_US_NET_AMT = DD_COMP_US_NET_PRICE_AMOUNT - (CASE WHEN ANNUALIZED_FLG = 'Y' THEN NBM.DD_COMP_US_NET_PRICE_AMOUNT
                                     WHEN ANNUALIZED_FLG = 'N' THEN ( NBM.DD_COMP_US_NET_PRICE_AMOUNT / CONTRACT_DURATION ) * 12
                                     ELSE DD_COMP_US_NET_PRICE_AMOUNT END ) , 
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER = USER         
 WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
 AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
 AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='POS';
*/ 
 /*--------------------------------------------------------------*/
 /*POS ALLOCATION FOR SERVICES*/
 /*--------------------------------------------------------------*/
 
  /*DISTI POS*/
 
 /*DELETE FROM $$STGDB.WI_DISTI_POS_RATIO;
 
 INSERT INTO $$STGDB.WI_DISTI_POS_RATIO
 SELECT 
 FSH.LEVEL04_THEATER_NAME,
 SUM(ZEROIFNULL(DV_ANNUALIZED_US_NET_AMT))*100/SUM(ZEROIFNULL(DD_COMP_US_NET_PRICE_AMOUNT))ANNUAL_PCT,
 SUM(ZEROIFNULL(DV_MULTIYEAR_US_NET_AMT))*100/SUM(ZEROIFNULL(DD_COMP_US_NET_PRICE_AMOUNT))MULTI_YEAR_PCT
 FROM
 $$SLSORDVWDB.N_BOOKINGS_MEASURE BM
 INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY_FIN DSH
 ON BM.SALES_TERRITORY_KEY=DSH.SALES_TERRITORY_KEY
 INNER JOIN $$FINLGLVWDB.MT_FIN_SALES_THEATER_HIER FSH
 ON DSH.SALES_TERRITORY_KEY=FSH.SALES_TERRITORY_KEY
 INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR RDAYS
 ON BM.BOOKINGS_PROCESS_DATE=RDAYS.CALENDAR_DATE
 WHERE BM.CORPORATE_BOOKINGS_FLG = 'N'
 AND BM.SERVICE_FLG  =  'Y'
 AND BM.DD_COMP_US_NET_PRICE_AMOUNT<> 0
 AND BM.DV_NET_SPREAD_FLG         ='Y'
 AND BM.ADJUSTMENT_CODE='UNKNOWN'
 AND DSH.SALES_TERRITORY_TYPE_CODE IN ('CORP. REVENUE')
 AND DSH.DV_SALES_TERR_LEVEL_NUM_INT <=7
 AND DSH.L1_SALES_TERRITORY_NAME_CODE='WW Distribution'
 AND  RDAYS.FISCAL_YEAR_MONTH_INT   =(SELECT FISCAL_YEAR_MTH_NUMBER_INT   FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL CTRL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FY 
 WHERE FY.CALENDAR_DATE=CTRL.PROCESS_DATE)
 HAVING SUM(ZEROIFNULL(DD_COMP_US_NET_PRICE_AMOUNT))<>0
 AND SUM(ZEROIFNULL(DV_MULTIYEAR_US_NET_AMT))<>0
 GROUP BY 1;
 
 INSERT INTO $$STGDB.WI_DISTI_POS_RATIO
 SELECT 
 CASE 
                 WHEN LEVEL04_THEATER_NAME IN ('INTERNAL-APJ','INTERNAL-APJ-APJ','INTERNAL-APJC-APJC','INTERNAL-APJC - APJC')  THEN 'GET-APJC'
                 WHEN LEVEL04_THEATER_NAME='INTERNAL-AMERICAS' THEN 'GET-AMERICAS'
     WHEN LEVEL04_THEATER_NAME='INTERNAL-AMER - AMERICAS' THEN 'GET-AMERICAS'
                 WHEN LEVEL04_THEATER_NAME IN ('INTERNAL-EMEAR','INTERNAL-EMEAR-EMEAR','INTERNAL-EMEAR - EMEAR') THEN 'GET-EMEAR'
 END LEVEL04_THEATER_NAME1 ,
 CASE WHEN LEVEL04_THEATER_NAME1 = 'GET-APJC'THEN TEMP.AUN_PCT ELSE  ANNUAL_PCT END ANNUAL_PCT ,                             
 CASE WHEN LEVEL04_THEATER_NAME1 = 'GET-APJC'THEN TEMP.MUL_PCT ELSE  MULTI_YEAR_PCT END MULTI_YEAR_PCT              
 FROM $$STGDB.WI_DISTI_POS_RATIO,
 (SELECT AVG(ANNUAL_PCT)AUN_PCT,AVG(MULTI_YEAR_PCT)MUL_PCT FROM $$STGDB.WI_DISTI_POS_RATIO 
 WHERE LEVEL04_THEATER_NAME IN('INTERNAL-GREATER_CHINA','INTERNAL-APJ','INTERNAL-GC-GREATER_CHINA','INTERNAL-APJ-APJ','INTERNAL-EMEAR-EMEAR','INTERNAL-APJC-APJC','INTERNAL-APJC - APJC','INTERNAL-EMEAR - EMEAR'))TEMP
 WHERE LEVEL04_THEATER_NAME NOT IN('INTERNAL-GREATER_CHINA','INTERNAL-GC-GREATER_CHINA')
 
 UNION 
 
 SELECT 
 CASE 
                 WHEN LEVEL04_THEATER_NAME IN ('INTERNAL-APJ','INTERNAL-APJ-APJ','INTERNAL-APJC-APJC','INTERNAL-APJC - APJC')  THEN 'GSP-APJC'
                 WHEN LEVEL04_THEATER_NAME='INTERNAL-AMERICAS' THEN 'GSP-AMERICAS'
     WHEN LEVEL04_THEATER_NAME='INTERNAL-AMER - AMERICAS' THEN 'GSP-AMERICAS'
                 WHEN LEVEL04_THEATER_NAME IN ('INTERNAL-EMEAR','INTERNAL-EMEAR-EMEAR','INTERNAL-EMEAR - EMEAR') THEN 'GSP-EMEAR'
 END LEVEL04_THEATER_NAME1 ,
 CASE WHEN LEVEL04_THEATER_NAME1 = 'GSP-APJC' THEN TEMP.AUN_PCT ELSE ANNUAL_PCT END ANNUAL_PCT ,
 CASE WHEN LEVEL04_THEATER_NAME1 = 'GSP-APJC' THEN TEMP.MUL_PCT ELSE MULTI_YEAR_PCT END MULTI_YEAR_PCT
 FROM $$STGDB.WI_DISTI_POS_RATIO,
 (SELECT AVG (ANNUAL_PCT) AUN_PCT,AVG(MULTI_YEAR_PCT)MUL_PCT FROM $$STGDB.WI_DISTI_POS_RATIO 
 WHERE LEVEL04_THEATER_NAME IN('INTERNAL-GREATER_CHINA','INTERNAL-APJ','INTERNAL-GC-GREATER_CHINA','INTERNAL-APJ-APJ','INTERNAL-EMEAR-EMEAR','INTERNAL-APJC-APJC','INTERNAL-APJC - APJC','INTERNAL-EMEAR - EMEAR'))TEMP
 WHERE LEVEL04_THEATER_NAME NOT IN ('INTERNAL-GREATER_CHINA','INTERNAL-GC-GREATER_CHINA')
 ;
 
 COLLECT STATS $$STGDB.WI_DISTI_POS_RATIO; */
 
 /*STK DERIVATION*/
 
 /*DELETE  FROM  $$STGDB.WI_DISTI_POS_RATIO_STK;
 
 INSERT INTO $$STGDB.WI_DISTI_POS_RATIO_STK 
 SELECT 
 DSH.SALES_TERRITORY_KEY
 ,FSH.LEVEL04_THEATER_NAME
 ,POS_RATIO.ANNUAL_PCT                    
 ,POS_RATIO.MULTI_YEAR_PCT                
 FROM  $$COMREFVWDB.R_SALES_HIERARCHY_FIN  DSH
 INNER JOIN $$FINLGLVWDB.MT_FIN_SALES_THEATER_HIER FSH
 ON DSH.SALES_TERRITORY_KEY=FSH.SALES_TERRITORY_KEY
 INNER JOIN  $$STGDB.WI_DISTI_POS_RATIO POS_RATIO
 ON  POS_RATIO.LEVEL04_THEATER_NAME=FSH.LEVEL04_THEATER_NAME
 WHERE DSH.DV_SALES_TERR_LEVEL_NUM_INT <=7
 AND  DSH.SALES_TERRITORY_TYPE_CODE IN ('CORP. REVENUE')
 ;
 
 COLLECT STATS $$STGDB.WI_DISTI_POS_RATIO_STK;
 
 DELETE FROM $$STGDB.WI_POS_TRAINING_BKGS_KEY ;
  
  INSERT  INTO $$STGDB.WI_POS_TRAINING_BKGS_KEY
  SELECT BKGS.BOOKINGS_MEASURE_KEY , BKGS.BKGS_MEASURE_TRANS_TYPE_CODE ,
         BKGS.BOOKINGS_PROCESS_DATE , BKGS.SALES_TERRITORY_KEY , BKGS.SALES_REP_NUMBER 
    FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE BKGS 
   INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY_FIN SH 
   ON BKGS.SALES_TERRITORY_KEY = SH.SALES_TERRITORY_KEY INNER JOIN $$FINLGLVWDB.MT_FIN_SALES_THEATER_HIER FSH 
   ON SH.SALES_TERRITORY_KEY = FSH.SALES_TERRITORY_KEY INNER JOIN $$COMREFVWDB.R_PRODUCTS_FIN PRDS 
   ON BKGS.PRODUCT_KEY = PRDS.ITEM_KEY INNER JOIN $$COMREFVWDB.R_TRX_PRODUCT TPRDS 
   ON PRDS.ITEM_KEY = TPRDS.PRODUCT_KEY 
   INNER JOIN
   (
    SELECT ITEM_KEY  
      FROM $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SV2 
     WHERE SV2.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN' 
       AND DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
       AND SV2.BK_ALLOCATED_SERVC_GROUP_ID IN ( 'AS ADVISORY' , 'AS FIXED' ,'AS TRANSACTION' , 'TRAINING' ) 
   GROUP BY 1 ) SFH 
   ON BKGS.PRODUCT_KEY = SFH.ITEM_KEY
   INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR RDAYS 
   ON BKGS.BOOKINGS_PROCESS_DATE = RDAYS.CALENDAR_DATE 
  WHERE 
   BKGS.DV_REVENUE_RECOGNITION_FLG IN ( 'Y' ) 
   AND BKGS.SERVICE_FLG = 'Y' 
   AND BKGS.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS' 
   AND SH.DV_SALES_TERR_LEVEL_NUM_INT <= 7 
   AND SH.SALES_TERRITORY_TYPE_CODE = 'CORP. REVENUE' 
  AND  RDAYS.FISCAL_YEAR_MONTH_INT=(SELECT FISCAL_YEAR_MTH_NUMBER_INT           FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL CTRL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FY 
 WHERE FY.CALENDAR_DATE=CTRL.PROCESS_DATE) 
  GROUP BY 1 , 2 , 3 , 4 , 5;
  
  COLLECT STATS ON $$STGDB.WI_POS_TRAINING_BKGS_KEY; */
  
    /*Capturing Service Booking Measure Keys Qualified for Update*/
  
/* CREATE MULTISET VOLATILE TABLE POS_MY_AY_INCR_BMK_SVCS 
AS (
 SELECT BM.BOOKINGS_MEASURE_KEY FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE BM,
 $$STGDB.WI_DISTI_POS_RATIO_STK  POS_RATIO , 
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR RDAYS
 WHERE  
 NOT EXISTS ( SELECT 1 FROM $$STGDB.WI_POS_TRAINING_BKGS_KEY BM_POS
 WHERE BM.BOOKINGS_MEASURE_KEY  =   BM_POS.BOOKINGS_MEASURE_KEY  
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = BM_POS.BKGS_MEASURE_TRANS_TYPE_CODE   
 AND BM.BOOKINGS_PROCESS_DATE = BM_POS.BOOKINGS_PROCESS_DATE 
 AND BM.SALES_TERRITORY_KEY = BM_POS.SALES_TERRITORY_KEY   
 AND BM.SALES_REP_NUMBER = BM_POS.SALES_REP_NUMBER
 )
 AND BM.SALES_TERRITORY_KEY=POS_RATIO.SALES_TERRITORY_KEY
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS'
 AND BM.FORWARD_REVERSE_FLG='F'  ---Added to restrict only Forward Updates
 AND BM.SERVICE_FLG = 'Y'  ---Service Fix
 AND  COALESCE(BM.DV_CONTRACT_DURATION,0) =0
 AND BM.BOOKINGS_PROCESS_DATE=RDAYS.CALENDAR_DATE
AND  RDAYS.FISCAL_YEAR_WEEK_NUM_INT=(SELECT FISCAL_YEAR_WEEK_NUM_INT           FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL CTRL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FY 
 WHERE FY.CALENDAR_DATE=CTRL.PROCESS_DATE)
 GROUP BY 1)
WITH DATA ON COMMIT PRESERVE ROWS; */

 
 /*POS AMT CALCULATION FOR DISTI POS RATIO*/
/* UPDATE BM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE BM,
 $$STGDB.WI_DISTI_POS_RATIO_STK  POS_RATIO , 
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR RDAYS
 SET 
 DV_ANNUALIZED_FLG='N' ,
 DV_ANNUALIZED_US_NET_AMT=DD_COMP_US_NET_PRICE_AMOUNT*POS_RATIO.ANNUAL_PCT/100 ,
 DV_MULTIYEAR_US_NET_AMT=DD_COMP_US_NET_PRICE_AMOUNT*POS_RATIO.MULTI_YEAR_PCT/100,
 EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
 EDW_UPDATE_USER=USER
 WHERE  
 NOT EXISTS ( SELECT 1 FROM $$STGDB.WI_POS_TRAINING_BKGS_KEY BM_POS
 WHERE BM.BOOKINGS_MEASURE_KEY  =   BM_POS.BOOKINGS_MEASURE_KEY  
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE = BM_POS.BKGS_MEASURE_TRANS_TYPE_CODE   
 AND BM.BOOKINGS_PROCESS_DATE = BM_POS.BOOKINGS_PROCESS_DATE 
 AND BM.SALES_TERRITORY_KEY = BM_POS.SALES_TERRITORY_KEY   
 AND BM.SALES_REP_NUMBER = BM_POS.SALES_REP_NUMBER
 )
 AND BM.SALES_TERRITORY_KEY=POS_RATIO.SALES_TERRITORY_KEY
 AND BM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS'
 AND BM.FORWARD_REVERSE_FLG='F' ---Added to restrict only Forward Updates
 AND BM.SERVICE_FLG = 'Y'  ---Service Fix
 AND  COALESCE(BM.DV_CONTRACT_DURATION,0) =0
 AND BM.BOOKINGS_PROCESS_DATE=RDAYS.CALENDAR_DATE
AND  RDAYS.FISCAL_YEAR_WEEK_NUM_INT=(SELECT FISCAL_YEAR_WEEK_NUM_INT           FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL CTRL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FY 
 WHERE FY.CALENDAR_DATE=CTRL.PROCESS_DATE) */
 ;
/*--------------------------------------------------------------*/
 /*POS ALLOCATION FOR PRODUCTS*/
 /*--------------------------------------------------------------*/
 
 /*DELETE FROM $$STGDB.WI_DISTI_POS_RATIO_PRDT;
  
  INSERT INTO $$STGDB.WI_DISTI_POS_RATIO_PRDT
  SELECT 
  FSH.LEVEL04_THEATER_NAME,
 SUM(ZEROIFNULL(DV_ANNUALIZED_US_NET_AMT))*100/SUM(ZEROIFNULL(DD_COMP_US_NET_PRICE_AMOUNT))ANNUAL_PCT,
 SUM(ZEROIFNULL(DV_MULTIYEAR_US_NET_AMT))*100/SUM(ZEROIFNULL(DD_COMP_US_NET_PRICE_AMOUNT))MULTI_YEAR_PCT
  FROM
   $$SLSORDVWDB.N_BOOKINGS_MEASURE BM
  INNER JOIN $$COMREFVWDB.R_SALES_HIERARCHY_FIN DSH
  ON BM.SALES_TERRITORY_KEY=DSH.SALES_TERRITORY_KEY
  INNER JOIN $$FINLGLVWDB.MT_FIN_SALES_THEATER_HIER FSH
  ON DSH.SALES_TERRITORY_KEY=FSH.SALES_TERRITORY_KEY
  INNER JOIN $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR RDAYS
  ON BM.BOOKINGS_PROCESS_DATE=RDAYS.CALENDAR_DATE
  /*Q2FY19: included the below joins to select  software term data */
  /*INNER JOIN 
		$$COMREFVWDB.N_PRODUCT NP
				ON BM.PRODUCT_KEY=NP.ITEM_KEY
INNER  JOIN 
		$$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN ALCTN
				ON BM.PRODUCT_KEY= ALCTN.PRODUCT_KEY
				AND BM.FISCAL_YEAR_QUARTER_NUMBER_INT=ALCTN.DV_FISCAL_YEAR_QUARTER_NUM_INT
				AND ALCTN.BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS','UNKNOWN')
  WHERE BM.CORPORATE_BOOKINGS_FLG = 'N'
  AND BM.SERVICE_FLG  =  'N'
  AND BM.DD_COMP_US_NET_PRICE_AMOUNT<> 0
  AND BM.DV_NET_SPREAD_FLG         ='Y'
  AND BM.ADJUSTMENT_CODE='UNKNOWN'
  AND DSH.SALES_TERRITORY_TYPE_CODE IN ('CORP. REVENUE')
  AND DSH.DV_SALES_TERR_LEVEL_NUM_INT <=7
  AND DSH.L1_SALES_TERRITORY_NAME_CODE='WW Distribution'
  
  AND NP.MONETIZATION_TYPE_CD='TERM'
   AND ALCTN.BK_PRDT_ALLCTN_CLSFCTN_CD       IN  ( 'SOFTWARE'  )
  AND  RDAYS.FISCAL_YEAR_MONTH_INT=(SELECT FISCAL_YEAR_MTH_NUMBER_INT           FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL CTRL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FY 
 WHERE FY.CALENDAR_DATE=CTRL.PROCESS_DATE)
  HAVING SUM(ZEROIFNULL(DD_COMP_US_NET_PRICE_AMOUNT))<>0
  AND SUM(ZEROIFNULL(DV_MULTIYEAR_US_NET_AMT))<>0
  GROUP BY 1;
  
   INSERT INTO $$STGDB.WI_DISTI_POS_RATIO_PRDT
  SELECT 
  CASE 
                  WHEN LEVEL04_THEATER_NAME IN ('INTERNAL-APJ','INTERNAL-APJ-APJ','INTERNAL-APJC-APJC','INTERNAL-APJC - APJC')  THEN 'GET-APJC'
                  WHEN LEVEL04_THEATER_NAME='INTERNAL-AMERICAS' THEN 'GET-AMERICAS'
      WHEN LEVEL04_THEATER_NAME='INTERNAL-AMER - AMERICAS' THEN 'GET-AMERICAS'
                  WHEN LEVEL04_THEATER_NAME IN ('INTERNAL-EMEAR','INTERNAL-EMEAR-EMEAR','INTERNAL-EMEAR - EMEAR') THEN 'GET-EMEAR'
  END LEVEL04_THEATER_NAME1 ,
  CASE WHEN LEVEL04_THEATER_NAME1 = 'GET-APJC'THEN TEMP.AUN_PCT ELSE  ANNUAL_PCT END ANNUAL_PCT ,                             
  CASE WHEN LEVEL04_THEATER_NAME1 = 'GET-APJC'THEN TEMP.MUL_PCT ELSE  MULTI_YEAR_PCT END MULTI_YEAR_PCT              
  FROM $$STGDB.WI_DISTI_POS_RATIO_PRDT,
  (SELECT AVG(ANNUAL_PCT)AUN_PCT,AVG(MULTI_YEAR_PCT)MUL_PCT FROM $$STGDB.WI_DISTI_POS_RATIO_PRDT 
  WHERE LEVEL04_THEATER_NAME IN('INTERNAL-GREATER_CHINA','INTERNAL-APJ','INTERNAL-GC-GREATER_CHINA','INTERNAL-APJ-APJ','INTERNAL-EMEAR-EMEAR','INTERNAL-APJC-APJC','INTERNAL-APJC - APJC','INTERNAL-EMEAR - EMEAR'))TEMP
  WHERE LEVEL04_THEATER_NAME NOT IN('INTERNAL-GREATER_CHINA','INTERNAL-GC-GREATER_CHINA')
  
  UNION 
  
  SELECT 
  CASE 
                  WHEN LEVEL04_THEATER_NAME IN ('INTERNAL-APJ','INTERNAL-APJ-APJ','INTERNAL-APJC-APJC','INTERNAL-APJC - APJC')  THEN 'GSP-APJC'
                  WHEN LEVEL04_THEATER_NAME='INTERNAL-AMERICAS' THEN 'GSP-AMERICAS'
      WHEN LEVEL04_THEATER_NAME='INTERNAL-AMER - AMERICAS' THEN 'GSP-AMERICAS'
                  WHEN LEVEL04_THEATER_NAME IN ('INTERNAL-EMEAR','INTERNAL-EMEAR-EMEAR','INTERNAL-EMEAR - EMEAR') THEN 'GSP-EMEAR'
  END LEVEL04_THEATER_NAME1 ,
  CASE WHEN LEVEL04_THEATER_NAME1 = 'GSP-APJC' THEN TEMP.AUN_PCT ELSE ANNUAL_PCT END ANNUAL_PCT ,
  CASE WHEN LEVEL04_THEATER_NAME1 = 'GSP-APJC' THEN TEMP.MUL_PCT ELSE MULTI_YEAR_PCT END MULTI_YEAR_PCT
  FROM $$STGDB.WI_DISTI_POS_RATIO_PRDT,
  (SELECT AVG (ANNUAL_PCT) AUN_PCT,AVG(MULTI_YEAR_PCT)MUL_PCT FROM $$STGDB.WI_DISTI_POS_RATIO_PRDT 
  WHERE LEVEL04_THEATER_NAME IN('INTERNAL-GREATER_CHINA','INTERNAL-APJ','INTERNAL-GC-GREATER_CHINA','INTERNAL-APJ-APJ','INTERNAL-EMEAR-EMEAR','INTERNAL-APJC-APJC','INTERNAL-APJC - APJC','INTERNAL-EMEAR - EMEAR'))TEMP
  WHERE LEVEL04_THEATER_NAME NOT IN ('INTERNAL-GREATER_CHINA','INTERNAL-GC-GREATER_CHINA')
  ;
  
COLLECT STATS $$STGDB.WI_DISTI_POS_RATIO_PRDT; */
  
  /*STK DERIVATION*/
  
 /* DELETE  FROM $$STGDB.WI_DISTI_POS_RATIO_STK_PRDT;
  
  INSERT INTO $$STGDB.WI_DISTI_POS_RATIO_STK_PRDT 
  SELECT 
  DSH.SALES_TERRITORY_KEY
  ,FSH.LEVEL04_THEATER_NAME
  ,POS_RATIO.ANNUAL_PCT                    
  ,POS_RATIO.MULTI_YEAR_PCT                
  FROM  $$COMREFVWDB.R_SALES_HIERARCHY_FIN  DSH
  INNER JOIN $$FINLGLVWDB.MT_FIN_SALES_THEATER_HIER FSH
  ON DSH.SALES_TERRITORY_KEY=FSH.SALES_TERRITORY_KEY
  INNER JOIN $$STGDB.WI_DISTI_POS_RATIO_PRDT POS_RATIO
  ON  POS_RATIO.LEVEL04_THEATER_NAME=FSH.LEVEL04_THEATER_NAME
  WHERE DSH.DV_SALES_TERR_LEVEL_NUM_INT <=7
  AND  DSH.SALES_TERRITORY_TYPE_CODE IN ('CORP. REVENUE')
  ;
  
 COLLECT STATS $$STGDB.WI_DISTI_POS_RATIO_STK_PRDT; */
 
  /*Capturing Product Booking Measure Keys Qualified for Update*/
  
/* CREATE MULTISET VOLATILE TABLE POS_MY_AY_INCR_BMK_PRDT 
AS (SELECT BM.BOOKINGS_MEASURE_KEY FROM 
  $$SLSORDVWDB.N_BOOKINGS_MEASURE BM,
  $$STGDB.WI_DISTI_POS_RATIO_STK_PRDT  POS_RATIO , 
  $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR RDAYS
  WHERE BM.SALES_TERRITORY_KEY=POS_RATIO.SALES_TERRITORY_KEY
  AND BM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS'
  AND BM.SERVICE_FLG = 'N'  
  AND BM.FORWARD_REVERSE_FLG='F' ---Added to restrict only Forward Updates
  AND  COALESCE(BM.DV_CONTRACT_DURATION,0) =0
  AND BM.BOOKINGS_PROCESS_DATE=RDAYS.CALENDAR_DATE
  AND  RDAYS.FISCAL_YEAR_WEEK_NUM_INT=(SELECT FISCAL_YEAR_WEEK_NUM_INT           FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL CTRL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FY 
 WHERE FY.CALENDAR_DATE=CTRL.PROCESS_DATE)
 GROUP BY 1)
WITH DATA ON COMMIT PRESERVE ROWS
 ;*/
   
  /*POS AMT CALCULATION FOR DISTI POS RATIO*/
 /* UPDATE BM FROM 
   $$SLSORDVWDB.N_BOOKINGS_MEASURE BM,
  $$STGDB.WI_DISTI_POS_RATIO_STK_PRDT  POS_RATIO , 
  $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR RDAYS
  SET 
  DV_ANNUALIZED_FLG='N' ,
  DV_ANNUALIZED_US_NET_AMT=DD_COMP_US_NET_PRICE_AMOUNT*POS_RATIO.ANNUAL_PCT/100 ,
  DV_MULTIYEAR_US_NET_AMT=DD_COMP_US_NET_PRICE_AMOUNT*POS_RATIO.MULTI_YEAR_PCT/100,
  EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
  EDW_UPDATE_USER=USER
  WHERE BM.SALES_TERRITORY_KEY=POS_RATIO.SALES_TERRITORY_KEY
  AND BM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS'
  AND BM.SERVICE_FLG = 'N'  
  AND BM.FORWARD_REVERSE_FLG='F' ---Added to restrict only Forward Updates
  AND  COALESCE(BM.DV_CONTRACT_DURATION,0) =0
  AND BM.BOOKINGS_PROCESS_DATE=RDAYS.CALENDAR_DATE
  AND  RDAYS.FISCAL_YEAR_WEEK_NUM_INT=(SELECT FISCAL_YEAR_WEEK_NUM_INT           FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL CTRL,
 $$COMREFVWDB.R_FISCAL_DAY_TO_YEAR FY 
 WHERE FY.CALENDAR_DATE=CTRL.PROCESS_DATE); */
 
   /*Updating DRVD Tables for Annualized and Multiyear Products*/
  
  /*UPDATE POS_DETAIL FROM 
  $$SLSORDVWDB.MT_DRVD_NRT_POS_TRX POS_DETAIL,
  $$SLSORDVWDB.N_BOOKINGS_MEASURE BM
  SET 
  DV_ANNUALIZED_FLG=BM.DV_ANNUALIZED_FLG ,
  DV_ANNUALIZED_US_NET_AMT=BM.DV_ANNUALIZED_US_NET_AMT ,
  DV_MULTIYEAR_US_NET_AMT=BM.DV_MULTIYEAR_US_NET_AMT,
  EDW_UPDATE_USER=USER
  WHERE BM.BOOKINGS_MEASURE_KEY=POS_DETAIL.ALLOCATED_POS_ADJ_KEY
  AND BM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS'
  AND BM.BOOKINGS_MEASURE_KEY IN (SELECT * FROM POS_MY_AY_INCR_BMK_PRDT UNION SELECT * FROM POS_MY_AY_INCR_BMK_SVCS);
  
  
  
  UPDATE POS_DETAIL FROM 
  $$SLSORDVWDB.N_DRVD_SCA_POS_ADJ_DETAILS POS_DETAIL,
  $$SLSORDVWDB.N_BOOKINGS_MEASURE BM
  SET 
  DV_ANNUALIZED_FLG=BM.DV_ANNUALIZED_FLG ,
  DV_ANNUALIZED_US_NET_AMT=BM.DV_ANNUALIZED_US_NET_AMT ,
  DV_MULTI_YEAR_US_NET_AMT=BM.DV_MULTIYEAR_US_NET_AMT,
  EDW_UPDATE_USER=USER
  WHERE BM.BOOKINGS_MEASURE_KEY=POS_DETAIL.ALLOCATED_POS_ADJ_KEY
  AND BM.BKGS_MEASURE_TRANS_TYPE_CODE ='POS'
  AND BM.BOOKINGS_MEASURE_KEY IN (SELECT * FROM POS_MY_AY_INCR_BMK_PRDT UNION SELECT * FROM POS_MY_AY_INCR_BMK_SVCS); */
 
  
/*###############################################################################################################*/

 ----------------------------------------------------------------------------------------
 /*ADDED THE BELOW STATEMENTS AS PART OF ACV Q3FY18 ELA ENRICHMENT*/
 ----------------------------------------------------------------------------------------
 
 ---------------------------------SELECTING CURRENT MONTHS PERPETUAL,ELA FLAG DATA WITH NULL AS CONTRACT DURATION------------------------------------------------ 
  
 DELETE FROM $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_POS;
 
 
 INSERT INTO $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_POS
 SELECT BOOKINGS_MEASURE_KEY,BOOKINGS_PROCESS_DATE ,BKGS_MEASURE_TRANS_TYPE_CODE,SALES_ORDER_KEY, NBM.PRODUCT_KEY FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY = NP.ITEM_KEY
 WHERE  NP.MONETIZATION_TYPE_CD='perpetual'
 AND NP.ELA_FLG ='Y'
 AND  BKGS_MEASURE_TRANS_TYPE_CODE in ('POS')
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = ( SELECT FISCAL_YEAR_MTH_NUMBER_INT FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)  
  AND DV_CONTRACT_DURATION IS NULL
  AND NBM.SERVICE_FLG = 'N';
  
  COLLECT STATS ON $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_POS INDEX UPI_ST_PERPETUAL_ELA_TERM_ENRICHMENT_POS;
 
 
 --------------------------------SELECTING  MAX CONTRACT DURATION FOR EACH SALES ORDER LINE KEY BY LOOKING UP THE PAST ONE YEAR ERP DATA WITH TERM AS MONETIZATION----------------------------------------------------------------
  
 
 
 DELETE FROM $$STGDB.ST_SOL_DURATION_POS;
 
 
 INSERT INTO $$STGDB.ST_SOL_DURATION_POS
   SELECT SALES_ORDER_KEY, MAX(DV_CONTRACT_DURATION) AS DV_CONTRACT_DURATION
    FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
  INNER JOIN $$COMREFVWDB.N_PRODUCT NP ON NBM.PRODUCT_KEY = NP.ITEM_KEY
 WHERE  NP.MONETIZATION_TYPE_CD='TERM'
 AND  BKGS_MEASURE_TRANS_TYPE_CODE in ('ERP')
  AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT >= ( SELECT FISCAL_YEAR_MTH_NUMBER_INT-100 FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)  
  AND NBM.SALES_ORDER_KEY IN (SELECT DISTINCT SALES_ORDER_KEY FROM $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_POS WHERE SALES_ORDER_KEY > 0 )
   AND DV_CONTRACT_DURATION IS NOT NULL
   AND NBM.SERVICE_FLG = 'N'
   GROUP BY 1;
   
 COLLECT STATS ON $$STGDB.ST_SOL_DURATION_POS INDEX (SALES_ORDER_KEY) ;
 
   ----------------------------------------------------------
   
   UPDATE NBM FROM 
 $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
 $$STGDB.ST_PERPETUAL_ELA_TERM_ENRICHMENT_POS WI 
 ,$$STGDB.ST_SOL_DURATION_POS  SOL
 
    SET
    RU_SERVICE_CONTRACT_START_DTM = NULL,
    RU_SERVICE_CONTRACT_END_DTM = NULL,
    DV_CONTRACT_DURATION = ROUND(SOL.DV_CONTRACT_DURATION) ,
    EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) ,
    EDW_UPDATE_USER = USER         
  WHERE NBM.BOOKINGS_MEASURE_KEY = WI.BOOKINGS_MEASURE_KEY
  AND NBM.BOOKINGS_PROCESS_DATE = WI.BOOKINGS_PROCESS_DATE
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = WI.BKGS_MEASURE_TRANS_TYPE_CODE
  AND WI.SALES_ORDER_KEY=SOL.SALES_ORDER_KEY
  AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE='POS';


Target3 Name : WI_BOOKINGS_SW_ANNUALISED_POS


Pre SQL : 
DELETE FROM $$STGDB.WI_BOOKINGS_SW_ANNUALISED_POS ALL;


Post SQL : 
DELETE FROM $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP WHERE BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS');

INSERT INTO  $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
'SOFTWARE' AS DV_SERVICE_PRODUCT_FLAG
FROM
$$WORKDB.W_BOOKINGS_MEASURE NBM
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS')
AND NBM.SERVICE_FLG = 'N'
AND P.MONETIZATION_TYPE_CD = 'TERM'
AND 
EXISTS
(SELECT 1 FROM $$COMREFVWDB.N_PRDT_TO_PRDT_CLSFTN_ALCTN PC 
WHERE PC.PRODUCT_KEY = NBM.PRODUCT_KEY 
AND PC.DV_FISCAL_YEAR_QUARTER_NUM_INT = NBM.FISCAL_YEAR_QUARTER_NUMBER_INT
AND PC.BK_PRDT_ALLCTN_METRIC_CD IN ('BOOKINGS', 'UNKNOWN')
AND PC.BK_PRDT_ALLCTN_CLSFCTN_CD = 'SOFTWARE') 
UNION ALL
SELECT
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
'SERVICE' AS DV_SERVICE_PRODUCT_FLAG
FROM
$$WORKDB.W_BOOKINGS_MEASURE NBM
INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY) 
WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS')
AND NBM.SERVICE_FLG = 'Y'
AND
EXISTS 
( SELECT 1 FROM 
    $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH 
    WHERE 
     SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN'
    AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
    AND (  (SFH.BK_SERVICE_CATEGORY_ID   =  'TECHNICAL SUPPORT SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  NOT IN  ( 'TRAINING'  ))
  OR 
  (SFH.BK_SERVICE_CATEGORY_ID   =  'ADVANCED SERVICES' AND SFH.BK_ALLOCATED_SERVC_GROUP_ID IN  ( 'AS SUBSCRIPTION'  )) )
  AND  SFH.ITEM_KEY = P.ITEM_KEY  ); 

----------------------------------------------------------------------

UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(
SELECT 
NBM.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM.BOOKINGS_MEASURE_KEY,
NBM.BOOKINGS_PROCESS_DATE,
CASE 
WHEN NS_POS.SALES_ORDER_LINE_KEY>0 THEN NS_POS.SALES_ORDER_LINE_KEY
WHEN PNVR.SALES_ORDER_LINE_KEY> 0 THEN PNVR.SALES_ORDER_LINE_KEY
ELSE NBM.SALES_ORDER_LINE_KEY END AS DRVD_SOL_KEY,

-- Service Contract Based
CASE 
WHEN SVCL.SERVICE_CONTRACT_START_DTM NOT IN ( '3500-01-01 00:00:00')
AND SVCL.SERVICE_CONTRACT_START_DTM IS NOT NULL 
AND SVCL.SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
THEN CAST(SVCL.SERVICE_CONTRACT_START_DTM AS DATE)
END
AS SVC_CONTRACT_START_DT,
CASE 
WHEN SVCL.SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
AND SVCL.SERVICE_CONTRACT_END_DTM IS NOT NULL
AND SVCL.SERVICE_CONTRACT_END_DTM > SVCL.SERVICE_CONTRACT_START_DTM
AND CAST(SVCL.SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
THEN CAST(SVCL.SERVICE_CONTRACT_END_DTM AS DATE)
END
AS SVC_CONTRACT_END_DT,
CAST((SVC_CONTRACT_END_DT - SVC_CONTRACT_START_DT +1) AS DECIMAL(15,6)) * 12 /365
AS DV_SVC_CONTRACT_DURATION,

-- SOL Contract Dates Based
CASE
WHEN SOL.RU_SERVICE_CONTRACT_START_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') 
AND SOL.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL
AND SOL.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00'
THEN CAST(SOL.RU_SERVICE_CONTRACT_START_DTM AS DATE)
END 
AS SOL_CONTRACT_START_DT,

CASE
WHEN SOL.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00')
AND SOL.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL
AND SOL.RU_SERVICE_CONTRACT_END_DTM > SOL.RU_SERVICE_CONTRACT_START_DTM
AND CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
THEN CAST(SOL.RU_SERVICE_CONTRACT_END_DTM AS DATE)
END 
AS SOL_CONTRACT_END_DT,

CAST((SOL_CONTRACT_END_DT - SOL_CONTRACT_START_DT+1) AS DECIMAL(15,6)) * 12 /365
AS DV_SOL_CONTRACT_DURATION,

-- SOL Duration Based
CASE WHEN SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <> 0 AND SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT <= 240 THEN  SOLV1.RU_SRVC_CNTRCT_DRTN_MNTHS_CNT  END 
AS SOLV1_CONTRACT_DURATION,

CASE WHEN SOLV1_CONTRACT_DURATION>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN NBM.BOOKINGS_PROCESS_DATE END SOLV1_CONTRACT_START_DT,

CASE WHEN SOLV1_CONTRACT_DURATION>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN 
NBM.BOOKINGS_PROCESS_DATE +(CAST(SOLV1_CONTRACT_DURATION AS DECIMAL(15,6))*365/12)
 END SOLV1_CONTRACT_END_DT,
--Bookings Dates Based
CASE 
WHEN NBM.RU_SERVICE_CONTRACT_START_DTM NOT IN ('3500-01-01 00:00:00') 
AND NBM.RU_SERVICE_CONTRACT_START_DTM IS NOT NULL  
AND NBM.RU_SERVICE_CONTRACT_START_DTM >= '2000-01-01 00:00:00' 
THEN CAST(NBM.RU_SERVICE_CONTRACT_START_DTM AS DATE)
END
AS BKGS_CONTRACT_START_DT,

CASE 
WHEN NBM.RU_SERVICE_CONTRACT_END_DTM NOT IN ('1900-01-01 00:00:00' , '3500-01-01 00:00:00') 
AND NBM.RU_SERVICE_CONTRACT_END_DTM IS NOT NULL  
AND NBM.RU_SERVICE_CONTRACT_END_DTM > NBM.RU_SERVICE_CONTRACT_START_DTM 
AND CAST(NBM.RU_SERVICE_CONTRACT_END_DTM AS DATE) <= ADD_MONTHS(CURRENT_DATE,240)
THEN CAST(NBM.RU_SERVICE_CONTRACT_END_DTM AS DATE)
END
AS BKGS_CONTRACT_END_DT,

CASE WHEN BKGS_CONTRACT_START_DT IS NOT NULL AND BKGS_CONTRACT_END_DT IS NOT NULL THEN 
                      CAST((BKGS_CONTRACT_END_DT - BKGS_CONTRACT_START_DT +1) AS DECIMAL(15,6)) * 12/365
END 
AS DV_BKGS_CONTRACT_DURATION,

-- Bookings Term Based
CASE WHEN NBM.DV_CONTRACT_DURATION IS NOT NULL AND  NBM.DV_CONTRACT_DURATION > 0 AND NBM.DV_CONTRACT_DURATION <= 240   THEN NBM.DV_CONTRACT_DURATION
END 
AS DV_BKGS_TERM_DURATION,

CASE WHEN DV_BKGS_TERM_DURATION>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN NBM.BOOKINGS_PROCESS_DATE END BKGS_TERM_START_DT,

CASE WHEN DV_BKGS_TERM_DURATION>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN 
NBM.BOOKINGS_PROCESS_DATE +(CAST(DV_BKGS_TERM_DURATION AS DECIMAL(15,6))*365/12)
 END BKGS_TERM_END_DT,

-- Attributed PID Based
CASE WHEN DV_SERVICE_PRODUCT_FLAG = 'SOFTWARE' THEN
(CASE
WHEN P.PRICING_UNIT_NAME = 'YEAR' THEN P.PRICING_UNIT_DURATION_INT * 12
WHEN P.PRICING_UNIT_NAME = 'MONTHS' THEN P.PRICING_UNIT_DURATION_INT
WHEN P.PRICING_UNIT_NAME = 'DAYS' THEN (CAST(P.PRICING_UNIT_DURATION_INT AS DECIMAL(15,6)) * 12)/365
END)
ELSE NULL END AS PID_TO_TERM_ATT,

CASE 
WHEN PID_TO_TERM_ATT IS NULL AND P.BK_PRODUCT_ID = 'XCAT-ELA-5Y-ENG' THEN  60 ELSE PID_TO_TERM_ATT
END AS PID_TO_TERM_ATR,

CASE WHEN PID_TO_TERM_ATR>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN NBM.BOOKINGS_PROCESS_DATE END ATRPID_TERM_START_DT,

CASE WHEN PID_TO_TERM_ATR>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN 
NBM.BOOKINGS_PROCESS_DATE +(CAST(PID_TO_TERM_ATR AS DECIMAL(15,6))*365/12)
 END ATRPID_TERM_END_DT,
 
-- Bundled PID Based
CASE WHEN DV_SERVICE_PRODUCT_FLAG = 'SOFTWARE' THEN
(CASE          
WHEN BP.PRICING_UNIT_NAME = 'YEAR'   THEN BP.PRICING_UNIT_DURATION_INT * 12
WHEN BP.PRICING_UNIT_NAME = 'MONTHS' THEN BP.PRICING_UNIT_DURATION_INT
WHEN BP.PRICING_UNIT_NAME = 'DAYS'   THEN (CAST(BP.PRICING_UNIT_DURATION_INT AS DECIMAL(15,6)) * 12)/365
END)
ELSE NULL END AS PID_TO_TERM_BUN,

CASE 
WHEN PID_TO_TERM_BUN IS NULL AND BP.BK_PRODUCT_ID = 'XCAT-ELA-5Y-ENG' THEN  60 ELSE PID_TO_TERM_BUN
END AS PID_TO_TERM_BND,

CASE WHEN PID_TO_TERM_BND>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN NBM.BOOKINGS_PROCESS_DATE END BNDPID_TERM_START_DT,

CASE WHEN PID_TO_TERM_BND>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN 
NBM.BOOKINGS_PROCESS_DATE +(CAST(PID_TO_TERM_BND AS DECIMAL(15,6))*365/12)
 END BNDPID_TERM_END_DT,

--Default 
CASE WHEN NBM.SERVICE_FLG ='Y' THEN 18 ELSE 24 END AS DEFAULT_TERM,

CASE WHEN DEFAULT_TERM>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN NBM.BOOKINGS_PROCESS_DATE END DEFAULT_START_DT,

CASE WHEN DEFAULT_TERM>0 AND NBM.BOOKINGS_PROCESS_DATE NOT IN ('1900-01-01' , '3500-01-01') THEN 
NBM.BOOKINGS_PROCESS_DATE +(CAST(DEFAULT_TERM AS DECIMAL(15,6))*365/12)
 END DEFAULT_END_DT,
 
 -- Conclusion
CASE 
WHEN SVC_CONTRACT_START_DT>'1900-01-01' AND SVC_CONTRACT_END_DT >'1900-01-01' THEN SVC_CONTRACT_START_DT
WHEN SOL_CONTRACT_START_DT>'1900-01-01' AND SOL_CONTRACT_END_DT >'1900-01-01' THEN SOL_CONTRACT_START_DT
WHEN SOLV1_CONTRACT_START_DT>'1900-01-01' AND SOLV1_CONTRACT_END_DT >'1900-01-01' THEN SOLV1_CONTRACT_START_DT
WHEN BKGS_CONTRACT_START_DT>'1900-01-01' AND BKGS_CONTRACT_END_DT >'1900-01-01' THEN BKGS_CONTRACT_START_DT
WHEN BKGS_TERM_START_DT>'1900-01-01' AND BKGS_TERM_END_DT >'1900-01-01' THEN BKGS_TERM_START_DT
WHEN ATRPID_TERM_START_DT>'1900-01-01' AND ATRPID_TERM_END_DT >'1900-01-01' THEN ATRPID_TERM_START_DT
WHEN BNDPID_TERM_START_DT>'1900-01-01' AND BNDPID_TERM_END_DT >'1900-01-01' THEN BNDPID_TERM_START_DT
WHEN DEFAULT_START_DT>'1900-01-01' AND DEFAULT_END_DT >'1900-01-01' THEN DEFAULT_START_DT
END AS CONTRACT_START_DT,

CASE 
WHEN SVC_CONTRACT_START_DT>'1900-01-01' AND SVC_CONTRACT_END_DT >'1900-01-01' THEN SVC_CONTRACT_END_DT
WHEN SOL_CONTRACT_START_DT>'1900-01-01' AND SOL_CONTRACT_END_DT >'1900-01-01' THEN SOL_CONTRACT_END_DT
WHEN SOLV1_CONTRACT_START_DT>'1900-01-01' AND SOLV1_CONTRACT_END_DT >'1900-01-01' THEN SOLV1_CONTRACT_END_DT
WHEN BKGS_CONTRACT_START_DT>'1900-01-01' AND BKGS_CONTRACT_END_DT >'1900-01-01' THEN BKGS_CONTRACT_END_DT
WHEN BKGS_TERM_START_DT>'1900-01-01' AND BKGS_TERM_END_DT >'1900-01-01' THEN BKGS_TERM_END_DT
WHEN ATRPID_TERM_START_DT>'1900-01-01' AND ATRPID_TERM_END_DT >'1900-01-01' THEN ATRPID_TERM_END_DT
WHEN BNDPID_TERM_START_DT>'1900-01-01' AND BNDPID_TERM_END_DT >'1900-01-01' THEN BNDPID_TERM_END_DT
WHEN DEFAULT_START_DT>'1900-01-01' AND DEFAULT_END_DT >'1900-01-01' THEN DEFAULT_END_DT
END AS CONTRACT_END_DT,

CASE 
WHEN SVC_CONTRACT_START_DT>'1900-01-01' AND SVC_CONTRACT_END_DT >'1900-01-01' THEN DV_SVC_CONTRACT_DURATION
WHEN SOL_CONTRACT_START_DT>'1900-01-01' AND SOL_CONTRACT_END_DT >'1900-01-01' THEN DV_SOL_CONTRACT_DURATION
WHEN SOLV1_CONTRACT_START_DT>'1900-01-01' AND SOLV1_CONTRACT_END_DT >'1900-01-01' THEN SOLV1_CONTRACT_DURATION
WHEN BKGS_CONTRACT_START_DT>'1900-01-01' AND BKGS_CONTRACT_END_DT >'1900-01-01' THEN DV_BKGS_CONTRACT_DURATION
WHEN BKGS_TERM_START_DT>'1900-01-01' AND BKGS_TERM_END_DT >'1900-01-01' THEN DV_BKGS_TERM_DURATION
WHEN ATRPID_TERM_START_DT>'1900-01-01' AND ATRPID_TERM_END_DT >'1900-01-01' THEN PID_TO_TERM_ATR
WHEN BNDPID_TERM_START_DT>'1900-01-01' AND BNDPID_TERM_END_DT >'1900-01-01' THEN PID_TO_TERM_BND
WHEN DEFAULT_START_DT>'1900-01-01' AND DEFAULT_END_DT >'1900-01-01' THEN DEFAULT_TERM
END AS CONTRACT_DURATION,

CASE 
WHEN SVC_CONTRACT_START_DT>'1900-01-01' AND SVC_CONTRACT_END_DT >'1900-01-01' THEN 'SRVC CNTRCT Dates to Term'
WHEN SOL_CONTRACT_START_DT>'1900-01-01' AND SOL_CONTRACT_END_DT >'1900-01-01' THEN 'SOL Dates to Term'
WHEN SOLV1_CONTRACT_START_DT>'1900-01-01' AND SOLV1_CONTRACT_END_DT >'1900-01-01' THEN 'SOL Term'
WHEN BKGS_CONTRACT_START_DT>'1900-01-01' AND BKGS_CONTRACT_END_DT >'1900-01-01' THEN 'BKGS MSR Dates to Term'
WHEN BKGS_TERM_START_DT>'1900-01-01' AND BKGS_TERM_END_DT >'1900-01-01' THEN 'BKGS MSR Term'
WHEN ATRPID_TERM_START_DT>'1900-01-01' AND ATRPID_TERM_END_DT >'1900-01-01' THEN 'Attributed PID to Term'
WHEN BNDPID_TERM_START_DT>'1900-01-01' AND BNDPID_TERM_END_DT >'1900-01-01' THEN 'Bundle PID to Term'
WHEN DEFAULT_START_DT>'1900-01-01' AND DEFAULT_END_DT >'1900-01-01' THEN 'Default Term' 
END AS ENRICHMENT_RULE,

CAST((NBM.DD_COMP_US_NET_PRICE_AMOUNT / CONTRACT_DURATION) AS DECIMAL(18,6)) AS NEW_MTHLY_RCR_REV_TRXL_USD_AMT,

CAST((NEW_MTHLY_RCR_REV_TRXL_USD_AMT * 12.000000) AS DECIMAL(18,6)) AS NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT
 
FROM $$WORKDB.W_BOOKINGS_MEASURE WBM 


INNER JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP  INC ON (WBM.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY 
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE
AND INC.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS')


INNER JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM 
ON (WBM.BOOKINGS_MEASURE_KEY = NBM.BOOKINGS_MEASURE_KEY
AND WBM.BKGS_MEASURE_TRANS_TYPE_CODE=NBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND WBM.BOOKINGS_PROCESS_DATE=NBM.BOOKINGS_PROCESS_DATE)

INNER JOIN $$COMREFVWDB.N_PRODUCT P ON (P.ITEM_KEY = NBM.PRODUCT_KEY)

INNER JOIN $$COMREFVWDB.R_PRODUCTS BP   ON (BP.ITEM_KEY = WBM.DV_PRODUCT_KEY)		

--Non-Stocking POS
LEFT JOIN (SELECT CASE WHEN DSV_OR_POS_TYPE_CD='POS' THEN BK_POS_TRANSACTION_ID_INT ELSE BK_BOOKING_POS_TRX_ID_INT END AS BK_POS_TRANSACTION_ID_INT,
SALES_ORDER_LINE_KEY
FROM $$SLSORDVWDB.N_POS_TRANSACTION_LINE WHERE SALES_ORDER_LINE_KEY > 0 GROUP BY 1,2) NS_POS ON (WBM.BK_POS_TRANSACTION_ID_INT = NS_POS.BK_POS_TRANSACTION_ID_INT)


LEFT JOIN (
SELECT SALES_ORDER_LINE_KEY,BK_POS_TRANSACTION_ID_INT FROM $$SLSORDVWDB.N_POS_TRX_LINE_AS_NEW_OR_RNWL WHERE SALES_ORDER_LINE_KEY > 0 GROUP BY 1,2
)PNVR
ON WBM.BK_POS_TRANSACTION_ID_INT = PNVR.BK_POS_TRANSACTION_ID_INT

LEFT  JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_TV  SOL ON (DRVD_SOL_KEY= SOL.SALES_ORDER_LINE_KEY AND SOL.END_TV_DATETIME = '3500-01-01 00:00:00')

LEFT JOIN $$SLSORDVWDB.N_SALES_ORDER_LINE_V1_TV SOLV1 ON (DRVD_SOL_KEY = SOLV1.SALES_ORDER_LINE_KEY AND SOLV1.END_TV_DTM = '3500-01-01 00:00:00')

LEFT JOIN  (
SELECT
CNTRCT.SERVICE_SOL_KEY AS SALES_ORDER_LINE_KEY
,Min(Cast (CNTRCT.CONTRACT_LINE_START_DT AS TIMESTAMP(0))) AS SERVICE_CONTRACT_START_DTM
,Max(Cast(CNTRCT.CONTRACT_LINE_END_DT AS TIMESTAMP(0))) AS SERVICE_CONTRACT_END_DTM
FROM 
$$SERVICEVWDB.N_SRVC_CNTRCT_LN_HANA_SRCD  CNTRCT
WHERE CNTRCT.SERVICE_SOL_KEY > 0 
AND  
(  CNTRCT.CONTRACT_LINE_STYLE_ID_INT =  9 AND  SERVICE_SOL_LINKAGE_LOGIC_NAME LIKE '%OKC%' 
  OR CNTRCT.CONTRACT_LINE_STYLE_ID_INT =  7 )
AND CNTRCT.CONTRACT_LINE_STATUS_NAME <> 'TERMINATED'
AND NOT EXISTS  (
SELECT 1 FROM  $$COMREFVWDB.MT_CS_DEAL_SVC_FIN_HIER_ALLOC SFH
WHERE  1=1
AND SFH.ITEM_KEY = CNTRCT.SERVICE_PRODUCT_KEY
AND SFH.BK_ALLOCATED_SERVC_GROUP_ID <> 'UNKNOWN'  AND SFH.DV_PRDT_SUB_GRP_ALLOC_SRC_CD = 'SPA'
AND SFH.BK_SERVICE_CATEGORY_ID = 'ADVANCED SERVICES' AND SFH.ALLOCATION_PERCENTAGE = 1
)
GROUP BY SERVICE_SOL_KEY 

) SVCL ON (SVCL.SALES_ORDER_LINE_KEY = DRVD_SOL_KEY)

WHERE 1=1
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'
AND NBM.FORWARD_REVERSE_FLG = 'F'

) WBM
SET 
DV_ENRICHED_SERVICE_CONTRACT_START_DT=WBM.CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=WBM.CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=WBM.CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=WBM.ENRICHMENT_RULE,
DV_MTHLY_RCR_REV_TRXL_USD_AMT=COALESCE(WBM.NEW_MTHLY_RCR_REV_TRXL_USD_AMT,0),
DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=COALESCE(WBM.NEW_ANNLZD_MTHY_RCRR_RV_USD_AMT,0),
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'
AND NBM.FORWARD_REVERSE_FLG = 'F'
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT;



UPDATE NBM 
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL,
(
SELECT Q.*
FROM
(
SELECT
NBM_R.BK_POS_TRANSACTION_ID_INT,
NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE,
NBM_R.FORWARD_REVERSE_FLG,
NBM_R.BOOKINGS_MEASURE_KEY,
NBM_R.BOOKINGS_PROCESS_DATE,
NBM_F.BOOKINGS_MEASURE_KEY AS FWD_BOOKINGS_MEASURE_KEY,
NBM_F.BOOKINGS_PROCESS_DATE AS FWD_BOOKINGS_PROCESS_DATE,
NBM_R.SALES_TERRITORY_KEY,
NBM_R.SALES_REP_NUMBER,
NBM_R.DV_ATTRIBUTION_CD,
NBM_R.SK_OFFER_ATTRIBUTION_ID_INT,
NBM_R.DV_PRODUCT_KEY,
NBM_R.CORPORATE_BOOKINGS_FLG,
NBM_R.DD_COMP_US_NET_PRICE_AMOUNT,

NBM_F.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
NBM_F.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
NBM_F.DV_ENRICHED_CONTRACT_DURATION,
NBM_F.DV_ENRICHMENT_RULE_DESC,
NBM_F.DV_MTHLY_RCR_REV_TRXL_USD_AMT,
NBM_F.DV_ANNLZD_MTHY_RCRR_RV_USD_AMT

FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_R

JOIN $$STGDB.WI_SM_BOOKINGS_MEASURE_INC_TEMP INC  
ON NBM_R.BOOKINGS_MEASURE_KEY = INC.BOOKINGS_MEASURE_KEY
AND NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE=INC.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM_R.BOOKINGS_PROCESS_DATE=INC.BOOKINGS_PROCESS_DATE
AND INC.BKGS_MEASURE_TRANS_TYPE_CODE='POS'

JOIN $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM_F
ON ( NBM_F.FORWARD_REVERSE_FLG = 'F'
AND NBM_F.BK_POS_TRANSACTION_ID_INT = NBM_R.BK_POS_TRANSACTION_ID_INT 
AND NBM_F.BKGS_MEASURE_TRANS_TYPE_CODE = NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE
AND CASE WHEN NBM_F.BOOKINGS_PROCESS_DATE = NBM_R.BOOKINGS_PROCESS_DATE THEN NBM_F.BOOKINGS_MEASURE_KEY ELSE 0 END < CASE WHEN NBM_F.BOOKINGS_PROCESS_DATE = NBM_R.BOOKINGS_PROCESS_DATE THEN NBM_R.BOOKINGS_MEASURE_KEY ELSE 1 END
AND NBM_F.BOOKINGS_PROCESS_DATE <= NBM_R.BOOKINGS_PROCESS_DATE
AND NBM_F.SALES_TERRITORY_KEY = NBM_R.SALES_TERRITORY_KEY
AND NBM_F.SALES_REP_NUMBER = NBM_R.SALES_REP_NUMBER
AND NBM_F.DV_ATTRIBUTION_CD = NBM_R.DV_ATTRIBUTION_CD
AND NBM_F.SK_OFFER_ATTRIBUTION_ID_INT = NBM_R.SK_OFFER_ATTRIBUTION_ID_INT
AND NBM_F.DV_PRODUCT_KEY = NBM_R.DV_PRODUCT_KEY
AND NBM_F.CORPORATE_BOOKINGS_FLG = NBM_R.CORPORATE_BOOKINGS_FLG
AND NBM_F.DD_COMP_US_NET_PRICE_AMOUNT = -1.000000 * NBM_R.DD_COMP_US_NET_PRICE_AMOUNT)

WHERE NBM_R.FORWARD_REVERSE_FLG = 'R'
AND NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE='POS'
QUALIFY ROW_NUMBER () OVER (PARTITION BY NBM_R.BOOKINGS_MEASURE_KEY, NBM_R.BOOKINGS_PROCESS_DATE, NBM_R.BKGS_MEASURE_TRANS_TYPE_CODE 
ORDER BY NBM_F.BOOKINGS_PROCESS_DATE DESC, NBM_F.BOOKINGS_MEASURE_KEY DESC) <= 2
) Q

QUALIFY ROW_NUMBER () OVER (PARTITION BY Q.BOOKINGS_MEASURE_KEY, Q.BOOKINGS_PROCESS_DATE, Q.BKGS_MEASURE_TRANS_TYPE_CODE 
ORDER BY Q.FWD_BOOKINGS_PROCESS_DATE ASC, Q.FWD_BOOKINGS_MEASURE_KEY ASC) = 1
) WBM
SET 
DV_ENRICHED_SERVICE_CONTRACT_START_DT=WBM.DV_ENRICHED_SERVICE_CONTRACT_START_DT,
DV_ENRICHED_SERVICE_CONTRACT_END_DT=WBM.DV_ENRICHED_SERVICE_CONTRACT_END_DT,
DV_ENRICHED_CONTRACT_DURATION=WBM.DV_ENRICHED_CONTRACT_DURATION,
DV_ENRICHMENT_RULE_DESC=WBM.DV_ENRICHMENT_RULE_DESC ||'-Original',
DV_MTHLY_RCR_REV_TRXL_USD_AMT=COALESCE(CAST((NBM.DD_COMP_US_NET_PRICE_AMOUNT/WBM.DV_ENRICHED_CONTRACT_DURATION) AS  DECIMAL(18,6)),0),
DV_ANNLZD_MTHY_RCRR_RV_USD_AMT=COALESCE(CAST(((NBM.DD_COMP_US_NET_PRICE_AMOUNT/WBM.DV_ENRICHED_CONTRACT_DURATION)*12.000000)AS  DECIMAL(18,6)),0),
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0)
WHERE  NBM.BKGS_MEASURE_TRANS_TYPE_CODE = 'POS'
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT;

/* Update for enriched end customer key columns*/

UPDATE NBM FROM 
$$SLSORDVWDB.N_BOOKINGS_MEASURE NBM,
$$WORKDB.W_BOOKINGS_MEASURE WBM,
$$ETLVWDB.BKG_PROCESS_DT_CNTRL CNTL
SET ENRICHED_END_CUSTOMER_KEY=NBM.DV_END_CUSTOMER_KEY,
DV_ENRICHED_UNK_END_CUST_RULE_DESC='Bookings End Customer',
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) /* CHG0454670 Adding WHO col updates*/ 
WHERE NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS')
AND NBM.DV_ENRICHMENT_RULE_DESC IS NOT NULL
AND NBM.BOOKINGS_MEASURE_KEY = WBM.BOOKINGS_MEASURE_KEY
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE=WBM.BKGS_MEASURE_TRANS_TYPE_CODE
AND NBM.BOOKINGS_PROCESS_DATE=WBM.BOOKINGS_PROCESS_DATE
AND NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT=CNTL.FISCAL_YEAR_MTH_NUMBER_INT;


 /* Added as part of the ACV PILOT Sep 26th Release */ 
/*UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
SET  RU_SERVICE_CONTRACT_END_DTM = NULL,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) 
WHERE NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS' )
AND NBM.RU_SERVICE_CONTRACT_END_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00') ; 


UPDATE NBM
FROM $$SLSORDVWDB.N_BOOKINGS_MEASURE NBM
SET  RU_SERVICE_CONTRACT_START_DTM = NULL,
EDW_UPDATE_DATETIME = CURRENT_TIMESTAMP(0) 
WHERE NBM.DV_FISCAL_YEAR_MTH_NUMBER_INT = (SELECT FISCAL_YEAR_MTH_NUMBER_INT     FROM $$ETLVWDB.BKG_PROCESS_DT_CNTRL)
AND NBM.BKGS_MEASURE_TRANS_TYPE_CODE IN ('POS' )
AND  NBM.RU_SERVICE_CONTRACT_START_DTM IN ('1900-01-01 00:00:00','3500-01-01 00:00:00'); */