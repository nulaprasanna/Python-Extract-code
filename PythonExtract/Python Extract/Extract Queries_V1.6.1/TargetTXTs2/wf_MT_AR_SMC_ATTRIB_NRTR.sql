


Source1 Name : SQ_N_DRVD_NCR_REV_TRX_FOR_BKG


Pre SQL : 



SQL Query : 
SELECT
    DRVD.SALES_ORDER_LINE_KEY
   ,DRVD.PRODUCT_KEY AS DV_ENTERPRISE_INV_SKU_ID
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 
   THEN SMC_ALLOC.SALES_MOTION_CD 
         ELSE 'UNKNOWN' 
     END SALES_MOTION_CD
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_ALLOCATION_PCT
         ELSE 1.000000
     END AS DV_ALLOCATION_PCT
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_SERVICE_CATEGORY_CD
         ELSE 'TS' 
     END AS DV_SERVICE_CATEGORY_CD
   ,'N' AS DV_OA_FLG
   ,CURRENT_TIMESTAMP(0) AS START_TV_DTM
   , CAST('3500-01-01 00:00:00' AS TIMESTAMP(0)) END_TV_DTM                    
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 THEN SMC_ALLOC.DV_SOURCE_TYPE /* DV SOURCE TYPE derivation change to accommodate SQ */
         ELSE 'UNKNOWN' 
     END AS DV_SOURCE_TYPE  
   ,CURRENT_TIMESTAMP(0) AS EDW_CREATE_DTM
   ,USER AS EDW_CREATE_USER
   ,CURRENT_TIMESTAMP(0) AS EDW_UPDATE_DTM
   ,USER AS EDW_UPDATE_USER
   ,CASE WHEN SMC_ALLOC.SALES_ORDER_LINE_KEY > 0 
   THEN SMC_ALLOC.SALES_MOTION_TIMING_CD 
         ELSE COALESCE(NSOL.SALES_MOTION_TIMING_CD,'UNKNOWN')
     END SALES_MOTION_TIMING_CD
 FROM ( SELECT DV_SALES_ORDER_LINE_KEY AS SALES_ORDER_LINE_KEY
             , DV_PRODUCT_KEY AS PRODUCT_KEY
    FROM $$FINLGLVWDB.N_DRVD_NCR_REV_TRX_FOR_BKG DRVD 
   WHERE DRVD.SOURCE_SYSTEM_CODE = 'CG'  
     AND DRVD.LAST_RECORD_FLAG = 'Y' 
     AND DRVD.DV_SALES_ORDER_LINE_KEY > 0 
        AND DRVD.EDW_UPDATE_DATETIME >  '$$LastExtractDate'
      GROUP BY 1,2
      ) DRVD 
  LEFT JOIN $$SLSORDVWDB.MT_RTNR_SMC_ALLOCATION SMC_ALLOC
       ON SMC_ALLOC.SALES_ORDER_LINE_KEY = DRVD.SALES_ORDER_LINE_KEY
      AND SMC_ALLOC.END_TV_DTM = '3500-01-01 00:00:00'
	  LEFT JOIN $$STGDB.WI_TTS_SOWB_SOL_LINES NSOL
ON DRVD.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY
 /*LEFT JOIN ( SELECT NSOL.* 
			   FROM $$SLSORDVWDB.N_SALES_ORDER_LINE_TV NSOL 
		 /*INNER JOIN $$SLSORDVWDB.N_SALES_ORDER NSO
			     ON NSO.SALES_ORDER_KEY = NSOL.SALES_ORDER_KEY
      WHERE NSOL.SS_CODE = 'CG'
      AND NSOL.END_TV_DATETIME = '3500-01-01 00:00:00'
	  AND ( EXISTS (
  SELECT 1 FROM (SELECT 
     P.ITEM_KEY
     FROM
     $$COMREFVWDB.N_PRODUCT P
     INNER JOIN 
     $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.RU_BK_SERVICE_PROD_SUBGROUP_ID = SFH.BK_PRODUCT_SUBGROUP_ID
     WHERE P.PRDT_SETUP_CLASSIFICATION_CD <> 'SOFTWARE' --EXCLUDE SW
     AND SFH.BK_SERVICE_CATEGORY_ID = 'TECHNICAL SUPPORT SERVICES' 
     AND SFH.BK_ALLOCATED_SERVC_GROUP_ID NOT IN
     ( 'AS CORE' ,  'AS SUBSCRIPTION' , 'FOCUSED TECHNICAL SUPPORT SERVICES' , 'CLOUD MANAGED SERVICES' )--EXCLUDE FTS,CMS,AS
     AND RU_BK_SERVICE_PROD_SUBGROUP_ID NOT IN (SELECT BK_PRDT_SUBGROUP_ID FROM ( SELECT * FROM $$SERVICEVWDB.N_GENERIC_SVC_PRDT_ATTR WHERE BK_GSP_ATTR_NAME = 'SW SERVICE CATEGORY' ) WI ) --EXCLUDE SWSS
     ) WI
   WHERE NSOL.PRODUCT_KEY = WI.ITEM_KEY
      )
	  OR (NSOL.BK_SO_SRC_NAME IN ('Manual', 'Copy' ) AND NSOL.PRODUCT_KEY NOT IN ( SELECT P.ITEM_KEY
     FROM
     $$COMREFVWDB.N_PRODUCT P
     INNER JOIN 
     $$COMREFVWDB.MT_SVC_FINANCE_HIERARCHY SFH ON P.RU_BK_SERVICE_PROD_SUBGROUP_ID = SFH.BK_PRODUCT_SUBGROUP_ID
     AND SFH.BK_ALLOCATED_SERVC_GROUP_ID  IN ( 'AS FIXED', 'AS TRANSACTION', 'CLOUD MANAGED SERVICES' ) --EXCLUDE CMS IN SOWB
    )
                )
	  )
        ) NSOL
ON DRVD.SALES_ORDER_LINE_KEY = NSOL.SALES_ORDER_LINE_KEY*/
 WHERE NOT EXISTS ( SELECT 1 FROM $$STGDB.WI_MT_AR_SMC_ATTRIB_RTR WI WHERE WI.SALES_ORDER_LINE_KEY = DRVD.SALES_ORDER_LINE_KEY 
 )
   AND NOT EXISTS ( SELECT 1 FROM $$SLSORDVWDB.MT_AR_SLS_MOTION_ATTRIB MT WHERE MT.SALES_ORDER_LINE_KEY = DRVD.SALES_ORDER_LINE_KEY AND MT.DV_SOURCE_TYPE IN ( 'RTNR', 'SQ' ) )/* DV SOURCE TYPE derivation change to accommodate SQ */


Post SQL : 



Target1 Name : WI_MT_AR_SMC_ATTRIB_NRTR1


Pre SQL : 
DELETE FROM  $$STGDB.WI_MT_AR_SMC_ATTRIB_NRTR;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$STGDB','WI_MT_AR_SMC_ATTRIB_NRTR','D');


Source2 Name : SQ_MT_AR_SLS_MOTION_ATTRIB


Pre SQL : 



SQL Query : 
SELECT 
                 SALES_ORDER_LINE_KEY, 
                 DV_ENTERPRISE_INV_SKU_ID, 
                 SALES_MOTION_CD, 
                 DV_ALLOCATION_PCT, 
		    DV_SERVICE_CATEGORY_CD,
                 DV_OA_FLG, 
                 START_TV_DTM, 
                 END_TV_DTM, 
                 DV_SOURCE_TYPE, 
                 EDW_CREATE_DTM, 
                 EDW_CREATE_USER, 
                 EDW_UPDATE_DTM, 
                 EDW_UPDATE_USER,
--				 SALES_MOTION_TIMING_CD
CASE WHEN SALES_MOTION_CD = 'RENEW' THEN
      SALES_MOTION_TIMING_CD
ELSE 'UNKNOWN'
END AS SALES_MOTION_TIMING_CD
 FROM $$STGDB.WI_MT_AR_SMC_ATTRIB_NRTR WI
 WHERE NOT EXISTS ( SELECT 1 FROM $$SLSORDVWDB.MT_AR_SLS_MOTION_ATTRIB MT
                                 WHERE WI.SALES_ORDER_LINE_KEY = MT.SALES_ORDER_LINE_KEY
                                   AND WI.DV_ENTERPRISE_INV_SKU_ID = MT.DV_ENTERPRISE_INV_SKU_ID
                                   AND WI.START_TV_DTM = MT.START_TV_DTM
		   )


Post SQL : 



Target2 Name : MT_AR_SLS_MOTION_ATTRIB1


Pre SQL : 
/* START: SMR Aug 16th changes - To prevent unnecessary changes going into MT table */
DELETE FROM $$STGDB.WI_AR_SMC_ATTRIB_NRTR_CHNG_CHK ;

INSERT INTO $$STGDB.WI_AR_SMC_ATTRIB_NRTR_CHNG_CHK
SELECT
	SALES_ORDER_LINE_KEY, 
    DV_ENTERPRISE_INV_SKU_ID, 
    SALES_MOTION_CD, 
    DV_ALLOCATION_PCT, 
	DV_SERVICE_CATEGORY_CD,
    DV_OA_FLG, 
    START_TV_DTM, 
    END_TV_DTM, 
	DV_SOURCE_TYPE,
	SALES_MOTION_TIMING_CD
FROM $$STGDB.WI_MT_AR_SMC_ATTRIB_NRTR WI
 WHERE EXISTS ( SEL 1 
				FROM $$SLSORDVWDB.MT_AR_SLS_MOTION_ATTRIB MT_AR
				WHERE MT_AR.END_TV_DTM = '3500-01-01 00:00:00'
				  AND WI.SALES_ORDER_LINE_KEY = MT_AR.SALES_ORDER_LINE_KEY
				  AND WI.DV_ENTERPRISE_INV_SKU_ID = MT_AR.DV_ENTERPRISE_INV_SKU_ID
				  AND WI.SALES_MOTION_CD = MT_AR.SALES_MOTION_CD
				  AND WI.DV_ALLOCATION_PCT = MT_AR.DV_ALLOCATION_PCT
				  AND WI.DV_SERVICE_CATEGORY_CD = MT_AR.DV_SERVICE_CATEGORY_CD
				  AND WI.DV_SOURCE_TYPE = MT_AR.DV_SOURCE_TYPE ) ;

COLLECT STATS ON $$STGDB.WI_AR_SMC_ATTRIB_NRTR_CHNG_CHK;

DELETE FROM $$STGDB.WI_AR_SMC_ATTRIB_NRTR_CHNG_CHK
WHERE ( SALES_ORDER_LINE_KEY, DV_ENTERPRISE_INV_SKU_ID ) IN
		( SEL SALES_ORDER_LINE_KEY, DV_ENTERPRISE_INV_SKU_ID
			FROM $$STGDB.WI_AR_SMC_ATTRIB_NRTR_CHNG_CHK
			GROUP BY 1,2 HAVING ROUND(SUM(DV_ALLOCATION_PCT),4) <> 1.0000		
		) ;

DELETE FROM $$STGDB.WI_MT_AR_SMC_ATTRIB_NRTR WI
WHERE EXISTS ( SEL 1 
				FROM $$STGDB.WI_AR_SMC_ATTRIB_NRTR_CHNG_CHK NO_CHNG
				WHERE WI.SALES_ORDER_LINE_KEY = NO_CHNG.SALES_ORDER_LINE_KEY
				  AND WI.DV_ENTERPRISE_INV_SKU_ID = NO_CHNG.DV_ENTERPRISE_INV_SKU_ID
			  ) ;
/* END: SMR Aug 16th changes - To prevent unnecessary changes going into MT table */

UPDATE MT
 FROM $$SLSORDDB.MT_AR_SLS_MOTION_ATTRIB MT , 
      ( SELECT SALES_ORDER_LINE_KEY, DV_ENTERPRISE_INV_SKU_ID
	   , MAX(START_TV_DTM) AS START_TV_DTM
          FROM $$STGDB.WI_MT_AR_SMC_ATTRIB_NRTR
         GROUP BY 1,2
       ) WI
 SET 
	 END_TV_DTM = WI.START_TV_DTM - INTERVAL '1' SECOND,
     EDW_UPDATE_DTM = CURRENT_TIMESTAMP(0)
 WHERE MT.SALES_ORDER_LINE_KEY = WI.SALES_ORDER_LINE_KEY
   AND MT.DV_ENTERPRISE_INV_SKU_ID = WI.DV_ENTERPRISE_INV_SKU_ID
   AND MT.START_TV_DTM <> WI.START_TV_DTM
   AND MT.END_TV_DTM = '3500-01-01 00:00:00' ;


Post SQL : 
CALL COLLECT_STATS_WRAP('$$SLSORDDB','MT_AR_SLS_MOTION_ATTRIB','D');

/* Commented as SMT updates are taken care in wf_EL_SOL_SMT_SMC ETL as part of Aug 16th release */
/* UPDATE MT_AR
FROM $$SLSORDVWDB.MT_AR_SLS_MOTION_ATTRIB MT_AR,
 (SEL * FROM $$SLSORDVWDB.N_ATTR_PRDT_AS_NEW_OR_RNWL_TV O WHERE END_TV_DTM = '3500-01-01 00:00:00'
AND SALES_MOTION_CD = 'RENEW'
AND EXISTS (SEL 1 FROM $$SLSORDVWDB.N_ATTR_PRDT_AS_NEW_OR_RNWL_TV I WHERE I.START_TV_DTM > CURRENT_DATE-2 
     AND I.END_TV_DTM = '3500-01-01 00:00:00' 
	 AND I.SALES_MOTION_CD = 'RENEW'
	 AND I.SALES_ORDER_LINE_KEY = O.SALES_ORDER_LINE_KEY)
QUALIFY ROW_NUMBER()  OVER  (PARTITION BY  SALES_ORDER_LINE_KEY ORDER BY 
  ( CASE  WHEN  SALES_MOTION_TIMING_CD = 'ONTIME' THEN 6  WHEN SALES_MOTION_TIMING_CD= 'LATE IN QUARTER'  THEN 5  
  WHEN  SALES_MOTION_TIMING_CD = 'EARLY'  THEN 4 WHEN SALES_MOTION_TIMING_CD = 'LATE' THEN 3 
  WHEN SALES_MOTION_TIMING_CD= 'RECAPTURE'  THEN  2 WHEN SALES_MOTION_TIMING_CD= 'UNKNOWN'  THEN  1 END )
  DESC)= 1) NATTR
 SET SALES_MOTION_TIMING_CD = NATTR.SALES_MOTION_TIMING_CD
  WHERE MT_AR.SALES_ORDER_LINE_KEY = NATTR.SALES_ORDER_LINE_KEY
AND MT_AR.SALES_MOTION_CD = NATTR.SALES_MOTION_CD
 AND NATTR.SALES_MOTION_CD = 'RENEW'
AND MT_AR.END_TV_DTM = '3500-01-01 00:00:00'
AND COALESCE(MT_AR.SALES_MOTION_TIMING_CD, 'UNKNOWN') <> COALESCE(NATTR.SALES_MOTION_TIMING_CD, 'UNKNOWN');
*/

/*UPDATE MT FROM
$$SLSORDVWDB.MT_AR_SLS_MOTION_ATTRIB  MT
,$$STGDB.SMT_RETRO_UPD SMTR
SET SALES_MOTION_TIMING_CD = SMTR.SALES_MOTION_TIMING_CD,
    EDW_UPDATE_USER='CISCO_BOOKED_DATE_SMT_UPD'
WHERE MT.SALES_ORDER_LINE_KEY = SMTR.SALES_ORDER_LINE_KEY
AND MT.SALES_MOTION_CD = 'RENEW'
AND MT.SALES_MOTION_TIMING_CD='UNKNOWN'
AND MT.END_TV_DT= '3500-01-01'
AND COALESCE( MT.SALES_MOTION_TIMING_CD, 'UNKNOWN')  <> COALESCE(SMTR.SALES_MOTION_TIMING_CD, 'UNKNOWN') ;*/